<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MindFusion.Spreadsheet.WinForms</name>
    </assembly>
    <members>
        <member name="T:MindFusion.Spreadsheet.WorkbookPrinter">
            <summary>
            Provides print and print preview for workbook objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.#ctor">
            <summary>
            Initializes a new instance of the WorkbookPrinter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.#ctor(System.Windows.Forms.IWin32Window)">
            <summary>
            Initializes a new instance of the WorkbookPrinter class with
            the specified owner window.
            </summary>
            <param name="owner">
            The window that will be used as the owner of the print preview dialog,
            or null, to use the default owner.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.Print(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Displays the standard print dialog and prints the specified workbook.
            </summary>
            <param name="workbook">
            The workbook to print.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.Print(MindFusion.Spreadsheet.Workbook,System.Drawing.Printing.PrintDocument)">
            <summary>
            Prints the specified workbook using the specified print document.
            </summary>
            <param name="workbook">
            The workbook to print.
            </param>
            <param name="printDocument">
            The PrintDocument to use for printing.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.PrintPreview(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Displays the standard print preview form for the specified workbook.
            </summary>
            <param name="workbook">
            The workbook to preview.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.PrintPreview(MindFusion.Spreadsheet.Workbook,System.Drawing.Printing.PrintDocument)">
            <summary>
            Displays the standard print preview form for the specified workbook.
            </summary>
            <param name="workbook">
            The workbook to preview.
            </param>
            <param name="printDocument">
            The PrintDocument to use for the preview.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.BeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Handles the PrintDocument.BeginPrint event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Handles the PrintDocument.PrintPage event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.PrintWorksheet(MindFusion.Spreadsheet.Worksheet,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Prints the page with the specified index of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookPrinter.PrintHeader(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Renders the print page header during printing and previewing.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.DocumentName">
            <summary>
            Gets or sets the name of the printed document.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.Margins">
            <summary>
            Gets or sets the margins for the printed pages, expressed
            in hundredths of an inch.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.HeaderFormat">
            <summary>
            Gets or sets the format of page headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.Scale">
            <summary>
            Gets or sets the scale of the print output relatively to the
            original on-screen size of the workbook, expressed in percents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.FromWorksheet">
            <summary>
            Gets or sets the zero-based index of the first worksheet to print.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.ToWorksheet">
            <summary>
            Gets or sets the zero-based index of the last worksheet to print, or -1,
            to print to the last worksheet in the workbook.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.EnableGridLines">
            <summary>
            Gets or sets a value indicating whether to print the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.EnableObjects">
            <summary>
            Gets or sets a value indicating whether to print drawing objects.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.PageOrder">
            <summary>
            Gets or sets the order of printed pages.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookPrinter.Landscape">
            <summary>
            Gets or sets a value indicating whether	the page is printed in landscape or portrait orientation.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.NamedRangeCollection">
            <summary>
            Represents a specialized collection of NamedRange objects.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.NamedCollection`1">
            <summary>
            Represents a collection of objects that can be manipulated by name.
            The objects in the collection are required to have unique names.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.UndoableCollection`1">
            <summary>
            Represents a strongly-typed collection that supports undo and redo.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the UndoableCollection&lt;T&gt; class.
            </summary>
            <param name="workbook">
            The Workbook object this collection belongs to.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.GetEnumerator">
            <summary>
            IEnumerator&lt;T&gt;.GetEnumerator implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable.GetEnumerator explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this collection to the specified array
            starting at the specified index within the array.
            </summary>
            <param name="array">
            A one-dimensional array that is the destination of the copied elements.
            </param>
            <param name="index">
            The zero-based index in array at which copying begins.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the CollectionChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.TrackAdd(System.Int32,`0)">
            <summary>
            Adds the specified item to the collection. If undo is enabled,
            the item is added through a command. Otherwise, the item
            is added directly.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.DoAdd(System.Int32,`0)">
            <summary>
            Effectively adds the specified item to the collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.DoAddRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Effectively adds the specified items to the collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.TrackRemove(System.Int32,`0)">
            <summary>
            Removes the specified item to the collection. If undo is enabled,
            the item is removed through a command. Otherwise, the item
            is removed directly.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.DoRemove(System.Int32,`0)">
            <summary>
            Effectively removes the specified item from the collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.TrackReplace(System.Int32,`0,`0)">
            <summary>
            Removes the specified item in the collection. If undo is enabled,
            the item is replaced through a command. Otherwise, the item
            is replaced directly.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.TrackMove(System.Int32,System.Int32,`0)">
            <summary>
            Moves the specified item to another position. If undo is enabled,
            the item is moved through a command. Otherwise, the item is
            moved directly.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.DoMove(System.Int32,System.Int32,`0)">
            <summary>
            Effectively moves the specified item.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.TrackClear">
            <summary>
            Clears the collection. If undo is enabled, the collection is cleared
            through a command. Otherwise, the collection is cleared directly.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.DoClear">
            <summary>
            Effectively clears the collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.IndexOf(`0)">
            <summary>
            Searches for the specified item and returns the zero-based index of the
            first occurrence within the entire collection.
            </summary>
            <param name="item">
            The item to locate in the collection.
            </param>
            <returns>
            The zero-based index of the first occurrence of item within the collection, if found; otherwise, –1.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoableCollection`1.Contains(`0)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="item">
            The item to locate in the collection.
            </param>
            <returns>
            true if item is found in the collection; otherwise, false.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.UndoableCollection`1.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.UndoableCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.UndoableCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.UndoableCollection`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the item to get.
            </param>
            <returns>
            The item at the specified index.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.UndoableCollection`1.Workbook">
            <summary>
            Gets a reference to the parent Workbook object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.UndoableCollection`1.CollectionChanged">
            <summary>
            Raised when the collection is changed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedCollection`1.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the NamedCollection&lt;T&gt; class.
            </summary>
            <param name="workbook">
            The Workbook object this collection belongs to.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            UndoableCollection&lt;T&gt;.OnCollectionChanged override.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedCollection`1.OnItemPropertyValueChanged(System.Object,MindFusion.Spreadsheet.PropertyEventArgs)">
            <summary>
            Handles the PropertyValueChanged event of all underlying items.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedCollection`1.OnItemRenamed(MindFusion.Spreadsheet.ItemRenamedEventArgs{`0})">
            <summary>
            Raises the ItemRenamed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedCollection`1.Contains(System.String)">
            <summary>
            Determines whether an element with the specified name is in the collection.
            </summary>
            <param name="name">
            The name of the item to locate in the collection.
            </param>
            <returns>
            true if item with the specified name is found in the collection; otherwise, false.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.NamedCollection`1.Item(System.String)">
            <summary>
            Gets the item with the specified name. If there is no item
            with the specified name, the indexer has no effect.
            </summary>
            <param name="name">
            The name of the item to get.
            </param>
            <returns>
            The item with the specified name.
            </returns>
        </member>
        <member name="E:MindFusion.Spreadsheet.NamedCollection`1.ItemRenamed">
            <summary>
            Raised when one of the items in the collection is renamed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRangeCollection.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the NamedRangeCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRangeCollection.CopyTo(MindFusion.Spreadsheet.NamedRange[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array, starting at the specified index.
            </summary>
            <param name="array">
            A one-dimensional array that is the destination of the copied elements.
            </param>
            <param name="arrayIndex">
            The zero-based index in array at which copying begins.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRangeCollection.Add(MindFusion.Spreadsheet.NamedRange)">
            <summary>
            Adds the specified element to the collection.
            </summary>
            <param name="item">
            The element to add to the collection.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRangeCollection.Insert(System.Int32,MindFusion.Spreadsheet.NamedRange)">
            <summary>
            Inserts the specified element at the specified index in the collection.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">
            The element to insert into the collection.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRangeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRangeCollection.Remove(MindFusion.Spreadsheet.NamedRange)">
            <summary>
            Removes the specified element from the collection.
            </summary>
            <param name="item">
            The element to remove from the collection.
            </param>
            <returns>
            true if item was successfully removed from the collection; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRangeCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.NamedRangeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to get or set.
            </param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.NamedRangeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Measure">
            <summary>
            Represents amounts of specific units.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the Measure class.
            </summary>
            <param name="amount">
            The number of pixels represented by the new object.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.#ctor(System.Double,MindFusion.Spreadsheet.MeasureUnit)">
            <summary>
            Initializes a new instance of the Measure class.
            </summary>
            <param name="amount">
            The amount represented by the new object.
            </param>
            <param name="unit">
            The measure unit of the new object.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Measure class.
            </summary>
            <param name="value">
            A string representing the amount and, optionally, units of measure.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.#ctor(System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the Measure class.
            </summary>
            <param name="value">
            A string representing the amount and, optionally, units of measure.
            </param>
            <param name="provider">
            An IFormatProvider object that is used to interpret the specified value.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>
            The string representation of the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.ToString(System.IFormatProvider)">
            <summary>
            Returns a string representation of the current measure.
            </summary>
            <param name="provider">
            An IFormatProvider object that is used to format the amount.
            </param>
            <returns>
            The string representation of the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
            <param name="obj">
            The object to compare to this measure.
            </param>
            <returns>
            true if the specified object is a Measure equal to this object; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.Equals(MindFusion.Spreadsheet.Measure)">
            <summary>
            Determines whether the specified measure is equal to the current measure.
            </summary>
            <param name="other">
            The object to compare to this measure.
            </param>
            <returns>
            true if the specified measure is equal to this object; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.op_Implicit(System.Double)~MindFusion.Spreadsheet.Measure">
            <summary>
            Converts the specified double value to a Measure object representing
            the same amount of pixels.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A Measure object representing the specified double value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.op_Implicit(System.String)~MindFusion.Spreadsheet.Measure">
            <summary>
            Converts the specified string to a Measure object.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A Measure object representing the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.op_Addition(MindFusion.Spreadsheet.Measure,System.Double)">
            <summary>
            Adds the specified amount to the specified Measure object.
            </summary>
            <param name="measure">
            The Measure object to add to.
            </param>
            <param name="value">
            The amount to add.
            </param>
            <returns>
            A new Measure object representing the new amount, in the same
            unit as the original object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.op_Subtraction(MindFusion.Spreadsheet.Measure,System.Double)">
            <summary>
            Subtracts the specified amount from the specified Measure object.
            </summary>
            <param name="measure">
            The Measure object to subtract from.
            </param>
            <param name="value">
            The amount to subtract.
            </param>
            <returns>
            A new Measure object representing the new amount, in the same
            unit as the original object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.op_Multiply(MindFusion.Spreadsheet.Measure,System.Double)">
            <summary>
            Multiplies the specified amount to the specified Measure object.
            </summary>
            <param name="measure">
            The Measure object to multiply to.
            </param>
            <param name="value">
            The multiplier.
            </param>
            <returns>
            A new Measure object representing the new amount, in the same
            unit as the original object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.op_Division(MindFusion.Spreadsheet.Measure,System.Double)">
            <summary>
            Divides the specified amount from the specified Measure object.
            </summary>
            <param name="measure">
            The Measure object to divide.
            </param>
            <param name="value">
            The divisor.
            </param>
            <returns>
            A new Measure object representing the new amount, in the same
            unit as the original object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.ConvertTo(MindFusion.Spreadsheet.MeasureUnit,System.Object)">
            <summary>
            Converts the amount represented by the current object to the specified unit.
            </summary>
            <param name="targetUnit">
            A MeasureUnit object representing the unit to convert to.
            </param>
            <param name="context">
            When converting between logical and device units this should be a Graphics or
            IGraphics object that provides device resolution information; otherwise this
            parameter is ignored.
            </param>
            <returns>
            A new Measure object that represents the original amount in the specified unit.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.Pixel(System.Double)">
            <summary>
            Creates a Measure instance of the MeasureUnit.Pixel unit
            from the specified double value.
            </summary>
            <param name="value">
            The amount represented by the new object.
            </param>
            <returns>
            A Measure object representing the specified double value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Measure.Point(System.Double)">
            <summary>
            Creates a Measure instance of the MeasureUnit.Point unit
            from the specified double value.
            </summary>
            <param name="value">
            The amount represented by the new object.
            </param>
            <returns>
            A Measure object representing the specified double value.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.Measure.Unit">
            <summary>
            Gets the unit of measure of the current object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Measure.Amount">
            <summary>
            Gets the amount represented by the current object.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Token">
            <summary>
            Represents a recognized token from a sequence of characters, which
            conforms to the MindFusion Spreadsheet Expressions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Token.#ctor(System.String,MindFusion.Spreadsheet.Expressions.TokenType)">
            <summary>
            Initializes a new instance of the Token class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Token.#ctor(System.String,MindFusion.Spreadsheet.Expressions.TokenType,System.Int32)">
            <summary>
            Initializes a new instance of the Token class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Token.ToString">
            <summary>
            Object.ToString override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Token.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Token.Clone">
            <summary>
            ICloneable.Clone implementation.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Token.text">
            <summary>
            The text of the token.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Token.type">
            <summary>
            The type of the token.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Token.index">
            <summary>
            The index of the token within the input string.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Token.Text">
            <summary>
            Gets the token text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Token.Type">
            <summary>
            Gets the token type.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Token.Index">
            <summary>
            Gets the index of this token in the input string.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Token.Length">
            <summary>
            Gets the length of this token.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.StyleCollection">
            <summary>
            Represents a specialized style collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the StyleCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetRowProxy(System.Int32)">
            <summary>
            Gets a style object for the specified row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetRowProxy(System.Int32,System.Int32)">
            <summary>
            Gets a style object for the specified rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetColumnProxy(System.Int32)">
            <summary>
            Gets a style object for the specified column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetColumnProxy(System.Int32,System.Int32)">
            <summary>
            Gets a style object for the specified columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetProxy(System.Int32,System.Int32)">
            <summary>
            Gets a style object for the specified cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetProxy(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Gets a style object for the cells in the specified range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetCellStyles(System.Drawing.Rectangle)">
            <summary>
            Gets all cell styles intersecting the specified range, right/bottom rows/columns excluded.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetRowStyles(System.Drawing.Rectangle)">
            <summary>
            Gets all row styles intersecting the specified range, bottom included.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetColumnStyles(System.Drawing.Rectangle)">
            <summary>
            Gets all column styles intersecting the specified range, right included.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetCellRegions(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns all cell style regions in the specified range, right/bottom rows/columns included.
            This method may return regions that do not actually intersect with the specified area.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetRowRegions(System.Int32,System.Int32)">
            <summary>
            Returns all row style regions in the specified range, bottom included.
            This method is guaranteed to return only intersecting regions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetColumnRegions(System.Int32,System.Int32)">
            <summary>
            Returns all column style regions in the specified range, right included.
            This method is guaranteed to return only intersecting regions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetCellStyle(System.Int32,System.Int32)">
            <summary>
            Gets the cell style of the cell with the specified coordinates.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetRowStyle(System.Int32)">
            <summary>
            Gets the style of the specified row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetColumnStyle(System.Int32)">
            <summary>
            Gets the style of the specified column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ApplyCellTransform(System.Drawing.Rectangle,System.Func{MindFusion.Spreadsheet.PlainRegion,System.Boolean},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Applies the specified transformation to the cell styles in the specified area,
            intersecting existing styles when necessary. All removed style regions are
            recorded in oldRegions. All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ApplyCellTransform(System.Drawing.Rectangle,System.Func{MindFusion.Spreadsheet.PlainRegion,System.Boolean},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Boolean)">
            <summary>
            Applies the specified transformation to the cell styles in the specified area,
            intersecting existing styles when necessary. All removed style regions are
            recorded in oldRegions. All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ApplyRowTransform(System.Drawing.Rectangle,System.Func{MindFusion.Spreadsheet.PlainRegion,System.Boolean},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Applies the specified transformation to the row styles in the specified area,
            intersecting existing styles when necessary. All removed style regions are
            recorded in oldRegions. All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ApplyRowTransform(System.Drawing.Rectangle,System.Func{MindFusion.Spreadsheet.PlainRegion,System.Boolean},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Boolean)">
            <summary>
            Applies the specified transformation to the row styles in the specified area,
            intersecting existing styles when necessary. All removed style regions are
            recorded in oldRegions. All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ApplyColumnTransform(System.Drawing.Rectangle,System.Func{MindFusion.Spreadsheet.PlainRegion,System.Boolean},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Applies the specified transformation to the column styles in the specified area,
            intersecting existing styles when necessary. All removed style regions are
            recorded in oldRegions. All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ApplyColumnTransform(System.Drawing.Rectangle,System.Func{MindFusion.Spreadsheet.PlainRegion,System.Boolean},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Boolean)">
            <summary>
            Applies the specified transformation to the column styles in the specified area,
            intersecting existing styles when necessary. All removed style regions are
            recorded in oldRegions. All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.CopyCellStyles(System.Drawing.Rectangle)">
            <summary>
            Copies the cell styles in the specified area.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.CopyRowStyles(System.Drawing.Rectangle)">
            <summary>
            Copies the row styles in the specified area.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.CopyColumnStyles(System.Drawing.Rectangle)">
            <summary>
            Copies the column styles in the specified area.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.CopyStyles(MindFusion.Spreadsheet.SpatialTree,System.Drawing.Rectangle)">
            <summary>
            Copies the styles in the specified area of the specified tree.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ApplySort(System.Drawing.Rectangle,MindFusion.Spreadsheet.SortDirection,System.Collections.Generic.List{System.Int32},System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Sorts the styles in the specified regions in the specified directon according
            to the specified reordering map.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.InsertDown(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Transforms the styles as if a number of cells are inserted between the specified columns,
            at the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.InsertRight(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Transforms the styles as if a number of cells are inserted between the specified rows,
            at the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.RemoveUp(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Transforms the styles as if a number of cells are removed between the specified columns,
            at the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.RemoveLeft(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Transforms the styles as if a number of cells are removed between the specified rows,
            at the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Transforms the styles as if a number of cells are moved
            from the source to the target location.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.MoveVertical(System.Int32,System.Int32,System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Transforms the styles as if a number of rows are moved from the specified index
            to the specified target index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.MoveHorizontal(System.Int32,System.Int32,System.Int32,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Transforms the styles as if a number of columns are moved from the specified index
            to the specified target index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ClearCellStyles(System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Clears all cell styles. The styles are recorded in oldRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ClearRowStyles(System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Clears all row styles. The styles are recorded in oldRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ClearColumnStyles(System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Clears all column styles. The styles are recorded in oldRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ClearCellStyle(System.Drawing.Rectangle,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Clears the cell styles in the specified area, intersecting existing styles
            when necessary. All removed style regions are recorded in oldRegions.
            All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ClearRowStyle(System.Drawing.Rectangle,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Clears the row styles in the specified area, intersecting existing styles
            when necessary. All removed style regions are recorded in oldRegions.
            All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ClearColumnStyle(System.Drawing.Rectangle,System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Clears the column styles in the specified area, intersecting existing styles
            when necessary. All removed style regions are recorded in oldRegions.
            All new style regions are recorded in newRegions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetCellRegions">
            <summary>
            Gets all cell style regions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.SetCellRegions(System.Collections.Generic.List{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Sets the cell style regions directly. The current style information is discarded.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.AddCellRegions(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Adds the specified regions directly to the cell style collection; no intersections are performed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.RemoveCellRegions(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Removes the specified regions directly to the cell style collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetRowRegions">
            <summary>
            Gets all row style regions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.SetRowRegions(System.Collections.Generic.List{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Sets the style regions directly. The current style information is discarded.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.AddRowRegions(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Adds the specified regions directly to the style collection; no intersections are performed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.RemoveRowRegions(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Removes the specified regions directly to the style collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.GetColumnRegions">
            <summary>
            Gets all column style regions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.SetColumnRegions(System.Collections.Generic.List{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Sets the style regions directly. The current style information is discarded.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.AddColumnRegions(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Adds the specified regions directly to the style collection; no intersections are performed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.RemoveColumnRegions(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Removes the specified regions directly to the style collection.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IConditionalFormatCollection">
            <summary>
            Represents a collection of IConditionalFormat objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IConditionalFormatCollection.Add">
            <summary>
            Creates a new IConditionalFormat object and adds it to the collection.
            </summary>
            <returns>
            The newly created IConditionalFormat object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.IConditionalFormatCollection.Add(MindFusion.Spreadsheet.ConditionalFormatType,MindFusion.Spreadsheet.ComparisonOperator,System.String,System.String)">
            <summary>
            Creates a new IConditionalFormat object with the specified attributes
            and adds it to the collection.
            </summary>
            <param name="type">
            The type of the new conditional format.
            </param>
            <param name="op">
            The comparison operator of the new conditional format.
            </param>
            <param name="first">
            The first value of the condition.
            </param>
            <param name="second">
            The second value of the condition.
            </param>
            <returns>
            The newly created IConditionalFormat object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.IConditionalFormatCollection.Remove(MindFusion.Spreadsheet.IConditionalFormat)">
            <summary>
            Removes the specified conditional format from the collection.
            </summary>
            <param name="format">
            The conditional format to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.IConditionalFormatCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IConditionalFormatCollection.HasMixedConditions">
            <summary>
            Gets a value indicating whether the collection contains overlapping
            conditional formats.
            </summary>
            <remarks>
            If the collection contains mixed conditions, it cannot be enumerated.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.IValidation">
            <summary>
            Represents data validation associated with a range of cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IValidation.Reset">
            <summary>
            Resets the validation to the default.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.Worksheet">
            <summary>
            Gets the worksheet this validation is associated with.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.Type">
            <summary>
            Gets or sets the validation type.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.Operator">
            <summary>
            Gets or sets the comparison operator, for validation types that require an operator.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.First">
            <summary>
            Gets or sets the first value of the validation. This value
            is interpreted differently depending on the type of the validation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.FirstInvariant">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.Second">
            <summary>
            Gets or sets the second value of the validation. This value
            is interpreted differently depending on the type of the validation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.SecondInvariant">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.AllowBlankCells">
            <summary>
            Gets or sets a value indicating whether the validation should be skipped for blank cells.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.ShowError">
            <summary>
            Gets or sets a value indicating whether to display error messages when the validation fails.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.ShowInputMessage">
            <summary>
            Gets or sets a value indicating whether to display information message when a cell in the
            validated range is selected.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.ShowDropdownList">
            <summary>
            Gets or sets a value indicating whether to display drop-down list when a cell in the
            validated range is selected and the validation type is set to List.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.SortListEntries">
            <summary>
            Gets or sets a value indicating whether to sort the entries in the drop-down list.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.ErrorAction">
            <summary>
            Gets or sets the action to perform when the validation fails.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.ErrorTitle">
            <summary>
            Gets or sets the title of the error message.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.InputTitle">
            <summary>
            Gets or sets the title of the input message.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.InputMessage">
            <summary>
            Gets or sets the input message.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.OriginColumn">
            <summary>
            Gets or sets the origin column of this validation.
            All relative references in expressions associated with
            this validation are calculated based on this value.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IValidation.OriginRow">
            <summary>
            Gets or sets the origin row of this validation.
            All relative references in expressions associated with
            this validation are calculated based on this value.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ProxyValidation.GetValue``1(System.Func{MindFusion.Spreadsheet.IValidation,``0})">
            <summary>
            Gets the value of a property (defined by the specified delegate)
            if this value is identical across all styles in the underlying range.
            Otherwise returns default(T).
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ProxyValidation.SetValue``1(System.Func{MindFusion.Spreadsheet.IValidation,``0,``0},System.String,``0)">
            <summary>
            Sets the value of a property (defined by the specified delagate) across
            all validations in the underlying range. If value is null unsets the property.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IStyle">
            <summary>
            Represents the style of an element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IStyle.Reset">
            <summary>
            Resets the style to the default style.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IStyle.ResetValidation">
            <summary>
            Resets the validation associated with this style to the default validation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IStyle.ResetConditionalFormats">
            <summary>
            Resets the conditional formats associated with this style.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.Worksheet">
            <summary>
            Gets the worksheet this style is associated with.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.Id">
            <summary>
            Gets or sets the style identifier.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.Index">
            <summary>
            Gets or sets the style index.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.Background">
            <summary>
            Gets or sets the background.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderLeftColor">
            <summary>
            Gets or sets the color of the left border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderLeftSize">
            <summary>
            Gets or sets the thickness of the left border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderLeftStyle">
            <summary>
            Gets or sets the style of the left border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderTopColor">
            <summary>
            Gets or sets the color of the top border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderTopSize">
            <summary>
            Gets or sets the thickness of the top border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderTopStyle">
            <summary>
            Gets or sets the style of the top border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderRightColor">
            <summary>
            Gets or sets the color of the right border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderRightSize">
            <summary>
            Gets or sets the thickness of the right border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderRightStyle">
            <summary>
            Gets or sets the style of the right border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderBottomColor">
            <summary>
            Gets or sets the color of the bottom border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderBottomSize">
            <summary>
            Gets or sets the thickness of the bottom border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.BorderBottomStyle">
            <summary>
            Gets or sets the style of the bottom border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.PrimaryDiagonalColor">
            <summary>
            Gets or sets the color of the primary diagonal.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.PrimaryDiagonalSize">
            <summary>
            Gets or sets the thickness of the primary diagonal.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.PrimaryDiagonalStyle">
            <summary>
            Gets or sets the style of the primary diagonal.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.SecondaryDiagonalColor">
            <summary>
            Gets or sets the color of the secondary diagonal.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.SecondaryDiagonalSize">
            <summary>
            Gets or sets the thickness of the secondary diagonal.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.SecondaryDiagonalStyle">
            <summary>
            Gets or sets the style of the secondary diagonal.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.Format">
            <summary>
            Gets or sets the format of the element's contents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.FontName">
            <summary>
            Gets or sets the name of the font of the element's text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.FontSize">
            <summary>
            Gets or sets the size of the font of the element's text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.FontBold">
            <summary>
            Gets or sets a value indicating whether the element's text is bold.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.FontItalic">
            <summary>
            Gets or sets a value indicating whether the element's text is italic.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.FontUnderline">
            <summary>
            Gets or sets a value indicating whether the element's text is underlined.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.FontStrikeout">
            <summary>
            Gets or sets a value indicating whether the element's text is with a line through the middle.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.TextColor">
            <summary>
            Gets or sets the color of the element's text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the element's contents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the element's contents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.WrapText">
            <summary>
            Gets or sets a value indicating whether to wrap the element's text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.Indent">
            <summary>
            Gets or sets the indentation of the element's text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.PaddingLeft">
            <summary>
            Gets or sets the left padding of the element's contents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.PaddingTop">
            <summary>
            Gets or sets the top padding of the element's contents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.PaddingRight">
            <summary>
            Gets or sets the right padding of the element's contents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.PaddingBottom">
            <summary>
            Gets or sets the bottom padding of the element's contents.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.Validation">
            <summary>
            Gets an object that can be used to specify validation rules.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IStyle.ConditionalFormats">
            <summary>
            Gets a list with the conditional formats associated with this style.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ProxyStyle.GetValue``1(System.Func{MindFusion.Spreadsheet.Style,``0})">
            <summary>
            Gets the value of a property (defined by the specified delegate)
            if this value is identical across all styles in the underlying range.
            Otherwise returns default(T).
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.StyleCollection.ProxyStyle.SetValue``1(System.Action{MindFusion.Spreadsheet.Style,``0},``0)">
            <summary>
            Sets the value of a property (defined by the specified delagate)
            across all styles in the underlying range. If value is null unsets
            the property.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.StyleCollection.ProxyCellStyle">
            <summary>
            Represents a special IStyle implementation which can represent the style of a single
            cell or a range of cells and when modified performs a series of operations to ensure
            the integrity of the underlying style system.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.StyleCollection.ProxyRowStyle">
            <summary>
            Represents a special IStyle implementation which can represent the style of a single
            row or a range of rows and when modified performs a series of operations to ensure
            the integrity of the underlying style system.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IRowStyle">
            <summary>
            Represents the style of a row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IRowStyle.Group">
            <summary>
            Increases the outline level of the rows by one.
            </summary>
            <returns>
            true, if grouping was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.IRowStyle.Ungroup">
            <summary>
            Decreases the outline level of the rows by one.
            </summary>
            <returns>
            true, if grouping was successful; otherwise, false.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.IRowStyle.Height">
            <summary>
            Gets or sets the height of the row, or null, to use the default width.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IRowStyle.IsHidden">
            <summary>
            Gets or sets a value indicating whether the row is hidden.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IRowStyle.OutlineLevel">
            <summary>
            Gets or sets the outline level of the row, or null, if the row is not grouped.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.StyleCollection.ProxyColumnStyle">
            <summary>
            Represents a special IStyle implementation which can represent the style of a single
            column or a range of columns and when modified performs a series of operations to ensure
            the integrity of the underlying style system.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IColumnStyle">
            <summary>
            Represents the style of a column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IColumnStyle.Group">
            <summary>
            Increases the outline level of the columns by one.
            </summary>
            <returns>
            true, if grouping was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.IColumnStyle.Ungroup">
            <summary>
            Decreases the outline level of the columns by one.
            </summary>
            <returns>
            true, if grouping was successful; otherwise, false.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.IColumnStyle.Width">
            <summary>
            Gets or sets the width of the column, or null, to use the default width.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IColumnStyle.IsHidden">
            <summary>
            Gets or sets a value indicating whether the column is hidden.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IColumnStyle.OutlineLevel">
            <summary>
            Gets or sets the outline level of the column, or null, if the column is not grouped.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Interaction">
            <summary>
            Tracks mouse messages to implement user interaction with the a grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Interaction.#ctor(MindFusion.Spreadsheet.GridView)">
            <summary>
            Initializes a new instance of the Interaction class.
            </summary>
            <param name="view">
            A GridView where the interaction takes place.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Interaction.OnMouseDown(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Invoked when the mouse button is pressed.
            </summary>
            <param name="mousePosition">
            A Point instance that specifies the mouse pointer position.
            </param>
            <param name="mouseButton">
            A member of the MouseButtons enumeration.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Interaction.OnMouseMove(System.Drawing.Point)">
            <summary>
            Invoked when the mouse moves.
            </summary>
            <param name="mousePosition">
            A Point instance that specifies the mouse pointer position.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Interaction.OnMouseUp(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Invoked when the mouse button is released.
            </summary>
            <param name="mousePosition">
            A Point instance that specifies the mouse pointer position.
            </param>
            <param name="mouseButton">
            A member of the MouseButtons enumeration.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Interaction.SupportsAutoScroll">
            <summary>
            Gets a value indicating whether auto-scrolling is enabled during this interaction.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Interaction.CancelDrag">
            <summary>
            Invoked when the operation should be cancelled.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Interaction.View">
            <summary>
            Gets a reference to the GridView control this interaction is associated with.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Interaction.Worksheet">
            <summary>
            Gets a reference to the associated worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Interaction.IsInteracting">
            <summary>
            Gets a value indicating whether the interaction is currently active, that is,
            whether an actual action is being performed by the user.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.FormatHelper">
            <summary>
            Provides helper methods for formatting numerical values
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.HtmlExporterBase">
            <summary>
            Represents the base class for HTML exporters.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.HtmlExporterBase.#ctor">
            <summary>
            Initializes a new instance of the HtmlExporterBase class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.HtmlExporterBase.Export(MindFusion.Spreadsheet.Workbook,System.String)">
            <summary>
            Exports the specified workbook as an HTML page.
            </summary>
            <param name="workbook">
            The workbook to export.
            </param>
            <param name="filePath">
            A string specifying the path to the .html file.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.HtmlExporterBase.ProcessImage(System.Drawing.Image,System.Boolean)">
            <summary>
            Saves the specified image as a file and returns the url that should
            be included in the HTML file, or null, to embed the image.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.HtmlExporterBase.ImageToBase64(System.Drawing.Image)">
            <summary>
            Converts the specified image to a base-64 string.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.Title">
            <summary>
            Gets or sets the title of the resulting HTML.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.EnableGridLines">
            <summary>
            Gets or sets a value indicating whether to export the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.FromWorksheet">
            <summary>
            Gets or sets the zero-based index of the first worksheet to export.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.ToWorksheet">
            <summary>
            Gets or sets the zero-based index of the last worksheet to export,
            or -1, to export to the last worksheet in the workbook.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.MetaTags">
            <summary>
            Gets a list with the names and values of the meta-tags to
            be included in the resulting HTML.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.WrapOverflowingContent">
            <summary>
            Gets or sets a value indicating whether overflowing text content will
            instead wrap. Otherwise overflowing content in the exported HTML will
            be clipped inside the containing cell.
            </summary>
            <remarks>
            Setting this property to false may result in diminishing performance
            for worksheets with large amount of data.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.Encoding">
            <summary>
            Gets or sets the encoding used.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.EnablePictures">
            <summary>
            Gets or sets a value indicating whether to export pictures.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporterBase.EnableCharts">
            <summary>
            Gets or sets a value indicating whether the charts in
            the workbook are exported. The charts are exported as images.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames">
            <summary>
            Provides common HTML meta-tag names.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Abstract">
            <summary>
            The "abstract" tag. Define a secondary description. 
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Author">
            <summary>
            The "author" tag. Records the name of the author of the document.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Classification">
            <summary>
            The "classification" tag. Classify the site into the appropriate category.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Copyright">
            <summary>
            The "copyright" tag. Used to include copyright information in the document.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Description">
            <summary>
            The "description" tag. Some search engines pick up this description to show with the results of searches.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Distribution">
            <summary>
            The "distribution" tag. Declares whether a document is available to
            the web or on an intranet. Possible content values are "Global", "Local", "IU".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.DocClass">
            <summary>
            The "doc-class" tag. Indicates completion status of document. Possible
            values are "Completed", "Draft", "Living Document", "Published".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.DocRights">
            <summary>
            The "doc-rights" tag. Indicates copyright status of document. Possible
            values are "Copywritten Work", "Private", "Public", "Public Domain".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.DocType">
            <summary>
            The "doc-type" tag. Specifies type of document. Possible content values
            are "Confidential Company Papers", "eZine", "Government", "Journal",
            "Manuscript", "Paper", "Private", "Public", "Web Page", "White Paper".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Expires">
            <summary>
            The "expires" tag. Expiration date of the document.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Generator">
            <summary>
            The "generator" tag. The name of the program that created the document.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Googlebot">
            <summary>
            The "googlebot" tag. Define pages to be excluded from googebot indexing.
            Possible content values are "all", "index, follow", "noindex, follow",
            "index, nofollow", "noindex, nofollow", "none", "nosnippet", "noarchive".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Keywords">
            <summary>
            The "keywords" tag. Inform search engines what your web site or page is about.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.MSSmartTagsPreventParsing">
            <summary>
            The "MSSmartTagsPreventParsing" tag. Use this tag to prevent
            any Microsoft product from automatically generating smart tags.
            Possible content value is "TRUE".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Owner">
            <summary>
            The "owner" tag. Define the owner of the page or site.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.ProgId">
            <summary>
            The "progid" tag.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Rating">
            <summary>
            The "rating" tag. A simple rating for a site.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Refresh">
            <summary>
            The "refresh" tag. Indicates the document displays for a specified
            amount of time before switching to a new URL. The content value should
            be in the format "n;url", where "n" is the number of seconds to wait
            before loading the URL specified by "url".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.ReplyTo">
            <summary>
            The "reply-to" tag. Email address of contact for document.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.ResourceType">
            <summary>
            The "resource-type" tag. Indicates the type of web resource. Possible
            content value is "document".
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.RevisitAfter">
            <summary>
            The "revisit-after" tag. Defines how often search engine spiders
            should revisit your site.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HtmlExporterBase.MetaTagNames.Robots">
            <summary>
            The "robots" tag. Defines pages to be excluded from robot indexing.
            Possible values are "all", "index, follow", "noindex, follow",
            "index, nofollow", "noindex, nofollow", "none", "noimageindex".
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Lexer">
            <summary>
            Provides capabilities for recognizing character sequences in
            MindFusion Spreadsheet Expressions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the Lexer class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Next">
            <summary>
            Attempts to parse the next token from the input string.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.ToString">
            <summary>
            Object.ToString override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Add(MindFusion.Spreadsheet.Expressions.Token)">
            <summary>
            Adds the specified recognized token to the underlying lists.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Match(System.Char)">
            <summary>
            Matches the specified character against the character
            at the current position within the underlying string.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Match(System.String)">
            <summary>
            Matches the specified string against the substring at the
            current position within the underlying string.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Match(System.Text.RegularExpressions.Regex)">
            <summary>
            Matches the specified regex against the string starting
            from the current position within the underlying string.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Match(System.Text.RegularExpressions.Regex,System.Int32@)">
            <summary>
            Matches the specified regex against the string starting
            from the current position within the underlying string.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Ws">
            <summary>
            Recognizes a whitespace token.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Ob">
            <summary>
            Recognizes an opening bracket.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Cb">
            <summary>
            Recognizes a closing bracket.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Ocb">
            <summary>
            Recognizes an opening curly bracket.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Ccb">
            <summary>
            Recognizes a closing curly bracket.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Vline">
            <summary>
            Recognizes a vertical line.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpConcat">
            <summary>
            Recognizes an ampersand '&amp;'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpExponent">
            <summary>
            Recognizes an exponent '^'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpPlus">
            <summary>
            Recognizes a plus sign '+'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpMinus">
            <summary>
            Recognizes a minus sign '-'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpMultiply">
            <summary>
            Recognizes a multiplication operator '*'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpDivide">
            <summary>
            Recognizes a division operator '/'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpPercent">
            <summary>
            Recognizes a percent operator '%'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpLess">
            <summary>
            Recognizes a less than comparison operator '&lt;'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpGreater">
            <summary>
            Recognizes a greater than comparison operator '&gt;'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpEqual">
            <summary>
            Recognizes an equal comparison operator '='.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpNotEqual">
            <summary>
            Recognizes a not equal comparison operator '&lt;&gt;'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpLessOrEqual">
            <summary>
            Recognizes a less than or equal comparison operator '&lt;='.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpGreaterOrEqual">
            <summary>
            Recognizes a greater than or equal comparison operator '&gt;='.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpDot">
            <summary>
            Recognizes a member access operator '.'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpSheetRef">
            <summary>
            Recognizes a cell reference on another sheet '!'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.OpCellRange">
            <summary>
            Recognizes a cell range operator ':'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Comma">
            <summary>
            Recognizes comma ','.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Semicolon">
            <summary>
            Recognizes semicolon ';'.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.SheetRef">
            <summary>
            Recognizes a sheet reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.FunctionCall">
            <summary>
            Recognizes a function calls.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.CellRef">
            <summary>
            Recognizes a cell reference.
            </summary>
            <remarks>
            Valid cell references include:
            Numbers only: 1,2,.. (currently NOT supported)
            Letters only: A,B,.. (currently NOT supported)
            Numbers and letters combinations: A1,AC3,BD11,..
            All of the above prefixed by $ sign: $1,$A,$A1,A$1,$A$1,..
            Also recognizes references in the R1C1-style format.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Identifier">
            <summary>
            Recognizes an identifier.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.String">
            <summary>
            Recognizes a string literal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.IntNumber">
            <summary>
            Recognizes an integer number.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.Error">
            <summary>
            Recognizes an error literal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.FloatNumber">
            <summary>
            Recognizes a float number.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Lexer.GetTokens">
            <summary>
            Gets the list of tokens produced by the lexer.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.sheetRegex">
            <summary>
            Regular expression for sheet references.
            </summary>
            <remarks>
            Matches either anything enclosed by single quotes and followed
            by an exclamation mark, or a proper identifier followed by an
            exclamation mark. Captures the identifier in 'name'.
            </remarks>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.functionRegex">
            <summary>
            Regular expression for function identifiers.
            </summary>
            <remarks>
            Matches proper identifiers followed by an opening bracket. Captures
            the identifier in 'name'.
            </remarks>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.identifierRegex">
            <summary>
            Regular expression for identifiers.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.stringRegex">
            <summary>
            Regular expression for string literals.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.intNumberRegex">
            <summary>
            Regular expression for integer numbers.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.errorRegex">
            <summary>
            Regular expression for error literals.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.referenceRegexOld">
            <summary>
            Regular expression for cell references in the old format.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.referenceRegex">
            <summary>
            Regular expression for cell references.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.floatNumberRegexes">
            <summary>
            Regular expression for float numbers for different locales.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.wsRegex">
            <summary>
            Regular expression for whitespaces.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.prefixRegex">
            <summary>
            Regular expression for the formula prefix sign '='.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.locale">
            <summary>
            The current locale.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.floatNumberRegex">
            <summary>
            The float number regular expression for the specified locale.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.tokens">
            <summary>
            The sequence of recognized tokens.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.allTokens">
            <summary>
            The sequence of tokens, including whitespaces.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.current">
            <summary>
            The current processing position.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.input">
            <summary>
            The input string.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Lexer.startedContent">
            <summary>
            Indicates that lexer has started processing the actual expression,
            that is, the portion after the equal sign.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Lexer.Done">
            <summary>
            Gets a value indicating whether the lexer has processed the entire input string.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Lexer.TokenList">
            <summary>
            Represents an enumerable list of tokens. The tokens in the list
            are not parsed until after they are requested.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ExpressionTreeComparer">
            <summary>
            Performs comparison of expression trees.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeComparer.AreEqual(MindFusion.Spreadsheet.Expressions.ExpressionTreeNode,MindFusion.Spreadsheet.Expressions.ExpressionTreeNode)">
            <summary>
            Checks if the specified expression trees represent equal
            (though not necessarily identical) expressions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeComparer.GetOffset(MindFusion.Spreadsheet.Expressions.ExpressionTreeNode,MindFusion.Spreadsheet.Expressions.ExpressionTreeNode)">
            <summary>
            Checks if the specified expression trees represent equivalent
            with precision of reference offset, and returns this offset.
            For example, 'A1' and 'B2' are equivalent expressions with
            precision (1, 1).
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RemoveItemCommand`1">
            <summary>
            Implements deletion of items from a collection.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Command">
            <summary>
            Represents an action that modifies the workbook and whose effects can be undone.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Command.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the Command class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Command.Commit">
            <summary>
            A shortcut method for executing the command through the undo engine.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Command.Execute">
            <summary>
            Carries out an action that changes the workbook in some way.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Command.Undo">
            <summary>
            Undoes an action, restoring the workbook to the state it was in
            before carrying out the action.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Command.Redo">
            <summary>
            Repeats an action that has been undone.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Command.Workbook">
            <summary>
            Gets the Workbook modified by this Command object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Command.HasEffect">
            <summary>
            Gets a value indicating whether the command does anything.
            </summary>
            <remarks>
            Commands that have no effect are not stored in the undo history.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.RemoveItemCommand`1.#ctor(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.UndoableCollection{`0},System.Int32,`0)">
            <summary>
            Initializes a new instance of the RemoveItemCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
            <param name="collection">
            The collection from which the item is deleted.
            </param>
            <param name="index">
            The zero-based index of the item within the collection.
            </param>
            <param name="item">
            The item that should be removed from the collection.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.RemoveItemCommand`1.Execute">
            <summary>
            Command.Execute override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RemoveItemCommand`1.Undo">
            <summary>
            Command.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RemoveItemCommand`1.Redo">
            <summary>
            Command.Redo override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.OperationTreeVisitor`1">
            <summary>
            Represents a visitor which performs a custom operation on the visited nodes.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellIndex">
            <summary>
            An immutable representation of a cell reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CellIndex class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellIndex class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.#ctor(System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the CellIndex class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.Translate(System.String,System.Int32,System.Int32)">
            <summary>
            Translates the cell reference, represented by the specified string, by the
            specified amount and returns a string representing the translated value.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.Translate(System.Int32,System.Int32)">
            <summary>
            Translates this cell reference by the specified amount, possibly
            producing an invalid reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.ToAbsolute">
            <summary>
            Returns an equivalent CellIndex object with absolute rows and columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.ToRelative">
            <summary>
            Returns an equivalent CellIndex object with relative rows and columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.ToOldStringFormat">
            <summary>
            Returns a string representing the cell reference in the old format R1C1.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
            <param name="obj">
            The object to compare with the current object.
            </param>
            <returns>
            true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.GetColumnLetter(System.Int32)">
            <summary>
            Returns the character representation of the specified column.
            </summary>
            <param name="columnIndex">
            The zero-based index of the column.
            </param>
            <returns>
            The letter representing the column.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellIndex.GetColumnIndex(System.String)">
            <summary>
            Returns the zero-based index of the column with the specified character representation.
            </summary>
            <param name="columnLetter">
            The character representation of the column.
            </param>
            <returns>
            The zero-based index of the column.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellIndex.Column">
            <summary>
            Gets zero-based index of the reference column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellIndex.ColumnAbsolute">
            <summary>
            Gets a value indicating whether the reference column is absolute.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellIndex.Row">
            <summary>
            Gets the zero-based index of the reference row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellIndex.RowAbsolute">
            <summary>
            Gets a value indicating whether the reference row is absolute.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellIndex.IsValid">
            <summary>
            Gets a value indicating whether this object represents
            a valid cell reference.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellRef">
            <summary>
            An immutable representation of a reference to a single cell or a
            rectanglular area of cells, optionally including a sheet reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(MindFusion.Spreadsheet.CellIndex)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(MindFusion.Spreadsheet.CellIndex,System.String)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(MindFusion.Spreadsheet.CellIndex,MindFusion.Spreadsheet.CellIndex)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(MindFusion.Spreadsheet.CellIndex,MindFusion.Spreadsheet.CellIndex,System.String)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the CellRef class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.ToOldStringFormat">
            <summary>
            Returns a string representing the cell range in the old format R1C1.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
            <param name="obj">
            The object to compare with the current object.
            </param>
            <returns>
            true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.IsValidRef(System.String)">
            <summary>
            Checks whether the specified value represents a valid cell reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.ToAbsolute">
            <summary>
            Returns an equivalent CellRef object with absolute rows and columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.ToRelativeAndLocal">
            <summary>
            Returns an equivalent CellRef object with relative rows and columns, and no sheet reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.Normalize(System.String)">
            <summary>
            Returns an equivalent CellRef object with absolute rows and columns and the
            specified sheet, if the current CellRef does not have a sheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.Translate(System.Int32,System.Int32)">
            <summary>
            Translates the cell reference, by the specified amount and
            returns a string representing the translated value.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRef.RenameSheet(System.String)">
            <summary>
            Returns a new CellRef identical to the current CellRef with its SheetRef renamed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.IsMatrix">
            <summary>
            Gets a value indicating whether the range is an actual matrix, that is,
            it has at least 2 rows and 2 columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.IsRowVector">
            <summary>
            Gets a value indicating whether the range is a row vector, that is,
            it has exactly one row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.IsColumnVector">
            <summary>
            Gets a value indicating whether the range is a column vector, that is,
            it has exactly one column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.IsPoint">
            <summary>
            Gets a value indicating whether the range represents a single cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.IsValid">
            <summary>
            Gets a value indicating whether the range is a valid reference.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.Left">
            <summary>
            Gets the left side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.Right">
            <summary>
            Gets the right side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.Top">
            <summary>
            Gets the top side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.Bottom">
            <summary>
            Gets the bottom side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.Width">
            <summary>
            Gets the width of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.Height">
            <summary>
            Gets the height of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.TopLeft">
            <summary>
            Gets the top-left cell of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.BottomRight">
            <summary>
            Gets the bottom-right side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRef.SheetRef">
            <summary>
            Gets the name of the reference sheet (if available).
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.InteractiveObject">
            <summary>
            Represents a worksheet object that can be modified interactively by the user.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the InteractiveObject class.
            </summary>
            <param name="worksheet">
            The Worksheet this object belongs to.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.Dispose">
            <summary>
            Disposes this object of any unmanaged resources it might hold.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.OnResized">
            <summary>
            This method is called when the object's size is changed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            This method is called when the value of a property of this object is changed.
            Derived classes should call this method when their properties are changed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.OnWorksheetPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property of the worksheet this chart belongs to is changed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.OnAttach">
            <summary>
            This method is called when the object is added to a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.OnDetach">
            <summary>
            This method is called when the object is removed from a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.Invalidate">
            <summary>
            Raises an event notifying that this object changed visually.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.BringToFront">
            <summary>
            Brings this object to the top of the z-order.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.SendToBack">
            <summary>
            Sends this object to the bottom of the z-order.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.BringForward">
            <summary>
            Moves this object one step up in the z-order.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.SendBackward">
            <summary>
            Moves this object one step down in the z-order.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.RefactorSheet(System.String,System.String)">
            <summary>
            Replaces all references to the sheet with the specified old name
            in this object to be the specified new name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.RefactorReferences(System.Func{MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.CellRef})">
            <summary>
            Transforms all cell references in this object using the specified function.
            Returns an object that can be used to restore the references back to the original.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractiveObject.RestoreReferences(System.Object)">
            <summary>
            Restores the cell references in this object to the values before RefactorReferences call.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.Worksheet">
            <summary>
            Gets the parent worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.Anchor">
            <summary>
            Gets or sets the anchor of this object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.AnchorPosition">
            <summary>
            Gets or sets the anchor position of this object.
            </summary>
            <remarks>
            This value is relevant only if the Anchor property is set to ObjectAnchor.ToCell.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.FromColumn">
            <summary>
            Gets or sets the zero-based index of the column of the cell to which the object is anchored.
            </summary>
            <remarks>
            This value is ignored if the object is anchored to the page.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.FromRow">
            <summary>
            Gets or sets the zero-based index of the row of the cell to which the object is anchored.
            </summary>
            <remarks>
            This value is ignore if the object is anchored to the page.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.HorizontalOffset">
            <summary>
            Gets or sets the horizontal offset of the object from its anchor.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.VerticalOffset">
            <summary>
            Gets or sets the vertical offset of the object from its origin.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.Title">
            <summary>
            Gets or sets the object title.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.Description">
            <summary>
            Gets or sets the object description.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.Width">
            <summary>
            Gets or sets the desired width, or null, to calculate width automatically.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.Height">
            <summary>
            Gets or sets the desired height, or null, to calculate the height automatically.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.LineColor">
            <summary>
            Gets or sets the outline color of this object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.LineSize">
            <summary>
            Gets or sets the thickness of the object's outline.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.LineStyle">
            <summary>
            Gets or sets the style of the object's outline.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.Locked">
            <summary>
            Gets or sets a value indicating whether this object can be interacted with.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.IsLockedToCell">
            <summary>
            Gets a value indicating whether this object is always locked to a 
            cell in the worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.SuspendChangeNotifications">
            <summary>
            Gets or sets a value indicating whether the object notifies its worksheet
            about changes. Suspending notifications effectively disables undo/redo for
            the duration of the suspension.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.ExtendsOutsideBounds">
            <summary>
            Gets a value indicating whether this object's visual can extend
            beyond the object's bounding rectangle.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractiveObject.RegardsMergedCells">
            <summary>
            Gets a value indicating whether this object is positioned relatively
            to the bounding rectangle of the merged cell if the object's cell is
            a part of a merged cell.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.HtmlExporter">
            <summary>
            HtmlExporter lets you export Workbooks to HTML files.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.HtmlExporter.#ctor">
            <summary>
            Initializes a new instance of the HtmlExporter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.HtmlExporter.ProcessImage(System.Drawing.Image,System.Boolean)">
            <summary>
            HtmlExporterBase.ProcessImage override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporter.EmbedImages">
            <summary>
            Gets or sets a value indicating whether to embed images in the HTML
            or copy them in a specified directory.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporter.ImageFolder">
            <summary>
            Gets or sets the directory where the images referenced in the
            HTML should be copied.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.HtmlExporter.RootFolder">
            <summary>
            Gets or sets the folder of the target HTML.
            </summary>
            <remarks>
            If images are not embedded and ImageFolder
            is a relative path, this parameter is used as a root.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.GridView">
            <summary>
            Provides visualization and interactive modification of Workheet objects.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.GridView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.#ctor">
            <summary>
            Initializes a new instance of the GridView class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnSizeChanged(System.EventArgs)">
            <summary>
            Control.OnSizeChanged override.
            </summary>
            <param name="e">
            An EventArgs that contains the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Control.OnPaint override.
            </summary>
            <param name="pe">
            A PaintEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Control.IsInputKey override.
            </summary>
            <param name="keyData">
            One of the System.Windows.Forms.Keys values.
            </param>
            <returns>
            true if the specified key is a regular input key; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Control.OnKeyDown override.
            </summary>
            <param name="e">
            A KeyEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.Cut">
            <summary>
            Cuts the data from the currently selected cells to the clipboard.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.Copy">
            <summary>
            Copies the data from the currently selected cells to the clipboard.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.Paste">
            <summary>
            Pastes the data from the clipboard inside the currently selected cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.CheckAutoScroll(System.Drawing.Point,System.Boolean,System.Boolean)">
            <summary>
            Invoked during mouse move to check whether autoscrolling should be performed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnAutoScrollTimer(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the autoscroll timer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetInteraction(System.Drawing.Point)">
            <summary>
            Gets the interaction that will begin if the user presses
            the specified button at the specified position.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Control.OnKeyPress override.
            </summary>
            <param name="e">
            A KeyPressEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseDown override.
            </summary>
            <param name="e">
            A MouseEventArgs that contains the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseMove override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseWheel override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseUp override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SetToolTipText(System.Int32,System.Int32)">
            <summary>
            Updates the tooltip text with the text of the hyperlink or
            the error message of the cell at the specified position.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellAt(System.Drawing.Point)">
            <summary>
            Gets the cell at the specified point, expressed in client coordinates.
            </summary>
            <param name="p">
            The point to test.
            </param>
            <returns>
            A Cell identifying the cell at the specified point,
            or null, if the point is outside the grid.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellAt(System.Int32,System.Int32)">
            <summary>
            Gets the cell at the specified point, expressed in client coordinates.
            </summary>
            <param name="x">
            The x-coordinate of the point to test.
            </param>
            <param name="y">
            The y-coordinate of the point to test.
            </param>
            <returns>
            A Cell identifying the cell at the specified point,
            or null, if the point is outside the grid.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellRect(MindFusion.Spreadsheet.Cell)">
            <summary>
            Returns the bounding rectangle of the cell, identified
            by the specified reference.
            </summary>
            <param name="cell">
            A Cell object identifying the cell to measure.
            </param>
            <returns>
            The bounding rectangle of the specified cell, expressed
            in client coordinates.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellRect(System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell with the specified column and row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell with the specified column and row,
            relative to the specified origin.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellRectF(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell with the specified column and row,
            relative to the specified origin.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetRangeRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell range with the specified start and end column and row,
            relative to the specified origin.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetEffectiveCell(MindFusion.Spreadsheet.Cell)">
            <summary>
            Gets the active cell. If the active cell is inside a merged range,
            returns the top/left cell of this range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetRangeRect(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Gets the rectangle of the specified cell range,
            taking into consideration frozen and hidden headers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetRangeRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell range with the specified coordinates,
            taking into consideration frozen and hidden headers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellSelectionRects">
            <summary>
            Gets a list of rectangles corresponding to the selected cell ranges.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellSelectionRectsClip">
            <summary>
            Gets a list of rectangles corresponding to the selected cell ranges,
            clipped to the current viewport.
            </summary>
            <returns>
            The clipped selection rectangles.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ToGlobalX(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the left side of the specified cell,
            to a measure, relative to the left side of the entire worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ToGlobalY(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the top side of the specified cell,
            to a measure, relative to the top side of the entire worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ToLocalX(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the left side of the worksheet,
            to a measure, relative to the left side of the specified cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ToLocalY(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the top side of the worksheet,
            to a measure, relative to the top side of the specified cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetCellAt(MindFusion.Spreadsheet.Measure,MindFusion.Spreadsheet.Measure)">
            <summary>
            Gets the cell at the specified coordinates relative to the top/left of the worksheet.
            </summary>
            <param name="x">
            The x-coordinate of the cell to get.
            </param>
            <param name="y">
            The y-coordinate of the cell to get.
            </param>
            <returns>
            A Cell object representing the cell at the specified location.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.IsObjectInteractive(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Checks if the specified object can be modified interactively.
            </summary>
            <param name="obj">
            The object to check.
            </param>
            <returns>
            true, if the object is currently visible and unlocked; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PointInHandle(System.Drawing.Point,System.Int32@,System.Drawing.Rectangle)">
            <summary>
            Calculates the index of the manipulation handle containing the specified point.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetObjectRect(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Gets the rectangle of the specified object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetObjectRect(MindFusion.Spreadsheet.InteractiveObject,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the specified object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetObjectRectF(MindFusion.Spreadsheet.InteractiveObject,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the specified object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.BeginEdit(MindFusion.Spreadsheet.IInplaceEditable)">
            <summary>
            Initiates in-place edit of the specified in-place editable object.
            </summary>
            <param name="item">
            An in-place editable object identifying the object to edit.
            </param>
            <returns>
            A TextBoxBase representing the in-place edit box.
            </returns>
            <remarks>
            If the in-place editable object is a cell, part of a merged cell, the top-left
            cell of the merged range will be edited.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.UpdateEdit(System.String)">
            <summary>
            Updates the current value of the in-place editor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.EndEdit(System.Boolean)">
            <summary>
            Completes the in-place editing operation, previously
            started by a call to BeginEdit, and accepts or cancel
            the change.
            </summary>
            <param name="acceptChanges">
            true to accept in-place changes; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SetInplaceRange(MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell)">
            <summary>
            Updates the currently edited cell range in the in-place formula editor
            to the specified value.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetPreviousHRun(MindFusion.Spreadsheet.Cell)">
            <summary>
            Returns a cell in the same row as the specified cell, based on the
            following criteria. If the specified cell contains data, searches to
            the left for a cell that contains data, and its left neighbor does not
            contain data, that is, searches for the first data cell in the sequence.
            If the specified cell does not contain data or is the first cell in the
            sequence, returns the previous cell with data in this row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetNextHRun(MindFusion.Spreadsheet.Cell)">
            <summary>
            Returns a cell in the same row as the specified cell, based on the
            following criteria. If the specified cell contains data, searches to the
            right for a cell that contains data, and its right neighbor does not
            contain data, that is, searches for the last data cell in the sequence.
            If the specified cell does not contain data or is the last cell in the
            sequence, returns the next cell with data in this row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetPreviousVRun(MindFusion.Spreadsheet.Cell)">
            <summary>
            Returns a cell in the same column as the specified cell, based on the
            following criteria. If the specified cell contains data, searches up
            for a cell that contains data, and its top neighbor does not contain
            data, that is, searches for the first data cell in the sequence.
            If the specified cell does not contain data or is the first cell in the
            sequence, returns the previous cell with data in this column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetNextVRun(MindFusion.Spreadsheet.Cell)">
            <summary>
            Returns a cell in the same column as the specified cell, based on the
            following criteria. If the specified cell contains data, searches down
            for a cell that contains data, and its bottom neighbor does not contain
            data, that is, searches for the last data cell in the sequence.
            If the specified cell does not contain data or is the last cell in the
            sequence, returns the next cell with data in this column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ProcessNavigation(System.Windows.Forms.Keys,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Modifies the current selection and active cell based on the specified user input.
            This method could eventually raise the RequestWorksheet event in response to
            CTRL + one of the page keys.
            Returns true if the active cell or the current selection have been changed;
            otherwise, false.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectLeft(System.Boolean,System.Boolean,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified range as if the specified cell is the currently active
            cell and the user pressed the LEFT arrow key while optionally holding down
            the SHIFT or CTRL keys. This method does not change the currently active cell nor
            the current selection. The method however ensures that the new active cell or
            selected range is visible in the view. The newActiveCell parameter receives
            the new active cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectRight(System.Boolean,System.Boolean,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified range as if the specified cell is the currently active
            cell and the user pressed the RIGHT arrow key while optionally holding down
            the SHIFT or CTRL keys. This method does not change the currently active cell nor
            the current selection. The method however ensures that the new active cell or
            selected range is visible in the view. The newActiveCell parameter receives
            the new active cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectUp(System.Boolean,System.Boolean,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified range as if the specified cell is the currently active
            cell and the user pressed the UP arrow key while optionally holding down
            the SHIFT or CTRL keys. This method does not change the currently active cell nor
            the current selection. The method however ensures that the new active cell or
            selected range is visible in the view. The newActiveCell parameter receives
            the new active cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectDown(System.Boolean,System.Boolean,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified range as if the specified cell is the currently active
            cell and the user pressed the DOWN arrow key while optionally holding down
            the SHIFT or CTRL keys. This method does not change the currently active cell nor
            the current selection. The method however ensures that the new active cell or
            selected range is visible in the view. The newActiveCell parameter receives
            the new active cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectHome(System.Boolean,System.Boolean,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified range as if the specified cell is the currently active
            cell and the user pressed the HOME key while optionally holding down the SHIFT
            or CTRL keys. This method does not change the currently active cell nor the
            current selection. The method however ensures that the new active cell or
            selected range is visible in the view. The newActiveCell parameter receives
            the new active cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectEnd(System.Boolean,System.Boolean,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified range as if the specified cell is the currently active
            cell and the user pressed the END key while optionally holding down the SHIFT
            or CTRL keys. This method does not change the currently active cell nor the
            current selection. The method however ensures that the new active cell or
            selected range is visible in the view. The newActiveCell parameter receives
            the new active cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageUp(System.Boolean,System.Boolean)">
            <summary>
            Scrolls the view one page up.
            </summary>
            <param name="adjustActiveCell">
            Specifies whether to adjust the position of the active cell.
            </param>
            <param name="scrollToEnd">
            Specifies whether to scroll when at the end of the worksheet,
            but more than one row is vsible.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageUp(MindFusion.Spreadsheet.Cell,System.Boolean,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified cell as if it is the currently active cell and
            the user pressed the PAGEUP key. This method does not change the
            currently active cell nor the current selection. The method however ensures
            that the new active cell or selected range is visible in the view. The
            newActiveCell parameter receives the new active cell and the resulting
            range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageDown(System.Boolean,System.Boolean)">
            <summary>
            Scrolls the view one page down.
            </summary>
            <param name="adjustActiveCell">
            Specifies whether to adjust the position of the active cell.
            </param>
            <param name="scrollToEnd">
            Specifies whether to scroll when at the end of the worksheet,
            but more than one row is vsible.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageDown(MindFusion.Spreadsheet.Cell,System.Boolean,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified cell as if it is the currently active cell and
            the user pressed the PAGEDOWN arrow key. This method does not change the
            currently active cell nor the current selection. The method however ensures
            that the new active cell or selected range is visible in the view. The
            newActiveCell parameter receives the new active cell and the resulting
            range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageLeft(System.Boolean,System.Boolean)">
            <summary>
            Scrolls the view one page to the left.
            </summary>
            <param name="adjustActiveCell">
            Specifies whether to adjust the position of the active cell.
            </param>
            <param name="scrollToEnd">
            Specifies whether to scroll when at the end of the worksheet,
            but more than one column is vsible.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageLeft(MindFusion.Spreadsheet.Cell,System.Boolean,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified cell as if it is the currently active cell and
            the user pressed the PAGEUP key while holding down the ALT key. This
            method does not change the currently active cell nor the current selection.
            The method however ensures that the new active cell or selected range is
            visible in the view. The newActiveCell parameter receives the new active
            cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageRight(System.Boolean,System.Boolean)">
            <summary>
            Scrolls the view one page to the right.
            </summary>
            <param name="adjustActiveCell">
            Specifies whether to adjust the position of the active cell.
            </param>
            <param name="scrollToEnd">
            Specifies whether to scroll when at the end of the worksheet,
            but more than one column is vsible.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.PageRight(MindFusion.Spreadsheet.Cell,System.Boolean,MindFusion.Spreadsheet.Cell@)">
            <summary>
            Modifies the specified cell as if it is the currently active cell and
            the user pressed the PAGEDOWN key while holding down the ALT key. This
            method does not change the currently active cell nor the current selection.
            The method however ensures that the new active cell or selected range is
            visible in the view. The newActiveCell parameter receives the new active
            cell and the resulting range is returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectPageUp(MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef)">
            <summary>
            Modifies the specified range as if the specified cell is the currently
            active cell and the user pressed the PAGEUP key. If the specified range
            is an actual range and the active cell is not at the bottom of the range,
            the selection is actually collapsed from the bottom side.
            This method does not change the current selection. The method however ensures
            that the new selected range is visible in the view. The resulting range is
            returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectPageDown(MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef)">
            <summary>
            Modifies the specified range as if the specified cell is the currently
            active cell and the user pressed the PAGEDOWN key. If the specified range
            is an actual range and the active cell is not at the bottom of the range,
            the selection is actually collapsed from the bottom side.
            This method does not change the current selection. The method however ensures
            that the new selected range is visible in the view. The resulting range is
            returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectPageLeft(MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef)">
            <summary>
            Modifies the specified range as if the specified cell is the currently
            active cell and the user pressed the PAGEUP key while holding down the
            ALT key. If the specified range is an actual range and the active cell
            is not at the bottom of the range, the selection is actually collapsed
            from the bottom side.
            This method does not change the current selection. The method however ensures
            that the new selected range is visible in the view. The resulting range is
            returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SelectPageRight(MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellRef)">
            <summary>
            Modifies the specified range as if the specified cell is the currently
            active cell and the user pressed the PAGEDOWN key while holding down the
            ALT key. If the specified range is an actual range and the active cell
            is not at the bottom of the range, the selection is actually collapsed
            from the bottom side.
            This method does not change the current selection. The method however ensures
            that the new selected range is visible in the view. The resulting range is
            returned by the method.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetPageRelativeRow(System.Int32,System.Boolean)">
            <summary>
            Gets the row at the location of the specified row
            if the view is scrolled one page up or down.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetPageRelativeColumn(System.Int32,System.Boolean)">
            <summary>
            Gets the column at the location of the specified column
            if the view is scrolled one page left or right.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetColumnInViewport(System.Int32)">
            <summary>
            Returns the column in the current viewport nearest to the specified column.
            If the specified column is inside the viewport, returns it unchanged.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetRowInViewport(System.Int32)">
            <summary>
            Returns the row in the current viewport nearest to the specified row.
            If the specified row is inside the viewport, returns it unchanged.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SetActiveCell(MindFusion.Spreadsheet.Cell)">
            <summary>
            Sets the active cell and raises the ActiveCellChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.SetActiveCellDirect(MindFusion.Spreadsheet.Cell)">
            <summary>
            Sets the active cell directly, without updating the selection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.UpdateActiveCell">
            <summary>
            Ensures that the active cell is not in a hidden row or column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.UpdateSelection">
            <summary>
            Ensures that the selection is not extending in hidden rows or columns
            and that the selection contains the active cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.UpdateActiveControls(System.Boolean)">
            <summary>
            Updates any controls associated with the active cell, such as the drop-down list button.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.UpdateAutoFilterButtons">
            <summary>
            Updates the autofilter buttons, if present.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.UpdateAutoFilterButtons(System.Boolean)">
            <summary>
            Updates the autofilter buttons, if present.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.TrackChanges">
            <summary>
            Creates a new TrackChangesCommand to track subsequent modifications
            on the underlying worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ColumnFromPoint(System.Int32)">
            <summary>
            Returns the 0-based index of the column with header at the specified x-coordinate.
            This method operates only for columns that are currently visible.
            </summary>
            <param name="x">The offset.</param>
            <returns>The column index.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ColumnFromPoint(System.Int32,System.Drawing.Rectangle@)">
            <summary>
            Returns the 0-based index of the column at the specified x-coordinate.
            This method operates only for columns that are currently visible.
            </summary>
            <param name="x">The x-coordinate to test.</param>
            <param name="bounds">The bounding rectangle of the column header.</param>
            <returns>The column index.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RowFromPoint(System.Int32)">
            <summary>
            Returns the 0-based index of the row with header at the specified y-coordinates.
            This method operates only for columns that are currently visible.
            </summary>
            <param name="y">The offset.</param>
            <returns>The row index.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RowFromPoint(System.Int32,System.Drawing.Rectangle@)">
            <summary>
            Returns the 0-based index of the row at the specified y-coordinates.
            This method operates only for columns that are currently visible.
            </summary>
            <param name="y">The offset.</param>
            <param name="bounds">The bounding rectangle of the row.</param>
            <returns>The row index.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ResizeRowsToFit(System.Int32,System.Int32)">
            <summary>
            Resizes the rows in the specified range to fit their content.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ResizeColumnsToFit(System.Int32,System.Int32)">
            <summary>
            Resizes the columns in the specified range to fit their content.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetDataRows">
            <summary>
            Gets the indices of the rows containing actual data.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetDataRows(System.Int32,System.Int32)">
            <summary>
            Gets the indices of the rows in the specified range containing actual data.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetDataColumns">
            <summary>
            Gets the indices of the columns containing actual data.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetDataColumns(System.Int32,System.Int32)">
            <summary>
            Gets the indices of the columns in the specified range containing actual data.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetMaxWidth(System.Int32)">
            <summary>
            Calculates the maximum width from all cells in a column.
            </summary>
            <param name="c">The column.</param>
            <returns>The maximum width.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetMaxHeight(System.Int32)">
            <summary>
            Calculates the maximum height from all cells in a row.
            </summary>
            <param name="r">The row.</param>
            <returns>The maximum height.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetColumnAt(System.Int32)">
            <summary>
            Returns the 0-based index of the column at the specified
            y-coordinate, or -1, if there is no column.
            </summary>
            <remarks>
            This method ignores frozen columns.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetRowAt(System.Int32)">
            <summary>
            Returns the 0-based index of the row at the specified
            y-coordinate, or -1, if there is no row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetColumnFromScroll(System.Int32,System.Boolean)">
            <summary>
            Returns the column corresponding to the specified scroll position,
            taking into consideration any hidden columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetRowFromScroll(System.Int32,System.Boolean)">
            <summary>
            Returns the row corresponding to the specified scroll position,
            taking into consideration any hidden rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetScrollFromColumn(System.Int32)">
            <summary>
            Returns the scroll position corresponding to the specified column,
            taking into consideration any hidden columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetScrollFromRow(System.Int32)">
            <summary>
            Returns the scroll position corresponding to the specified row,
            taking into consideration any hidden rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetFrozenColumnCount">
            <summary>
            Gets the number of frozen columns that are not hidden.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetFrozenRowCount">
            <summary>
            Gets the number of frozen rows that are not hidden.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetHiddenColumnCount(System.Int32,System.Int32)">
            <summary>
            Gets the number of hidden column in the range [left, right].
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetHiddenRowCount(System.Int32,System.Int32)">
            <summary>
            Gets the number of hidden rows in the range [top, bottom].
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetFrozenColumnWidth">
            <summary>
            Gets the total width of all frozen columns, in pixels.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetFrozenRowHeight">
            <summary>
            Gets the total height of all frozen rows, in pixels.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.IsSingleCell(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Checks whether the specified cell reference represents either a single cell
            or a single merged cell range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ShrinkLeft(MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell)">
            <summary>
            Checks whether the specified cell range can shrink from the left side (in respect to
            the currently active cell) without flipping or intersecting merged cells and returns
            the nearest column to shrink to. If the range cannot shrink, returns -1.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ShrinkTop(MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell)">
            <summary>
            Checks whether the specified cell range can shrink from the top side (in respect to
            the currently active cell) without flipping or intersecting merged cells and returns
            the nearest row to shrink to. If the range cannot shrink, returns -1.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ShrinkRight(MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell)">
            <summary>
            Checks whether the specified cell range can shrink from the right side (in respect to
            the currently active cell) without flipping or intersecting merged cells and returns
            the nearest column to shrink to. If the range cannot shrink, returns -1.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ShrinkBottom(MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Cell)">
            <summary>
            Checks whether the specified cell range can shrink from the bottom side (in respect to
            the currently active cell) without flipping or intersecting merged cells and returns the
            nearest row to shrink to. If the range cannot shrink, returns -1.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ExpandLeft(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Expands the specified cell range to the left. This method attempts
            to create a range that does not to cross any merged cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ExpandTop(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Expands the specified cell range up. This method attempts to create
            a range that does not to cross any merged cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ExpandRight(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Expands the specified cell range to the right. This method attempts
            to create a range that does not to cross any merged cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ExpandBottom(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Expands the specified cell range down. This method attempts to create
            a range that does not to cross any merged cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.UnionMergedCells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a cell range representing the union of the specified range with
            all intersecting merged cells. Currently the returned range may still
            itersect merged cells upon expanding.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetPixels(MindFusion.Spreadsheet.Measure)">
            <summary>
            Converts the specified measure in pixels, in the resolution of the current control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.GetPixelsF(MindFusion.Spreadsheet.Measure)">
            <summary>
            Converts the specified measure in pixels, in the resolution of the current control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ToggleColumnOutline(System.Int32)">
            <summary>
            Expands or collapses all groups at the specified outline level.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ToggleRowOutline(System.Int32)">
            <summary>
            Expands or collapses all groups at the specified outline level.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnActiveCellChanged(System.EventArgs)">
            <summary>
            Raises the ActiveCellChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnCellSelectionChanged(System.EventArgs)">
            <summary>
            Raises the CellSelectionChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseCellSelectionChanged">
            <summary>
            Raises the CellSelectionChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnCellClicked(MindFusion.Spreadsheet.GenericMouseEventArgs{MindFusion.Spreadsheet.Cell})">
            <summary>
            Raises the CellClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectClicked(MindFusion.Spreadsheet.GenericMouseEventArgs{MindFusion.Spreadsheet.InteractiveObject})">
            <summary>
            Raises the ObjectClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnClicked(MindFusion.Spreadsheet.IndexMouseEventArgs)">
            <summary>
            Raises the ColumnClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowClicked(MindFusion.Spreadsheet.IndexMouseEventArgs)">
            <summary>
            Raises the RowClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnScrollXChanged(System.EventArgs)">
            <summary>
            Raises the ScrollXChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnScrollYChanged(System.EventArgs)">
            <summary>
            Raises the ScrollYChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnInplaceEditStarting(MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Raises the InplaceEditStarting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnInplaceEditStarted(MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Raises the InplaceEditStarted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnInplaceEditEnding(MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Raises the InplaceEditEnding event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnInplaceEditEnded(MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Raises the InplaceEditEnded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRequestWorksheet(MindFusion.Spreadsheet.RequestWorksheetEventArgs)">
            <summary>
            Raises the RequestWorksheet event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectStartModifying(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectStartModifying event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectModifying(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectModifying event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseObjectModifying(MindFusion.Spreadsheet.InteractiveObject,MindFusion.Spreadsheet.InteractionState,System.Boolean)">
            <summary>
            Raises the appropriate ObjectModifying event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectModified(MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Raises the ObjectModified event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseObjectModified(MindFusion.Spreadsheet.InteractiveObject,System.Drawing.Point,MindFusion.Spreadsheet.AdjustmentHandles)">
            <summary>
            Raises the ObjectModified event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectModifyCancelled(MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Raises the ObjectModifyCancelled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseObjectModifyCancelled(MindFusion.Spreadsheet.InteractiveObject,MindFusion.Spreadsheet.InteractionState)">
            <summary>
            Raises the appropriate ModifyCancelled event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectSelecting(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectSelecting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseObjectSelecting(MindFusion.Spreadsheet.InteractiveObject,System.Drawing.Point)">
            <summary>
            Raises the ObjectSelecting event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectSelected(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectSelected event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseObjectSelected(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Raises the ObjectSelected event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectDeselected(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectDeselected event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseObjectDeselected(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Raises the ObjectDeselected event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectDeleting(MindFusion.Spreadsheet.ObjectValidationEventArgs)">
            <summary>
            Raises the ObjectDeleting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.ConfirmObjectDeleting(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Raises the ObjectDeleting event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnObjectDeleted(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectDeleted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseObjectDeleted(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Raises the ObjectDeleted event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnHyperlinkClicked(MindFusion.Spreadsheet.CellEventArgs)">
            <summary>
            Raises the HyperlinkClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.RaiseHyperlinkClicked(MindFusion.Spreadsheet.Cell)">
            <summary>
            Raises the HyperlinkClicked event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnGroupExpanded(MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Raises the ColumnGroupExpanded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnGroupCollapsed(MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Raises the ColumnGroupCollapsed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowGroupCollapsed(MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Raises the RowGroupCollapsed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowGroupExpanded(MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Raises the RowGroupExpanded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnOutlineLevelToggled(MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Raises the ColumnOutlineLevelToggled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowOutlineLevelToggled(MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Raises the RowOutlineLevelToggled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnDrawColumn(MindFusion.Spreadsheet.DrawColumnEventArgs)">
            <summary>
            Raises the DrawColumn event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnDrawRow(MindFusion.Spreadsheet.DrawRowEventArgs)">
            <summary>
            Raises the DrawRow event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnsResized(MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Raises the ColumnsResized event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowsResized(MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Raises the RowsResized event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnsMoved(MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Raises the ColumnsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowsMoved(MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Raises the RowsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnsMoving(MindFusion.Spreadsheet.ColumnRangeMovingEventArgs)">
            <summary>
            Raises the ColumnsMoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowsMoving(MindFusion.Spreadsheet.RowRangeMovingEventArgs)">
            <summary>
            Raises the RowsMoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnColumnsResizing(MindFusion.Spreadsheet.ColumnRangeResizingEventArgs)">
            <summary>
            Raises the ColumnsResizing event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.GridView.OnRowsResizing(MindFusion.Spreadsheet.RowRangeResizingEventArgs)">
            <summary>
            Raises the RowsResizing event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="F:MindFusion.Spreadsheet.GridView.editEnding">
            <summary>
            A special flag set while the grid view completes in-place editing
            operation. While this flag is set a new editing cannot start.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.GridView.allowInplaceRangeSelect">
            <summary>
            Indicates whether the user can select cell ranges interactively,
            while typing a formula, by using the arrow keys or the mouse.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.FirstColumn">
            <summary>
            Gets the index of the first column visible in the view. If the underlying
            grid model has frozen columns, this property returns the index of the first
            unfrozen column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.FirstRow">
            <summary>
            Gets the index of the first row visible in the view. If the underlying
            grid model has frozen rows, this property returns the index of the first
            unfrozen row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ActiveCell">
            <summary>
            Gets or sets the currently active cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ShowActiveCell">
            <summary>
            Gets or sets a value indicating whether to display the active cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ShowAutoFilterRange">
            <summary>
            Gets or sets a value indicating whether to display the range affected by the autofilter.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.EffectiveActiveCell">
            <summary>
            Gets the active cell. If the active cell is inside a merged range,
            returns the top/left cell of this range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.InplaceRangeOriginCell">
            <summary>
            Gets the origin cell during inplace range selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.InplaceRangeCurrent">
            <summary>
            Gets the currently selected range during inplace range selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ShowToolTips">
            <summary>
            Gets or sets a value indicating whether tooltips are enabled.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ToolTipDelay">
            <summary>
            Gets or sets the time that passes before a tool-tip
            appears when the mouse hovers over a cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ToolTipControl">
            <summary>
            Gets the ToolTip control used to display tool tips.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ShowResizeHeaderToolTips">
            <summary>
            Gets or sets a value indicating whether to display tooltips when the
            user resizes row or column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ResizeColumnToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when a
            column is resized interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ResizeRowToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when a
            row is resized interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ShowHeaders">
            <summary>
            Gets or sets a value indicating whether to display the row and column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ShowHiddenHeaderIndicators">
            <summary>
            Gets or sets a value indicating whether to display indicators for
            hidden row and column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AllowResizeCells">
            <summary>
            Gets or sets a value indicating whether users can resize rows and columns by dragging cell borders.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.EffectiveRowHeaderWidth">
            <summary>
            Gets the actual width of the row header.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of the column header.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.EffectiveColumnHeaderHeight">
            <summary>
            Gets the actual height of the column header.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.GroupRowHeaderWidth">
            <summary>
            Gets the width of the group row header.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.GroupColumnHeaderHeight">
            <summary>
            Gets the height of the group column header.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.Selection">
            <summary>
            Gets the selection in the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ShowSelection">
            <summary>
            Gets or sets a value indicating whether to display the cell selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AutoScroll">
            <summary>
            Gets or sets a value indicating whether autoscrolling of the view is enabled.
            </summary>
            <summary>
            Gets or sets a value indicating whether auto scrolling of
            the document area is enabled.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ScrollZoneSize">
            <summary>
            Gets or sets the size of the auto scroll zone near the edges of the control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.DrawGridLines">
            <summary>
            Gets or sets a value indicating whether to draw the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.DrawFilledCellBorders">
            <summary>
            Gets or sets a value indicating whether to draw the grid lines of
            cells with set background.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AllowAutoFill">
            <summary>
            Gets or sets a value indicating whether to display the auto-fill
            handle at the bottom-right side of the selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AutoFillCopyOnly">
            <summary>
            Gets or sets whether the auto-fill tool should only copy values,
            instead of extrapolating new values from the selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AllowMoveHeaders">
            <summary>
            Gets or sets a value indicating whether the user can interactively move
            the worksheet headers, by selecting the entire column or row and dragging.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AllowMoveCells">
            <summary>
            Gets or sets a value indicating whether the user can interactively
            move cells around the worksheet, by pressing near the edge of the
            currently selected cells with the mouse and dragging.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.PointerCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user when no modification is performed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.DisallowCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user when
            an object cannot be created at a given location.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.MoveCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if
            the pointed object can be modified.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.HorizontalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user
            if dragging would resize an object horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.VerticalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object vertically.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.HorizontalSplitCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging would resize rows.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.VerticalSplitCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging would resize columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.DiagonalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object both vertically and horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.CounterDiagonalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object both vertically and horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AutoFillCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if the mouse
            is over the auto fill handle or the user is currently performing
            an auto fill operation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.HyperlinkCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if the mouse is over
            a cell containing a hyperlink.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AdjustmentHandlesSize">
            <summary>
            Gets or sets the size of the handles, which appear around selected objects, in pixels.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AdjustmentHandleBrush">
            <summary>
            Gets or sets the brush used to fill the adjustment handles.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.AdjustmentHandleLineColor">
            <summary>
            Gets or sets the line color of the adjustment handles.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.FrozenLineColor">
            <summary>
            Gets or sets the color of the frozen lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.HyperlinkTextColor">
            <summary>
            Gets or sets the default color of hyperlinks.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.ErrorTextColor">
            <summary>
            Gets or sets the text color of cells containing error values.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GridView.LicenseKey">
            <summary>
            Gets or sets the license key of the control.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ActiveCellChanged">
            <summary>
            Raised when the active cell is changed interactively, that is,
            assigning the ActiveCell property does not raise this event, nor
            does setting a new worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.CellSelectionChanged">
            <summary>
            Raised when the selection is changed interactively, that is,
            modifying the selection programmatically does not raise this event.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.CellClicked">
            <summary>
            Raised when a cell is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectClicked">
            <summary>
            Raised when an object is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnClicked">
            <summary>
            Raised when a column header is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowClicked">
            <summary>
            Raised when a row header is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ScrollXChanged">
            <summary>
            Raised when the ScrollX value has changed from within the GridView,
            not through a direct assignment.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ScrollYChanged">
            <summary>
            Raised when the ScrollY value has changed from within the GridView,
            not through a direct assignment.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.InplaceEditStarting">
            <summary>
            Raised when an in-place edit operation is about to start,
            before the in-place editor is displayed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.InplaceEditStarted">
            <summary>
            Raised when an in-place edit operation has started,
            after the in-place editor is displayed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.InplaceEditEnding">
            <summary>
            Raised when an in-place edit operation is about to finish,
            before the in-place editor is closed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.InplaceEditEnded">
            <summary>
            Raised when an inplace-edit operation has finished.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RequestWorksheet">
            <summary>
            Raised when the grid view needs to display another worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectStartModifying">
            <summary>
            Raised while the user is moving or resizing an interactive object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectModifying">
            <summary>
            Raised when the user starts modifying an interactive object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectModified">
            <summary>
            Raised when the user completes the modification of an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectModifyCancelled">
            <summary>
            Raised when the user cancels the modification of an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectSelecting">
            <summary>
            Raised when the user is about to select an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectSelected">
            <summary>
            Raised when an object is selected, either programmatically or interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectDeselected">
            <summary>
            Raised when an object is deselected, either programmatically or interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectDeleting">
            <summary>
            Raised when an object is about to be deleted interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ObjectDeleted">
            <summary>
            Raised when an object is deleted interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.HyperlinkClicked">
            <summary>
            Raised when a cell containing a hyperlink is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnOutlineLevelToggled">
            <summary>
            Raised when a column outline level has been activated interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowOutlineLevelToggled">
            <summary>
            Raised when a row outline level has been activated interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnGroupExpanded">
            <summary>
            Raised when a column group has been expanded interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnGroupCollapsed">
            <summary>
            Raised when a column group has been collapsed interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowGroupExpanded">
            <summary>
            Raised when a row group has been expanded interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowGroupCollapsed">
            <summary>
            Raised when a row group has been collapsed interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.DrawColumn">
            <summary>
            Raised to allow custom drawing of view columns.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.DrawRow">
            <summary>
            Raised to allow custom drawing of view rows.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnsResized">
            <summary>
            Raised when one or more columns are resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowsResized">
            <summary>
            Raised when one or more rows are resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnsMoved">
            <summary>
            Raised when one or more columns are moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowsMoved">
            <summary>
            Raised when one or more rows are moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnsMoving">
            <summary>
            Raised when one or more columns are being moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowsMoving">
            <summary>
            Raised when one or more rows are being moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.ColumnsResizing">
            <summary>
            Raised when one or more columns are being resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.GridView.RowsResizing">
            <summary>
            Raised when one or more rows are being resized interactively.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.GridView.OutlinePainter">
            <summary>
            Draws group outlines. Subsequently provides information about the painted outlines.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.GridView.DrawingRepainter">
            <summary>
            Provides means for repainting the worksheet drawing.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.GridView.CellRepainter">
            <summary>
            Provides means for repainting and caching the cell grid.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Outline">
            <summary>
            Represents a descriptor of a grouping outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Outline.#ctor(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Outline class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Outline.CompareTo(MindFusion.Spreadsheet.Outline)">
            <summary>
            IComparable.CompareTo implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Outline.ToString">
            <summary>
            Object.ToString override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Outline.IsRow">
            <summary>
            Gets a value indicating whether this is a row or a column outline.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Outline.IsImplicit">
            <summary>
            Gets or sets a value indicating whether this outline ends in the
            same column as another outline with smaller level. Implicit outlines
            // are not displayed by the views.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Outline.IsTopLevel">
            <summary>
            Gets or sets a value indicating whether this outline is top-level, that is,
            not parented by another outline.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Outline.Start">
            <summary>
            Gets or sets the zero-based index of the first header of this outline.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Outline.End">
            <summary>
            Gets or sets the zero-based index of the last header of this outline.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Outline.OutlineLevel">
            <summary>
            Gets the level of the outline.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Outline.SubOutlines">
            <summary>
            Gets a list with all subordinate outlines.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IResolution">
            <summary>
            Provides information about device resolution.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IResolution.DpiX">
            <summary>
            Gets the horizontal resolution of the device.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IResolution.DpiY">
            <summary>
            Gets the vertical resolution of the device.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnRange">
            <summary>
            Identifies a range of columns in a Worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRange.#ctor(MindFusion.Spreadsheet.Worksheet,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ColumnRange class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRange.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable.GetEnumerator explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRange.GetEnumerator">
            <summary>
            Returns an enumerator object that can be used to iterate through
            the columns in the range.
            </summary>
            <returns>
            An IEnumerator&lt;Column&gt; object that can be used to iterate
            through the columns in the range.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRange.Group">
            <summary>
            Increases the outline level of all columns in the range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRange.Ungroup">
            <summary>
            Decreses the outline level of all columns in the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.Style">
            <summary>
            Gets an IColumnStyle object that can be used to customize
            the appearance of all columns in the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.Width">
            <summary>
            Gets or sets the width of all columns in the range.
            </summary>
            <remarks>
            If the columns have different or default widths, this property returns null.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.IsHidden">
            <summary>
            Gets or sets a value indicating whether the columns in the range are hidden.
            </summary>
            <remarks>
            If the columns have different or default values, this property returns null.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.OutlineLevel">
            <summary>
            Gets or sets the outline level of the columns in the range.
            </summary>
            <remarks>
            If the columns have different or default values, this property returns null.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.Validation">
            <summary>
            Gets an IValidation object that can be used to specify validation
            rules for the data in the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.ConditionalFormats">
            <summary>
            Gets a list with format objects that can be used to customize
            the appearance of the columns in the range based on various conditions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.Left">
            <summary>
            Gets the left column of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRange.Right">
            <summary>
            Gets the right column of the range.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellData">
            <summary>
            Represents a copy of the cell data in a worksheet region.
            Instances of this class can be obtained by calling the CopyData
            method of a Worksheet.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.AutoFilter">
            <summary>
            Represents autofiltering inside a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AutoFilter.#ctor(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellRange)">
            <summary>
            Initializes a new instance of the AutoFilter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AutoFilter.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the AutoFilter class.
            </summary>
            <remarks>
            This constructor should be used only during deserialization.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.AutoFilter.ApplyFilter">
            <summary>
            Applies the autofilter.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AutoFilter.ShowAllData">
            <summary>
            Displays all the data in the autofilter range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AutoFilter.GetActualRange">
            <summary>
            Gets the actual cell range this filter applies to.
            This might be a superset of Range if there is adjacent data.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AutoFilter.RefactorRange(System.Boolean,System.Boolean,System.Int32,System.Int32,MindFusion.Spreadsheet.CellRef)">
            <summary>
            Refactors the autofilter range adding or removing filters if necessary.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.AutoFilter.Range">
            <summary>
            Gets the cell range this filter is applied to.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.AutoFilter.Filters">
            <summary>
            Gets a read-only collection with the filters of the individual columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.AutoFilter.FilterList">
            <summary>
            Gets a modifiable collection with the column filters.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.AutoFilter.On">
            <summary>
            Gets a value indicating whether at least one of the filters is active.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Filter">
            <summary>
            Represents a filter for a single column.
            </summary>
            <remarks>
            The properties of this object are read-only. To apply filtering to a
            cell range, use the AutoFilter method of the CellRange class.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Filter.#ctor">
            <summary>
            Initializes a new instance of the Filter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Filter.Prepare(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            This method should be called once before using this filter's Match method.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Filter.On">
            <summary>
            Gets a value indicating whether the filter is active.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Filter.ShowButton">
            <summary>
            Gets or sets a value indicating whether the grid displays
            a drop-down button for this filter.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Filter.Operator">
            <summary>
            Gets a value that represents the operator that associates
            the two criteria applied by the filter.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Filter.Criteria1">
            <summary>
            Gets the first filter criteria.
            The value of this property depends on the filter operator.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Filter.Criteria2">
            <summary>
            Gets the second filter criteria.
            The value of this property depends on the filter operator.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Filter.Criteria">
            <summary>
            A parsed criteria.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Filter.Criteria.ValueType">
            <summary>
            0 - date, 1 - number, 2 - text
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.AutoFilterOperator">
            <summary>
            Indicates an autofiltering operator.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.And">
            <summary>
            Specifies logical AND of Criteria1 and Criteria2.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.Bottom10Items">
            <summary>
            Lowest-valued items displayed (number of items specified in Criteria1).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.Bottom10Percent">
            <summary>
            Lowest-valued items displayed (percentage specified in Criteria1).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.FilterDynamic">
            <summary>
            Specifies a dynamic filter.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.FilterValues">
            <summary>
            Specifies filtering based on a list of values (as specified in Criteria1).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.Or">
            <summary>
            Specifies logical OR of Criteria1 or Criteria2.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.Top10Items">
            <summary>
            Highest-valued items displayed (number of items specified in Criteria1).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AutoFilterOperator.Top10Percent">
            <summary>
            Highest-valued items displayed (percentage specified in Criteria1).
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DynamicFilterType">
            <summary>
            Specifies the type of a dynamic autofilter.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.AboveAverage">
            <summary>
            Shows all values that are above average.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.BelowAverage">
            <summary>
            Shows all values that are below average.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInJanuary">
            <summary>
            Shows the dates that are in January, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInFebruary">
            <summary>
            Shows the dates that are in February, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInMarch">
            <summary>
            Shows the dates that are in March, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInApril">
            <summary>
            Shows the dates that are in April, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInMay">
            <summary>
            Shows the dates that are in May, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInJune">
            <summary>
            Shows the dates that are in June, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInJuly">
            <summary>
            Shows the dates that are in July, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInAugust">
            <summary>
            Shows the dates that are in August, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInSeptember">
            <summary>
            Shows the dates that are in September, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInOctober">
            <summary>
            Shows the dates that are in October, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInNovember">
            <summary>
            Shows the dates that are in November, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInDecember">
            <summary>
            Shows the dates that are in December, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInQuarter1">
            <summary>
            Shows the dates that are in the first calendar quarter, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInQuarter2">
            <summary>
            Shows the dates that are in the second calendar quarter, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInQuarter3">
            <summary>
            Shows the dates that are in the third calendar quarter, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.DatesInQuarter4">
            <summary>
            Shows the dates that are in the fourth calendar quarter, regardless of year.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.Tomorrow">
            <summary>
            Shows tomorrow's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.Today">
            <summary>
            Shows today's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.Yesterday">
            <summary>
            Shows yesterday's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.NextWeek">
            <summary>
            Shows next week's dates, using Sunday as the first week day.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.ThisWeek">
            <summary>
            Shows this week's dates, using Sunday as the first week day.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.LastWeek">
            <summary>
            Shows last week's dates, using Sunday as the first week day.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.NextMonth">
            <summary>
            Shows next month's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.ThisMonth">
            <summary>
            Shows this month's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.LastMonth">
            <summary>
            Shows last month's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.NextQuarter">
            <summary>
            Shows next quarter's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.ThisQuarter">
            <summary>
            Shows this quarter's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.LastQuarter">
            <summary>
            Shows last quarter's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.NextYear">
            <summary>
            Shows next year's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.ThisYear">
            <summary>
            Shows this year's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.LastYear">
            <summary>
            Shows last year's dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.DynamicFilterType.YearToDate">
            <summary>
            Shows the dates between the beginning of the year and today, inclusive.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Worksheet">
            <summary>
            Represents a worksheet in a workbook, that is, a rectangular grid of cells containing data.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ICanTrackChanges">
            <summary>
            Provides a method that can create a TrackChangesCommand command.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ICanTrackChanges.TrackChanges">
            <summary>
            Creates a TrackChangesCommand object that can be used to track
            subsequent changes on the creator. The changes are accepted when
            the command is committed.
            </summary>
            <returns>
            The created TrackChangesCommand object.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.IHasName">
            <summary>
            Defines a name for the type that implements this interface.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IHasName.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.INotifyPropertyValueChanged">
            <summary>
            Provides notification for property changes.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.INotifyPropertyValueChanged.PropertyValueChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the Worksheet class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.ToString">
            <summary>
            Object.ToString override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.SaveToXml(System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Saves the worksheet content into an XML element.
            </summary>
            <param name="xmlElement">
            An XElement the worksheet's data should be stored into.
            </param>
            <param name="context">
            An XmlContext object providing contextual information
            about the serialization process and some helper serialization methods.
            </param>
            <remarks>
            This method is invoked when an workbook is being serialized into an
            XML-format file.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.LoadFromXml(System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Loads the worksheet content from an XML element.
            </summary>
            <param name="xmlElement">
            An XmlElement containing the worksheet's data.
            </param>
            <param name="context">
            An XmlContext object providing contextual information about
            the serialization process and some helper serialization methods.
            </param>
            <remarks>
            This method is invoked when an worksheet is being deserialized from a
            workbook file saved in XML format.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.SaveTo(System.IO.BinaryWriter,MindFusion.Spreadsheet.BinaryContext)">
            <summary>
            Serializes the worksheet to the specified writer.
            </summary>
            <param name="writer">
            A BinaryWriter object the item's data should be written to.
            </param>
            <param name="context">
            A BinaryContext object providing contextual information about
            the serialization process and some helper serialization methods.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.LoadFrom(System.IO.BinaryReader,MindFusion.Spreadsheet.BinaryContext)">
            <summary>
            Deserializes the worksheet from the specified reader.
            </summary>
            <param name="reader">
            A BinaryReader object from which to read the worksheet's data.
            </param>
            <param name="context">
            A BinaryContext object providing contextual information about the
            serialization process and some helper serialization methods.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.BeginInit">
            <summary>
            Signals the worksheet to enter an initialization state.
            To exit the initialization state, call EndInit.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.EndInit">
            <summary>
            Signals the worksheet that initialization is complete.
            To enter initialization state, call BeginInit.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Copy(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Copies this worksheet to the specified workbook.
            </summary>
            <param name="workbook">
            The workbook to copy to.
            </param>
            <returns>
            true if the copy was successful; otherwise, false. The method
            returns false if the workbook contains a worksheet with the
            same name.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Copy(MindFusion.Spreadsheet.Workbook,System.Int32)">
            <summary>
            Copies this worksheet to the specified workbook at the specified index.
            </summary>
            <param name="workbook">
            The workbook to copy to.
            </param>
            <param name="index">
            The 0-based index in the target workbook where to copy this worksheet,
            or -1, to copy at the end of the workbook.
            </param>
            <returns>
            true if the copy was successful; otherwise, false. The method
            returns false if the workbook contains a worksheet with the
            same name.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Copy(MindFusion.Spreadsheet.Workbook,System.Int32,System.String)">
            <summary>
            Copies this worksheet to the specified workbook at the specified index.
            </summary>
            <param name="workbook">
            The workbook to copy to.
            </param>
            <param name="index">
            The 0-based index in the target workbook where to copy this worksheet,
            or -1, to copy at the end of the workbook.
            </param>
            <param name="name">
            The new name of copied the worksheet.
            </param>
            <returns>
            true if the copy was successful; otherwise, false. The method
            returns false if the workbook contains a worksheet with the
            same name.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Move(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Moves this worksheet to the specified workbook.
            </summary>
            <param name="workbook">
            The workbook to move to.
            </param>
            <returns>
            true if the move was successful; otherwise, false. The method
            returns false if the workbook contains a worksheet with the
            same name.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Move(MindFusion.Spreadsheet.Workbook,System.Int32)">
            <summary>
            Moves this worksheet to the specified workbook at the specified position.
            </summary>
            <param name="workbook">
            The workbook to move to.
            </param>
            <param name="index">
            The 0-based index in the target workbook where to copy this worksheet,
            or -1, to copy at the end of the workbook.
            </param>
            <returns>
            true if the move was successful; otherwise, false. The method
            returns false if the workbook contains a worksheet with the
            same name.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Move(MindFusion.Spreadsheet.Workbook,System.Int32,System.String)">
            <summary>
            Moves this worksheet to the specified workbook at the specified position.
            </summary>
            <param name="workbook">
            The workbook to move to.
            </param>
            <param name="index">
            The 0-based index in the target workbook where to copy this worksheet,
            or -1, to copy at the end of the workbook.
            </param>
            <param name="name">
            The new name of moved the worksheet.
            </param>
            <returns>
            true if the move was successful; otherwise, false. The method
            returns false if the workbook contains a worksheet with the
            same name.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.MindFusion#Spreadsheet#ICanTrackChanges#TrackChanges">
            <summary>
            ICanTrackChanges.TrackChanges explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Disconnect">
            <summary>
            Disconnects the worksheet from its workbook.
            </summary>
            <remarks>
            Any attempt to modify a disconnected worksheet is considered
            illegal and will raise an exception.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Connect">
            <summary>
            Connects the worksheet to its original workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.CheckConnected">
            <summary>
            Checks if the worksheet is connected and raises an exception if it isn't.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Protect(System.String)">
            <summary>
            
            </summary>
            <param name="password">
            The password to use to protect the sheet.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Unprotect(System.String)">
            <summary>
            
            </summary>
            <param name="password">
            The password that was used to protect the sheet.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnWorkbookChanged(System.Object,MindFusion.Spreadsheet.PropertyEventArgs)">
            <summary>
            Handles the PropertyValueChanged event of the parent workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaisePropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnPropertyValueChanged(MindFusion.Spreadsheet.PropertyEventArgs)">
            <summary>
            Raises the PropertyValueChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaisePropertyValueChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the PropertyValueChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellChanging(MindFusion.Spreadsheet.CellValidationEventArgs)">
            <summary>
            Raises the CellChanging event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.ConfirmCellChanging(MindFusion.Spreadsheet.Cell,System.Object)">
            <summary>
            Raises the CellChanging event to confirm or reject a cell change.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.ConfirmCellChanging(MindFusion.Spreadsheet.CellStorage,System.Object)">
            <summary>
            Raises the CellChanging event to confirm or reject a cell change.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellChanged(MindFusion.Spreadsheet.CellChangedEventArgs)">
            <summary>
            Raises the CellChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellChanged(MindFusion.Spreadsheet.Cell,System.Object,System.Object)">
            <summary>
            Raises the CellChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellUpdated(MindFusion.Spreadsheet.CellStorageEventArgs)">
            <summary>
            Raises the CellUpdated event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellUpdated(MindFusion.Spreadsheet.CellStorage)">
            <summary>
            Raises the CellUpdated event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsUpdated(MindFusion.Spreadsheet.CellRangeEventArgs)">
            <summary>
            Raises the CellsUpdated event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellsUpdated(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Raises the CellsUpdated event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsClearing(MindFusion.Spreadsheet.CellsEventArgs)">
            <summary>
            Raises the CellsClearing event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellsClearing(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            Raises the CellsClearing event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsCleared(System.EventArgs)">
            <summary>
            Raises the CellsCleared event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellsCleared">
            <summary>
            Raises the CellsCleared event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsInserted(MindFusion.Spreadsheet.CellsInsertedEventArgs)">
            <summary>
            Raises the CellsInserted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellsInserted(MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.PushDirection,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Raises the CellsInserted event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsRemoved(MindFusion.Spreadsheet.CellsRemovedEventArgs)">
            <summary>
            Raises the CellsRemoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellsRemoved(MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.ShiftDirection,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{System.Int32,MindFusion.Spreadsheet.CellRange}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.List{MindFusion.Spreadsheet.CellAnnotation})">
            <summary>
            Raises the CellsRemoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsMoved(MindFusion.Spreadsheet.CellsMovedEventArgs)">
            <summary>
            Raises the CellsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellsMoved(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{System.Int32,MindFusion.Spreadsheet.CellRange}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.HashSet{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.List{MindFusion.Spreadsheet.CellAnnotation})">
            <summary>
            Raises the CellsMoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsSorted(MindFusion.Spreadsheet.CellsSortedEventArgs)">
            <summary>
            Raises the CellsSorted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnColumnChanged(MindFusion.Spreadsheet.ColumnChangedEventArgs)">
            <summary>
            Raises the ColumnChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseColumnChanged(MindFusion.Spreadsheet.Column,System.String,System.Object,System.Object)">
            <summary>
            Raises the ColumnChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnColumnsInserted(MindFusion.Spreadsheet.ColumnsEventArgs)">
            <summary>
            Raises the ColumnsInserted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseColumnsInserted(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Object)">
            <summary>
            Raises the ColumnsInserted event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnColumnsRemoved(MindFusion.Spreadsheet.ColumnsRemovedEventArgs)">
            <summary>
            Raises the ColumnsRemoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseColumnsRemoved(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.ColumnStorage},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{System.Int32,MindFusion.Spreadsheet.CellRange}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.List{MindFusion.Spreadsheet.CellAnnotation},System.Object)">
            <summary>
            Raises the ColumnsRemoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnColumnsMoved(MindFusion.Spreadsheet.ColumnsMovedEventArgs)">
            <summary>
            Raises the ColumnsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnRowChanged(MindFusion.Spreadsheet.RowChangedEventArgs)">
            <summary>
            Raises the RowChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseRowChanged(MindFusion.Spreadsheet.Row,System.String,System.Object,System.Object)">
            <summary>
            Raises the RowChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnRowsInserted(MindFusion.Spreadsheet.RowsEventArgs)">
            <summary>
            Raises the RowsInserted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseRowsInserted(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Object)">
            <summary>
            Raises the RowsInserted event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnRowsRemoved(MindFusion.Spreadsheet.RowsRemovedEventArgs)">
            <summary>
            Raises the RowsRemoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseRowsRemoved(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.RowStorage},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{System.Int32,MindFusion.Spreadsheet.CellRange}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.List{MindFusion.Spreadsheet.CellAnnotation},System.Object)">
            <summary>
            Raises the RowsRemoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnRowsMoved(MindFusion.Spreadsheet.RowsMovedEventArgs)">
            <summary>
            Raises the RowsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnInitializationCompleted(System.EventArgs)">
            <summary>
            Raises the InitializationCompleted event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellStyleChanged(MindFusion.Spreadsheet.StyleChangedEventArgs)">
            <summary>
            Raises the CellStyleChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellStyleChanged(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Raises the CellStyleChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnColumnStyleChanged(MindFusion.Spreadsheet.StyleChangedEventArgs)">
            <summary>
            Raises the ColumnStyleChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseColumnStyleChanged(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Raises the ColumnStyleChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnRowStyleChanged(MindFusion.Spreadsheet.StyleChangedEventArgs)">
            <summary>
            Raises the RowStyleChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseRowStyleChanged(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion})">
            <summary>
            Raises the RowStyleChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnCellsMerged(MindFusion.Spreadsheet.CellRangeEventArgs)">
            <summary>
            Raises the CellsMerged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseCellsMerged(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Raises the CellsMerged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnObjectAdded(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectAdded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseObjectAdded(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Raises the ObjectAdded event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnObjectRemoved(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectRemoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseObjectRemoved(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Raises the ObjectRemoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnObjectChanged(MindFusion.Spreadsheet.ObjectChangedEventArgs)">
            <summary>
            Raises the ObjectChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseObjectChanged(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Raises the ObjectChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseObjectChanged(System.Object,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Raises the ObjectChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnObjectUpdated(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectUpdated event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseObjectUpdated(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Raises the ObjectUpdated event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnValidationFailed(MindFusion.Spreadsheet.ValidationFailedEventArgs)">
            <summary>
            Raises the ValidationFailed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.ConfirmValidationFailed(System.String,MindFusion.Spreadsheet.Cell)">
            <summary>
            Raises the ValidationFailed event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.OnAutoFilterChanged(MindFusion.Spreadsheet.AutoFilterChangedEventArgs)">
            <summary>
            Raises the AutoFilterChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.RaiseAutoFilterChanged(System.Object,System.Object)">
            <summary>
            Raises the AutoFilterChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Clear">
            <summary>
            Clears the entire content of the worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.UpdateCells(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellRef},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            Notifies the worksheet that the data of the specified cells has changed.
            This causes either immediate or delayed calculation pass, depending
            on whether the worksheet is in initialization state.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.UpdateCell(MindFusion.Spreadsheet.CellStorage)">
            <summary>
            Notifies the worksheet that the data of the specified cell has changed.
            This causes either immediate or delayed calculation pass, depending
            on whether the worksheet is in initialization state.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Merge(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Merges the cells in the specified range into a single cell.
            </summary>
            <param name="range">
            The range that specifies the cells to merge.
            </param>
            <returns>
            true if the merge was successful; otherwise, false.
            </returns>
            <remarks>
            The merge will fail if the specified range contains only a single
            cell or if the range intersects with another merged cell.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Merge(System.String)">
            <summary>
            Merges the cells in the specified range into a single cell.
            </summary>
            <param name="range">
            A string specifying the range of cells to merge.
            </param>
            <returns>
            true if the merge was successful; otherwise, false.
            </returns>
            <remarks>
            The merge will fail if the specified range contains only a single
            cell or if the range intersects with another merged cell.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Merges the cells in the specified range into a single cell.
            </summary>
            <param name="topLeftColumn">
            The top-left column of the range of cells.
            </param>
            <param name="topLeftRow">
            The top-left row of the range of cells.
            </param>
            <param name="bottomRightColumn">
            The bottom-right column of the range of cells.
            </param>
            <param name="bottomRightRow">
            The bottom-right row of the range of cells.
            </param>
            <returns>
            true if the merge was successful; otherwise, false.
            </returns>
            <remarks>
            The merge will fail if the specified range contains only a single
            cell or if the range intersects with another merged cell.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Unmerge(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Unmerges all merged cells intersecting with the specified range.
            </summary>
            <param name="range">
            A range that specifies the cells to unmerge.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Unmerge(System.String)">
            <summary>
            Unmerges all merged cells intersecting with the specified range.
            </summary>
            <param name="range">
            A string specifying the range of cells to unmerge.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Unmerge(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Unmerges all merged cells intersecting with the specified range.
            </summary>
            <param name="topLeftColumn">
            The top-left column of the range of cells.
            </param>
            <param name="topLeftRow">
            The top-left row of the range of cells.
            </param>
            <param name="bottomRightColumn">
            The bottom-right column of the range of cells.
            </param>
            <param name="bottomRightRow">
            The bottom-right row of the range of cells.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.GetMergedCell(MindFusion.Spreadsheet.Cell)">
            <summary>
            Gets the merged cell containing the specified cell, if this cell is part of a merged cell.
            </summary>
            <param name="cell">
            The cell to inspect.
            </param>
            <returns>
            An instance of the CellRange class representing the containing merged cell, or null,
            if <i>cell</i> is not merged.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.GetMergedCell(System.Int32,System.Int32)">
            <summary>
            Gets the merged cell containing the cell with the specified coordinates, if this cell
            is part of a merged cell.
            </summary>
            <param name="column">
            The column of the cell to inspect.
            </param>
            <param name="row">
            The row of the cell to inspect.
            </param>
            <returns>
            An instance of the CellRange class representing the containing merged cell, or null,
            if the cell with the specified coordinates is not merged.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.Sort(MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.SortOptions)">
            <summary>
            Sorts the data in the specified range according to the specified criteria.
            </summary>
            <param name="range">
            The range to sort.
            </param>
            <param name="options">
            The sort settings, such as sort keys and direction.
            </param>
            <returns>
            true if the sort was successful; otherwise, false.
            </returns>
            <remarks>
            The sorting will fail if there are no keys specified or if all keys
            are outside of the current range.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.CopyData(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Copies the data in the specified range and returns an object
            identifying the copied data.
            </summary>
            <param name="range">
            The range from which the data is copied.
            </param>
            <returns>
            An object identifying the copied data.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.PasteData(MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.CellData)">
            <summary>
            Pastes the data identified by the specified object at the
            specified location. The data in the target range is discarded.
            </summary>
            <param name="cell">
            A Cell object identifying the target range. The dimensions of
            the target range are identical to the dimensions of the source range.
            </param>
            <param name="cellData">
            An object identifying the data to paste.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.CopyStyles(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Copies the styles in the specified range and returns an object
            identifying the copied styles.
            </summary>
            <param name="range">
            The range from which the styles are copied.
            </param>
            <returns>
            An object identifying the copied styles.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.PasteStyles(MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.StyleData)">
            <summary>
            Pastes the styles identified by the specified object at the
            specified location. The style information in the target
            range is discarded.
            </summary>
            <param name="cell">
            A Cell object identifying the target range. The dimensions of
            the target range are identical to the dimensions of the source range.
            </param>
            <param name="styleData">
            An object identifying the styles to paste.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.GetColumnOutlines">
            <summary>
            Gets a list with all column outlines.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.GetColumnRootOutlines">
            <summary>
            Gets the top-level column outlines.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.GetRowOutlines">
            <summary>
            Gets a list with all row outlines.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.GetRowRootOutlines">
            <summary>
            Gets the top-level row outlines.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Worksheet.GetSpanRange(System.Int32,System.Int32)">
            <summary>
            Gets a spanning range for the specified cell, that is,
            a range containing data, adjacent to the cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Name">
            <summary>
            Gets or sets the name of the worksheet.
            </summary>
            <remarks>
            The name of a worksheet must be unique (ignoring case) amongst
            all worksheets in a Workbook.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.CellStorage">
            <summary>
            Gets the actual cell storage.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Cells">
            <summary>
            Gets an object that can be used to access worksheet cells by (column, row) index or by name.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.CellRanges">
            <summary>
            Gets an object that can be used to access and manipulate rectangular ranges of worksheet cells.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.ColumnStorage">
            <summary>
            Gets the actual column storage.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Columns">
            <summary>
            Gets an object that can be used to insert, delete and modify worksheet columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.RowStorage">
            <summary>
            Gets the actual row storage.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Rows">
            <summary>
            Gets an object that can be used to insert, delete and modify worksheet rows.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.MergedCells">
            <summary>
            Gets a list with the currently merged cells.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Styles">
            <summary>
            Gets a collection with all styles used in the worksheet.
            </summary>
            <remarks>
            The contents of this collection are modified indirectly by manipulating
            the styles of the individual cells in the worksheet.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.FrozenColumnCount">
            <summary>
            Gets or sets the number of frozen columns in the worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.FrozenRowCount">
            <summary>
            Gets or sets the number of frozen rows in the worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Locale">
            <summary>
            Gets the locale of the parent workbook.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.EnableFormulaEvaluation">
            <summary>
            Gets a value indicating whether formula evaluation is enabled.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.EnableTypeInference">
            <summary>
            Gets or sets a value indicating whether cell data is automatically interpreted as
            a value of a specific type, or accepted as text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.IsDisconnected">
            <summary>
            Gets a value indicating whether this worksheet is currently disconnected
            from its workbook. Disconnected worksheets cannot be modified.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.IsInitializing">
            <summary>
            Gets a value indicating whether the worksheet is currently in initialization block.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.IsLoading">
            <summary>
            Gets or sets a value, indicating whether the worksheet is currently being
            deserialized. While in this state, the worksheet does not raise certain events,
            such as CellChanged, in order to improve performance
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.DefaultColumnWidth">
            <summary>
            Gets or sets the default width of columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.DefaultRowHeight">
            <summary>
            Gets or sets the default height of rows.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.ColumnCount">
            <summary>
            Gets the column count, excluding hidden columns at the end.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.RowCount">
            <summary>
            Gets the row count, excluding hidden rows at the end.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Drawing">
            <summary>
            Gets the Drawing object associated with the worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Visible">
            <summary>
            Gets or sets a value indicating whether this worksheet is visible.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Tag">
            <summary>
            Gets or sets a custom object associated with the worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.Zoom">
            <summary>
            Gets or sets the zoom factor of the worksheet when displayed in a view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.ZoomFactor">
            <summary>
            Gets the zoom factor of the worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.AutoFilter">
            <summary>
            Gets an AutoFilter object if autofiltering is enabled; otherwise, null.
            </summary>
            <remarks>
            To create an AutoFilter object for a worksheet, you must enable autofiltering
            for a range on the worksheet by using the AutoFilter method of the CellRange class.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Worksheet.AutoFilterMode">
            <summary>
            Gets or sets a value indicating whether there is an active autofilter
            in the worksheet.
            </summary>
            <remarks>
            This property can be set to false to turn autofiltering off, but cannot be set
            to true. To enable autofiltering, call the AutoFilter method of the CellRange class.
            </remarks>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.PropertyChanged">
            <summary>
            Raised when a property of the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.PropertyValueChanged">
            <summary>
            Raised when a property of the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellChanging">
            <summary>
            Raised when a cell of the worksheet is about to change.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellChanged">
            <summary>
            Raised when a cell of the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellUpdated">
            <summary>
            Raised when the value of a cell or another aspect of the cell
            that affects its appearance has been changed. CellUpdated is not
            raised during initialization.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsUpdated">
            <summary>
            Raised when the appearance of more than one cell have been changed.
            CellsUpdated is not raised during initialization.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsClearing">
            <summary>
            Raised when a range of cells is about to be cleared.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsCleared">
            <summary>
            Raised when a range of cells has been cleared.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsInserted">
            <summary>
            Raised when a range of cells has been inserted in the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsRemoved">
            <summary>
            Raised when a range of cells has been deleted from the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsMoved">
            <summary>
            Raised when a range of cells has been moved around the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsSorted">
            <summary>
            Raised when a range of cells has been sorted.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ColumnChanged">
            <summary>
            Raised when a column is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ColumnsInserted">
            <summary>
            Raised when one or more columns are inserted in the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ColumnsRemoved">
            <summary>
            Raised when one or more columns are removed from the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ColumnsMoved">
            <summary>
            Raised when one or more columns were moved in the sheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.RowChanged">
            <summary>
            Raised when a row is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.RowsInserted">
            <summary>
            Raised when one or more rows are inserted in the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.RowsRemoved">
            <summary>
            Raised when one or more rows are removed from the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.RowsMoved">
            <summary>
            Raised when one or more rows were moved in the sheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.InitializationCompleted">
            <summary>
            Raised when an initialization is completed by a call to EndInit.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellStyleChanged">
            <summary>
            Raised when a style of the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.RowStyleChanged">
            <summary>
            Raised when a style of a row in the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.NotifyRowStyleChanged">
            <summary>
            Raised when a style of a row in the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ColumnStyleChanged">
            <summary>
            Raised when a style of a column in the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.NotifyColumnStyleChanged">
            <summary>
            Raised when a style of a column in the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.CellsMerged">
            <summary>
            Raised when a range of cells is merged.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ObjectAdded">
            <summary>
            Raised when an object is added to the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ObjectRemoved">
            <summary>
            Raised when a object is removed from the worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ObjectChanged">
            <summary>
            Raised when an object in the worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ObjectUpdated">
            <summary>
            Raised when an aspect of an object that affects its appearance
            has been changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.ValidationFailed">
            <summary>
            Raised when the validation of entered data has failed and the validation's
            ErrorAction property is set to RaiseEvent.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Worksheet.AutoFilterChanged">
            <summary>
            Raised when the auto filter of the worksheet has changed.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Workbook">
            <summary>
            The main document class, contains a collection of worksheets, named
            ranges and other related objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.#ctor">
            <summary>
            Initializes a new instance of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.SetLocalizationInfo(System.String)">
            <summary>
            Localizes the UI elements that are related to this workbook with
            the strings contained in the specified XML file.
            </summary>
            <param name="xmlFile">
            A XML file containing the localization strings.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.SuspendUpdates">
            <summary>
            Suspends updates on all worksheets in the workbook.
            </summary>
            <remarks>
            The underlying Worksheets collection should not be modified when
            updates are suspended.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.ResumeUpdates">
            <summary>
            Resumes updates on all worksheets in the workbook.
            </summary>
            <remarks>
            The underlying Worksheets collection should not be modified when
            updates are suspended.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.System#ComponentModel#ISupportInitialize#BeginInit">
            <summary>
            ISupportInitialize.BeginInit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.System#ComponentModel#ISupportInitialize#EndInit">
            <summary>
            ISupportInitialize.EndInit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.UpdateCells">
            <summary>
            Recalculates all cells in the workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.UpdateCells(MindFusion.Spreadsheet.Worksheet,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            Recalculates the specified cells of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.UpdateCells(MindFusion.Spreadsheet.Worksheet,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellRef},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            Recalculates the specified cells of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.UpdateCell(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellStorage)">
            <summary>
            Recalculates the specified cell of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.EvaluateFormulas">
            <summary>
            Reevaluates all formulas containing custom and volatile functions
            and their dependent cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.GetData">
            <summary>
            Gets all data in the workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.GetObjects">
            <summary>
            Gets all objects in the workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the worksheet collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetRenamed(System.Object,MindFusion.Spreadsheet.ItemRenamedEventArgs{MindFusion.Spreadsheet.Worksheet})">
            <summary>
            Handles the ItemRenamed event of the worksheet collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnNamedRangesChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the named ranges collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnNamedRangeValueChanged(System.Object,MindFusion.Spreadsheet.PropertyEventArgs)">
            <summary>
            Handles the PropertyValueChanged event of all named ranges.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnNamedRangeRenamed(System.Object,MindFusion.Spreadsheet.ItemRenamedEventArgs{MindFusion.Spreadsheet.NamedRange})">
            <summary>
            Handles the ItemRenamed event of the named ranges collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetPropertyValueChanged(System.Object,MindFusion.Spreadsheet.PropertyEventArgs)">
            <summary>
            Handles the PropertyValueChanged event of all worksheets in this workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetCellChanging(System.Object,MindFusion.Spreadsheet.CellValidationEventArgs)">
            <summary>
            Handles the CellChanging event of all worksheets in this workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetCellChanged(System.Object,MindFusion.Spreadsheet.CellChangedEventArgs)">
            <summary>
            Handles the CellChanged event of all worksheets in this workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetCellsCleared(System.Object,System.EventArgs)">
            <summary>
            Handles the CellsCleared event of all worksheets in this workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetColumnChanged(System.Object,MindFusion.Spreadsheet.ColumnChangedEventArgs)">
            <summary>
            Handles the ColumnChanged event of all worksheets in this workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetRowChanged(System.Object,MindFusion.Spreadsheet.RowChangedEventArgs)">
            <summary>
            Handles the RowChanged event of all worksheets in this workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetValidationFailed(System.Object,MindFusion.Spreadsheet.ValidationFailedEventArgs)">
            <summary>
            Handles the ValidationFailed event of all worksheets in this workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.Find(System.String,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.FindWithin,MindFusion.Spreadsheet.LookIn,MindFusion.Spreadsheet.SearchOrder,MindFusion.Spreadsheet.SearchDirection,System.Boolean,System.Boolean)">
            <summary>
            Performs a search for a cell containing the specified text, using the specified criteria.
            </summary>
            <param name="search">
            The text to search.
            </param>
            <param name="reference">
            The cell to start the search from.
            </param>
            <param name="findWithin">
            The target of the search - the referenced worksheet or the entire workbook.
            </param>
            <param name="lookIn">
            Specifies whether to search in the cell's formula or value.
            </param>
            <param name="order">
            The search order - horizontal or vertical.
            </param>
            <param name="direction">
            The search direction - forward or backward.
            </param>
            <param name="matchCase">
            Specifies whether the search should be case-sensitive.
            </param>
            <param name="wholeCells">
            Specifies whether to match entire cells only.
            </param>
            <returns>
            A Cell object representing the found cell, or null, if the text was not found.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.FindAll(System.String,MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.FindWithin,MindFusion.Spreadsheet.LookIn,MindFusion.Spreadsheet.SearchOrder,MindFusion.Spreadsheet.SearchDirection,System.Boolean,System.Boolean)">
            <summary>
            Finds and returns all cells containing the specified text, using the specified criteria.
            </summary>
            <param name="search">
            The text to search.
            </param>
            <param name="reference">
            The worksheet to search.
            </param>
            <param name="findWithin">
            The target of the search - the specified worksheet or the entire workbook.
            </param>
            <param name="lookIn">
            Specifies whether to search in the cell's formula or value.
            </param>
            <param name="order">
            The search order - horizontal or vertical.
            </param>
            <param name="direction">
            The search direction - forward or backward.
            </param>
            <param name="matchCase">
            Specifies whether the search should be case-sensitive.
            </param>
            <param name="wholeCells">
            Specifies whether to match entire cells only.
            </param>
            <returns>
            An enumerable containing the found cells.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.IsMatch(MindFusion.Spreadsheet.CellStorage,System.String,MindFusion.Spreadsheet.LookIn,System.Boolean,System.Boolean)">
            <summary>
            Checks if the specified cell matches the specified criteria.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.Replace(System.String,System.String,MindFusion.Spreadsheet.Cell,MindFusion.Spreadsheet.FindWithin,MindFusion.Spreadsheet.SearchOrder,MindFusion.Spreadsheet.SearchDirection,System.Boolean,System.Boolean)">
            <summary>
            Replaces the data of the specified cell if it matches the specified criteria and
            returns the next matching cell.
            </summary>
            <param name="search">
            The text to search and replace.
            </param>
            <param name="replaceWith">
            The value to replace with.
            </param>
            <param name="cell">
            The cell containing the data to replace.
            </param>
            <param name="findWithin">
            The target of the replace operation - the referenced worksheet or the entire workbook.
            </param>
            <param name="order">
            The replace order - horizontal or vertical.
            </param>
            <param name="direction">
            The replace direction - forward or backward.
            </param>
            <param name="matchCase">
            Specifies whether the match should be case-sensitive.
            </param>
            <param name="wholeCells">
            Specifies whether to match entire cells only.
            </param>
            <returns>
            A Cell object representing the next matching cell, or null, if the text was not found or
            if the specified cell does not match.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.Replace(MindFusion.Spreadsheet.CellStorage,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces the matching component in the specified cell with the specified value.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.ReplaceAll(System.String,System.String,MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.FindWithin,System.Boolean,System.Boolean)">
            <summary>
            Replaces the data of all cells matching the specified criteria.
            </summary>
            <param name="search">
            The text to search and replace.
            </param>
            <param name="replaceWith">
            The text to replace with.
            </param>
            <param name="reference">
            The worksheet to search.
            </param>
            <param name="findWithin">
            The target of the replace operation - the specified worksheet or the entire workbook.
            </param>
            <param name="matchCase">
            Specifies whether the search should be case-sensitive.
            </param>
            <param name="wholeCells">
            Specifies whether to match entire cells only.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.StartChangeOperation(MindFusion.Spreadsheet.INotifyPropertyValueChanged)">
            <summary>
            Creates a Command object to track subsequent changes on the specified target.
            The returned command will be automatically executed when disposed.
            </summary>
            <param name="target">
            The object to track.
            </param>
            <returns>
            A TrackChangesCommand that is used to track the changes, or null, if undo is disabled.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.CancelChangeOperation(MindFusion.Spreadsheet.TrackChangesCommand)">
            <summary>
            Stops tracking changes by the specified command and reverts all changes done so far.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.CommitChangeOperation(MindFusion.Spreadsheet.TrackChangesCommand)">
            <summary>
            Stops tracking changes by the specified command and saves the command in the history queue.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.StartCompositeOperation">
            <summary>
            Starts recording undo/redo commands into a CompositeCommand.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.CancelCompositeOperation">
            <summary>
            Stops recording the most recently started composite operation and discards the records created so far.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.CommitCompositeOperation">
            <summary>
            Stops recording the most recently started composite operation and saves the composite in the history queue.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.ExecuteCommand(MindFusion.Spreadsheet.Command)">
            <summary>
            Executes the specified command on this workbook.
            </summary>
            <param name="command">
            The Command to execute.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.Undo">
            <summary>
            Undoes an action saved in the command history.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.Redo">
            <summary>
            Executes again an action saved in the command history.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.SaveToFile(System.String)">
            <summary>
            Saves the workbook into a file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.SaveToStream(System.IO.Stream)">
            <summary>
            Saves the workbook into a stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.LoadFromFile(System.String)">
            <summary>
            Loads a workbook from the specified file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.LoadFromStream(System.IO.Stream)">
            <summary>
            Loads the workbook from a stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.SaveToXml(System.String)">
            <summary>
            Saves the workbook into an XML file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.SaveToXml(System.Xml.Linq.XDocument)">
            <summary>
            Saves the workbook into an XML document.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.SaveToXml(System.Xml.Linq.XDocument,System.Xml.Linq.XElement)">
            <summary>
            Saves the workbook into an XML document.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.LoadFromXml(System.String)">
            <summary>
            Loads the workbook from an XML file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.LoadFromXml(System.Xml.Linq.XDocument)">
            <summary>
            Loads the workbook from an XML document.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.LoadFromXml(System.Xml.Linq.XDocument,System.Xml.Linq.XElement)">
            <summary>
            Loads the workbook from an XML document.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnActionRedone(MindFusion.Spreadsheet.UndoEventArgs)">
            <summary>
            Raises the ActionRedone event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseActionRedone(MindFusion.Spreadsheet.Command)">
            <summary>
            Raises the ActionRedone event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnActionUndone(MindFusion.Spreadsheet.UndoEventArgs)">
            <summary>
            Raises the ActionUndone event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseActionUndone(MindFusion.Spreadsheet.Command)">
            <summary>
            Raises the ActionUndone event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnPropertyValueChanged(MindFusion.Spreadsheet.PropertyEventArgs)">
            <summary>
            Raises the PropertyValueChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaisePropertyValueChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the PropertyValueChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetChanged(MindFusion.Spreadsheet.WorksheetChangedEventArgs)">
            <summary>
            Raises the WorksheetChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetCellChanging(MindFusion.Spreadsheet.CellValidationEventArgs)">
            <summary>
            Raises the WorksheetCellChanging event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetCellChanged(MindFusion.Spreadsheet.CellChangedEventArgs)">
            <summary>
            Raises the WorksheetCellChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetCellsCleared(MindFusion.Spreadsheet.WorksheetEventArgs)">
            <summary>
            Raises the WorksheetCellsCleared event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetColumnChanged(MindFusion.Spreadsheet.ColumnChangedEventArgs)">
            <summary>
            Raises the WorksheetColumnChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetRowChanged(MindFusion.Spreadsheet.RowChangedEventArgs)">
            <summary>
            Raises the WorksheetRowChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnWorksheetValidationFailed(MindFusion.Spreadsheet.ValidationFailedEventArgs)">
            <summary>
            Raises the WorksheetValidationFailed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnSerializeData(MindFusion.Spreadsheet.SerializeDataEventArgs)">
            <summary>
            Raises the SerializeData event.
            </summary>
            <param name="e">
            An instance of the SerializeDataEventArgs class that provides data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseSerializeData(MindFusion.Spreadsheet.Cell,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the SerializeData event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnDeserializeData(MindFusion.Spreadsheet.SerializeDataEventArgs)">
            <summary>
            Raises the DeserializeData event.
            </summary>
            <param name="e">
            An instance of the SerializeDataEventArgs class that contains data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseDeserializeData(MindFusion.Spreadsheet.Cell,System.Object@,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the DeserializeData event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnSerializeTag(MindFusion.Spreadsheet.SerializeTagEventArgs)">
            <summary>
            Raises the SerializeTag event.
            </summary>
            <param name="e">
            An instance of the SerializeDataEventArgs class that provides data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseSerializeTag(MindFusion.Spreadsheet.Worksheet,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the SerializeTag event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnDeserializeTag(MindFusion.Spreadsheet.SerializeTagEventArgs)">
            <summary>
            Raises the DeserializeData event.
            </summary>
            <param name="e">
            An instance of the SerializeDataEventArgs class that contains data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseDeserializeTag(MindFusion.Spreadsheet.Worksheet,System.Object@,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the DeserializeTag event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnSerializeColumnTag(MindFusion.Spreadsheet.SerializeColumnTagEventArgs)">
            <summary>
            Raises the SerializeColumnTag event.
            </summary>
            <param name="e">
            An instance of the SerializeColumnTagEventArgs class that provides data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseSerializeColumnTag(MindFusion.Spreadsheet.Column,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the SerializeColumnTag event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnDeserializeColumnTag(MindFusion.Spreadsheet.SerializeColumnTagEventArgs)">
            <summary>
            Raises the DeserializeColumnTag event.
            </summary>
            <param name="e">
            An instance of the SerializeColumnTagEventArgs class that contains data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseDeserializeColumnTag(MindFusion.Spreadsheet.Column,System.Object@,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the DeserializeColumnTag event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnSerializeRowTag(MindFusion.Spreadsheet.SerializeRowTagEventArgs)">
            <summary>
            Raises the SerializeRowTag event.
            </summary>
            <param name="e">
            An instance of the SerializeRowTagEventArgs class that provides data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseSerializeRowTag(MindFusion.Spreadsheet.Row,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the SerializeRowTag event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnDeserializeRowTag(MindFusion.Spreadsheet.SerializeRowTagEventArgs)">
            <summary>
            Raises the DeserializeRowTag event.
            </summary>
            <param name="e">
            An instance of the SerializeRowTagEventArgs class that contains data for the event.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.RaiseDeserializeRowTag(MindFusion.Spreadsheet.Row,System.Object@,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Raises the DeserializeRowTag event outside of the Workbook class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnCellsUpdated(MindFusion.Spreadsheet.CellsUpdatedEventArgs)">
            <summary>
            Raises the CellsUpdated event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Workbook.OnInitializationCompleted(System.EventArgs)">
            <summary>
            Raises the InitializationCompleted event.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.Worksheets">
            <summary>
            Gets an object that can be used to create and manage
            the worksheets in this workbook.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.NamedRanges">
            <summary>
            Gets an object that an be used to manage the named
            ranges in this workbook.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.Locale">
            <summary>
            Gets or sets the workbook locale.
            </summary>
            <remarks>
            This property is initialized with the culture of the current thread.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.DefaultNumericFormats">
            <summary>
            Gets the workbook defined default numeric formats.
            </summary>
            <remarks>
            This property is initialized with the defined locale for the workbook.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.CustomNumericFormats">
            <summary>
            Gets the workbook user defined custom numeric formats.
            </summary>
            <remarks>
            This property is initialized with the defined locale for the workbook.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.CanUndo">
            <summary>
            Gets a value indicating whether there is a command in the undo history which can be undone.
            </summary>
            <value>
            true if the undo queue contains operations that can be undone; otherwise, false.
            </value>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.CanRedo">
            <summary>
            Gets a value indicating whether there is a command in the undo history which can be redone.
            </summary>
            <value>
            true if the undo queue contains operations that can be redone; otherwise, false.
            </value>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.UndoEnabled">
            <summary>
            Gets or sets a value indicating whether saving action records for later undo is enabled.
            </summary>
            <value>
            true to save actions for later undo; otherwise false. The default is false.
            </value>
            <remarks>
            To undo the last recorded action, call the Undo method. It can be redone again by
            calling Redo. Custom operations can be integrated into the MindFusion.Spreadsheet
            undo/redo system by deriving from the Command class and running the operations by
            means of the ExecuteCommand method.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.ExtendedEvaluator">
            <summary>
            Gets or sets a custom expression evaluator. Identifier and function calls
            that cannot be resolved by the core are delegated to this evaluator.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.CoreInformationProvider">
            <summary>
            Gets the information provider for the built-in functions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.ExtendedInformationProvider">
            <summary>
            Gets or sets an information provider for custom functions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.CalculationMaxIterations">
            <summary>
            Gets or sets the maximum number of iterations when calculating
            certain functions, such as IRR and RATE.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.CalculationPrecision">
            <summary>
            Gets or sets the precision when calculating certain functions,
            such as IRR and RATE.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.EnableFormulaEvaluation">
            <summary>
            Gets or sets a value indicating whether formula evaluation is enabled.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Workbook.EnableTypeInference">
            <summary>
            Gets or sets a value indicating whether cell data is automatically interpreted as
            a value of a specific type, or accepted as text.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.ActionRedone">
            <summary>
            Raised when an action is redone.
            </summary>
            <remarks>
            This event is raised during calls to Redo. It is raised both for
            top-level commands and for the constituent actions of composite commands.
            </remarks>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.ActionUndone">
            <summary>
            Raised when an action is undone.
            </summary>
            <remarks>
            This event is raised during calls to Undo. It is raised both for
            top-level commands and for the constituent actions of composite commands.
            </remarks>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.PropertyValueChanged">
            <summary>
            Raised when a property of this object is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.WorksheetChanged">
            <summary>
            Raised when a property of one of the worksheets in this workbook is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.WorksheetCellChanging">
            <summary>
            Raised when a cell of one of the worksheets is about to change.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.WorksheetCellChanged">
            <summary>
            Raised when a cell of one of the worksheets is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.WorksheetCellsCleared">
            <summary>
            Raised when a range of cells in one of the worksheets has been cleared.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.WorksheetColumnChanged">
            <summary>
            Raised when a column in one of the worksheets is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.WorksheetRowChanged">
            <summary>
            Raised when a row in one of the worksheets is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.WorksheetValidationFailed">
            <summary>
            Raised when the validation of entered data has failed and the validation's
            ErrorAction property is set to RaiseEvent.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.SerializeData">
            <summary>
            Raised during XML serialization to enable users to perform
            custom serialization of the data values of cells.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.DeserializeData">
            <summary>
            Raised during XML deserialization to enable users to perform
            custom deserialization of the data values of cells.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.SerializeTag">
            <summary>
            Raised during XML serialization to enable users to perform
            custom serialization of tags.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.DeserializeTag">
            <summary>
            Raised during XML deserialization to enable users to perform
            custom deserialization of tags.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.SerializeColumnTag">
            <summary>
            Raised during XML serialization to enable users to perform
            custom serialization of tags.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.DeserializeColumnTag">
            <summary>
            Raised during XML deserialization to enable users to perform
            custom deserialization of tags.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.SerializeRowTag">
            <summary>
            Raised during XML serialization to enable users to perform
            custom serialization of tags.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Workbook.DeserializeRowTag">
            <summary>
            Raised during XML deserialization to enable users to perform
            custom deserialization of tags.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.TokenType">
            <summary>
            Specifies the type of a token.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Special">
            <summary>
            Indicates the formula prefix token '='.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Ws">
            <summary>
            Indicates a whitespace token.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Ob">
            <summary>
            Indicates an opening bracket '('.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Cb">
            <summary>
            Indicates a closing bracket ')'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Ocb">
            <summary>
            Indicates an opening curly bracket '{'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Ccb">
            <summary>
            Indicates a closing curly bracket '}'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Vline">
            <summary>
            Indicates a vertical line '|'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Matrix">
            <summary>
            Indicates a matrix node in a parse tree.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.MatrixRow">
            <summary>
            Indicates a matrix row node in a parse tree.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Identifier">
            <summary>
            Indicates an identifier.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Error">
            <summary>
            Indicates an error literal.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.CellIndex">
            <summary>
            Indicates a cell reference.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.SheetRef">
            <summary>
            Indicates a sheet reference.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.FunctionCall">
            <summary>
            Indicates a function identifier.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.FloatNumber">
            <summary>
            Indicates a floating point number.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.IntNumber">
            <summary>
            Indicates an integer number.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.String">
            <summary>
            Indicates a string literal.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpConcat">
            <summary>
            Indicates a string concatenation sign '&amp;'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpExponent">
            <summary>
            Indicates the exponent sign '^'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpPlus">
            <summary>
            Indicates a plus sign '+'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpMinus">
            <summary>
            Indicates a minus sign '-'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpMultiply">
            <summary>
            Indicates a multiplication operator '*'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpDivide">
            <summary>
            Indicates a division operator '/'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpPercent">
            <summary>
            Indicates a percent operator '%'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpLess">
            <summary>
            Indicates a less than comparison operator '&lt;'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpGreater">
            <summary>
            Indicates a greater than comparison operator '&gt;'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpEqual">
            <summary>
            Indicates an equal comparison operator '='.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpNotEqual">
            <summary>
            Indicates a not equal comparison operator '&lt;&gt;'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpLessOrEqual">
            <summary>
            Indicates a less than or equal comparison operator '&lt;='.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpGreaterOrEqual">
            <summary>
            Indicates a greater than or equal comparison operator '&gt;='.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpDot">
            <summary>
            Indicates a member access operator '.'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpSheetRef">
            <summary>
            Indicates a cell reference on another sheet operator '!'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.OpCellRange">
            <summary>
            Indicates a cell range operator ':'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Semicolon">
            <summary>
            Indicates a semicolon ';'.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.TokenType.Comma">
            <summary>
            Indicates a comma ','.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ExpressionException">
            <summary>
            Represents errors that occur during parsing or evaluation of
            spreadsheet expressions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionException.#ctor">
            <summary>
            Initializes a new instance of the ExpressionException class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExpressionException class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ExpressionException class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.FunctionNotFoundException">
            <summary>
            Raised during the expression evaluation when calling
            a function that does not exist.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the FunctionNotFoundException class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FunctionNotFoundException class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the FunctionNotFoundException class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Constants">
            <summary>
            Declares various global constants.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Constants.MaxColumn">
            <summary>
            The column limit (1024).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Constants.MaxExcelColumn">
            <summary>
            The column limit in Excel (16384).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Constants.MaxColumnLetter">
            <summary>
            The last column.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Constants.MaxRow">
            <summary>
            The row limit (1048576).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Constants.MaxFunctionParams">
            <summary>
            The maximum number of parameters for functions in expressions (64).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Constants.ObjectMoveThreshold">
            <summary>
            The number of pixels to move the mouse before the interacted object actually starts moving.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowRange">
            <summary>
            Identifies a range of rows in a Worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRange.#ctor(MindFusion.Spreadsheet.Worksheet,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the RowRange class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRange.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable.GetEnumerator explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRange.GetEnumerator">
            <summary>
            Returns an enumerator object that can be used to iterate through
            the rows in the range.
            </summary>
            <returns>
            An IEnumerator&lt;Row&gt; object that can be used to iterate
            through the rows in the range.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRange.Group">
            <summary>
            Increases the outline level of all rows in the range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRange.Ungroup">
            <summary>
            Decreses the outline level of all rows in the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.Style">
            <summary>
            Gets an IRowStyle object that can be used to customize
            the appearance of all rows in the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.Height">
            <summary>
            Gets or sets the height of all rows in the range.
            </summary>
            <remarks>
            If the rows have different or default heights, this property returns null.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.IsHidden">
            <summary>
            Gets or sets a value indicating whether the rows in the range are hidden.
            </summary>
            <remarks>
            If the rows have different or default values, this property returns null.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.OutlineLevel">
            <summary>
            Gets or sets the outline level of the rows in the range.
            </summary>
            <remarks>
            If the rows have different or default values, this property returns null.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.Validation">
            <summary>
            Gets an IValidation object that can be used to specify validation
            rules for the data in the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.ConditionalFormats">
            <summary>
            Gets a list with format objects that can be used to customize
            the appearance of the rows in the range based on various conditions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.Top">
            <summary>
            Gets the top row of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRange.Bottom">
            <summary>
            Gets the bottom row of the range.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectAnchorPosition">
            <summary>
            Specifies the anchor position of a worksheet object.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ObjectAnchorPosition.TopLeft">
            <summary>
            Indicates that a worksheet object is positioned relative 
            to the top-left corner of the anchor.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ObjectAnchorPosition.TopRight">
            <summary>
            Indicates that a worksheet object is positioned relative 
            to the top-right corner of the anchor.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ObjectAnchorPosition.BottomLeft">
            <summary>
            Indicates that a worksheet object is positioned relative 
            to the bottom-left corner of the anchor.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ObjectAnchorPosition.BottomRight">
            <summary>
            Indicates that a worksheet object is positioned relative 
            to the bottom-right corner of the anchor.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.index">
            <summary>
            The zero-based index of the header.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.isRow">
            <summary>
            A flag indicating whether the header is a row or a column.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.headerBounds">
            <summary>
            The bounding rectangle of the resized row or column.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.isResize">
            <summary>
            A flag indicating whether the interaction is a resize or move operation.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.initialMouse">
            <summary>
            The mouse position when the operation started.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.initialSize">
            <summary>
            The initial size (width for columns, height for rows).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.unit">
            <summary>
            The unit of the header size.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.indicatorBounds">
            <summary>
            The current bounding rectangle of the resize indicator.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HeaderInteraction.hasMoved">
            <summary>
            A flag indicating whether the mouse was actually moved throughout the interaction.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DeviceContext">
            <summary>
            Provides low-level wrapper around a Windows' device context.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.#ctor">
            <summary>
            Initializes a new instance of the DeviceContext class compatible
            with the screen. This instance cannot be used for drawing.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the DeviceContext class compatible
            with the screen but with the specified overridden resolutions.
            This instance cannot be used for drawing.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the DeviceContext class around
            the specified Windows' device context.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.Split(System.String)">
            <summary>
            Subdivides the specified string to whitespaces and text.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.SelectPen(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Selects a pen with the specified attributes in the underlying device context
            for subsequent painting. If the currently selected pen is identical with the
            pen with the specified attributes, nothing happens.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.SelectBrush(System.Drawing.Color)">
            <summary>
            Selects a brush with the specified attributes in the underlying device context
            for subsequent painting. If the currently selected brush is identical with the
            brush with the specified attributes, nothing happens.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.SelectColor(System.Drawing.Color)">
            <summary>
            Selects the specified color in the underlying device context for subsequent painting.
            If the currently selected color is identical with the specified color, nothing happens.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DeviceContext.SelectFont(System.String,System.Double,System.Drawing.FontStyle)">
            <summary>
            Selects a font with the specified attributes in the underlying device context
            for subsequent painting/measuring. If the currently selected font is identical
            with a font with the specified attributes, nothing happens. If the font cache
            already contains a font with the specified attributes this cached font is reused.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.OffscreenContext">
            <summary>
            Represents an off-screen painting target.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the OffscreenContext class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.#ctor(System.IntPtr,System.IntPtr)">
            <summary>
            Initializes a new instance of the OffscreenContext class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.Create(System.IntPtr,System.Drawing.Bitmap)">
            <summary>
            Creates an off-screen device context with the specified bitmap,
            compatible with the specified graphics.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.Create(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Creates an off-screen device context, compatible with the specified graphics.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.Dispose">
            <summary>
            Disposes all resources used by the context.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.SaveToFile(System.String)">
            <summary>
            Saves the context's content as an image file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.SaveToFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the context's content as an image file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.CreateGraphics">
            <summary>
            Creates a Graphics object that can be used for painting. The returned
            Graphics needs to be explicitly disposed of by the caller.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.CreateContext">
            <summary>
            Creates a device context that can be used for painting. The returned
            DeviceContext needs to be excplicitly disposed of by the caller.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.CopyFrom(MindFusion.Spreadsheet.OffscreenContext,System.Int32,System.Int32)">
            <summary>
            Copies the contents of the specified context onto this context,
            at the specified location.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.CopyFrom(MindFusion.Spreadsheet.OffscreenContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies a portion of the contents of the specified context onto
            this context, at the specified location.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.Draw(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Draws the contents of this context to the specified device context,
            at the specified location.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.Draw(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
            Draws the contents of this context to the specified device context,
            at the specified location.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OffscreenContext.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Draws the contents of this context to the specified graphics,
            at the specified location.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CsvImporter">
            <summary>
            CsvImporter lets you import .csv files into a Worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CsvImporter.Import(System.String,MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Imports the specified CSV file into the specified worksheet.
            </summary>
            <param name="filePath">A string specifying the path to the .csv file.</param>
            <param name="worksheet">The Worksheet instance where to import the data.</param>
            <returns>true if the data was successfully loaded; otherwise, false.</returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.CsvImporter.Separator">
            <summary>
            Gets or sets the character used as a separator.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CsvImporter.Quote">
            <summary>
            Gets or sets the character used as a quote.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CsvImporter.Encoding">
            <summary>
            Gets or sets the encoding used.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ReplaceItemCommand`1">
            <summary>
            Implements replacement of items in a collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ReplaceItemCommand`1.#ctor(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.UndoableCollection{`0},System.Int32,`0,`0)">
            <summary>
            Initializes a new instance of the ReplaceItemCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
            <param name="collection">
            The collection in which the item is replaced.
            </param>
            <param name="index">
            The zero-based index of the item within the collection.
            </param>
            <param name="item">
            The item that should be replaced in the collection.
            </param>
            <param name="newItem">
            The new item at the specified index.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ReplaceItemCommand`1.Execute">
            <summary>
            Command.Execute override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ReplaceItemCommand`1.Undo">
            <summary>
            Command.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ReplaceItemCommand`1.Redo">
            <summary>
            Command.Redo override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Selection">
            <summary>
            Represents a set of selected cells and objects within a grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.#ctor(MindFusion.Spreadsheet.GridView)">
            <summary>
            Initializes a new instance of the Selection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.OnChanged(MindFusion.Spreadsheet.SelectionChangedEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.OnUpdating(MindFusion.Spreadsheet.SelectionUpdatingEventArgs)">
            <summary>
            Raises the Updating event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Set(System.Int32,System.Int32)">
            <summary>
            Sets the selection over the cell at the specified coordinates.
            </summary>
            <param name="column">
            The zero-based index of the column of the cell to select.
            </param>
            <param name="row">
            The zero-based index of the row of the cell to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Set(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Sets the selection over the cells in the specified range.
            </summary>
            <param name="cellRange">
            A CellRange object specifying the cells to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the selection over the range of cells at the specified coordinates.
            </summary>
            <param name="column1">
            The leftmost column of the range to select.
            </param>
            <param name="row1">
            The topmost row of the range to select.
            </param>
            <param name="column2">
            The rightmost column of the range to select.
            </param>
            <param name="row2">
            The bottommost row of the range to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.SetInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the selection over the specified range.
            </summary>
            <param name="column1">The left column.</param>
            <param name="row1">The top row.</param>
            <param name="column2">The right column.</param>
            <param name="row2">The bottom row.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Add(System.Int32,System.Int32)">
            <summary>
            Adds the cell at the specified coordinates to the selection.
            </summary>
            <param name="column">
            The zero-based index of the column of the cell to select.
            </param>
            <param name="row">
            The zero-based index of the row of the cell to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the range of cells at the specified coordinates to the selection.
            </summary>
            <param name="column1">
            The leftmost column of the range to select.
            </param>
            <param name="row1">
            The topmost row of the range to select.
            </param>
            <param name="column2">
            The rightmost column of the range to select.
            </param>
            <param name="row2">
            The bottommost row of the range to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.AddInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the specified range to the selection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.AddRows(System.Int32)">
            <summary>
            Adds the row with the specified index to the selection.
            </summary>
            <param name="index">
            The index of the row to add.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.AddRows(System.Int32,System.Int32)">
            <summary>
            Adds a range of rows to the selection.
            </summary>
            <param name="index">
            The index of the first rows in the range.
            </param>
            <param name="count">
            The number of rows to add.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.AddColumns(System.Int32)">
            <summary>
            Adds the column with the specified index to the selection.
            </summary>
            <param name="index">
            The index of the column to add.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.AddColumns(System.Int32,System.Int32)">
            <summary>
            Adds a range of columns to the selection.
            </summary>
            <param name="index">
            The index of the first columns in the range.
            </param>
            <param name="count">
            The number of columns to add.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.SelectAll">
            <summary>
            Selects all cells in the worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.SelectAll(System.Int32,System.Int32)">
            <summary>
            Selects all cells starting from the topmost cell in a worksheet to 
            the specified count of columns and rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.SelectColumns(System.Int32)">
            <summary>
            Selects the column with the specified index.
            </summary>
            <param name="index">
            The index of the column to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.SelectColumns(System.Int32,System.Int32)">
            <summary>
            Selects a range of columns in the worksheet.
            </summary>
            <param name="index">
            The index of the first column in the range.
            </param>
            <param name="count">
            The number of columns to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.SelectRows(System.Int32)">
            <summary>
            Selects the row with the specified index.
            </summary>
            <param name="index">
            The index of the row to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.SelectRows(System.Int32,System.Int32)">
            <summary>
            Selects a range of rows in the worksheet.
            </summary>
            <param name="index">
            The index of the first rows in the range.
            </param>
            <param name="count">
            The number of rows to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Clear">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.ClearObjects">
            <summary>
            Removes all interactive objects from the selection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.InRow(System.Int32)">
            <summary>
            Indicates whether the specified row is part of the selection.
            </summary>
            <param name="row">The row to test.</param>
            <returns>true if at least one cell in the row is selected; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.InColumn(System.Int32)">
            <summary>
            Checks whether the specified column is part of the selection.
            </summary>
            <param name="column">The column to test.</param>
            <returns>true if at least one cell in the column is selected; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Contains(System.Int32,System.Int32)">
            <summary>
            Checks whether the selection contains the cell at the specified coordinates.
            </summary>
            <returns>true if the selection contains the cell at the specified coordinates; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Contains(MindFusion.Spreadsheet.CellIndex)">
            <summary>
            Checks whether the selection contains a cell associated with the 
            specified CellIndex.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.ContainsObject(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Checks whether the specified object is contained in the selection.
            </summary>
            <param name="obj">
            The object to check.
            </param>
            <returns>
            true if the object is selected; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.GetSelectedRows">
            <summary>
            Gets currently selected whole rows.
            </summary>
            <returns>
            If 1+ whole rows are selected returns an integer Array 
            where the first item is the index of the first selected row and 
            the second is the index of the last selected rows.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.GetSelectedCols">
            <summary>
            Gets currently selected whole columns.
            </summary>
            <returns>
            If 1+ whole columns are selected returns an integer Array 
            where the first item is the index of the first selected column and 
            the second is the index of the last selected column.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.IsRowSelected(System.Int32)">
            <summary>
            Checks whether the specified row is fully selected.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.IsColumnSelected(System.Int32)">
            <summary>
            Checks whether the specified column is fully selected.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.AddObject(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Selects the specified object.
            </summary>
            <param name="obj">
            The object to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Change(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Selects the specified object, deselects all other currently selected objects.
            </summary>
            <param name="obj">
            The object to select.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.Toggle(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Toggles the selection state of the specified object.
            </summary>
            <param name="obj">
            The object to select or deselect.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Selection.RemoveObject(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Removes the specified object from the selection.
            </summary>
            <param name="obj">
            The object to deselect.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.IsEmpty">
            <summary>
            Gets a value indicating whether the selection contains any cells.
            </summary>
            <remarks>
            This property should return true only when the associated view does
            not display any worksheets. Otherwise the selection contains at least
            the currently active cell.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.IsMultiple">
            <summary>
            Gets a value indicating whether the selection contains multiple ranges.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.Ranges">
            <summary>
            Gets a list with all selected cell ranges.
            </summary>
            <remarks>
            This property should always contain at least one range if the associated
            view displays a worksheet. Even when the selection is empty, this property
            should return a single range consisting of the active cell.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.AllRanges">
            <summary>
            Gets an enumerable with all selected cell ranges.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.Range">
            <summary>
            Gets a CellRange object representing the selected range of cells,
            or null, if the selection is empty.
            </summary>
            <remarks>
            If there is more than one selected cell range,
            this property returns the first range.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.Left">
            <summary>
            Gets the index of the leftmost column of the selected cell range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.Top">
            <summary>
            Gets the index of the topmost column of the selected cell range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.Right">
            <summary>
            Gets the index of the rightmost column of the selected cell range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.Bottom">
            <summary>
            Gets the index of the bottommost column of the selected cell range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Selection.Objects">
            <summary>
            Gets a list with the selected objects.
            </summary>
            <remarks>
            Do not modify the returned list directly. To select or deselect objects
            use the respective methods of the Selection class - AddObject and RemoveObject.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.InteractionState">
            <summary>
            Encapsulates the current state of user interaction with the control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.#ctor(MindFusion.Spreadsheet.GridView,MindFusion.Spreadsheet.InteractiveObject,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.InteractiveObject},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the InteractionState class.
            </summary>
            <param name="gridView">
            The control that was used to initiated the interaction.
            </param>
            <param name="mainObject">
            The main object to be modified.
            </param>
            <param name="allObjects">
            All modified objects, including the main.
            </param>
            <param name="handleIndex">
            The index of the selection handle to be dragged with the mouse,
            defines what kind of modification to perform.
            </param>
            <param name="quadrant">
            The quadrant (in view with frozen columns or rows) in which
            the interaction initially started.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.Start(System.Drawing.Point)">
            <summary>
            This method is invoked in the beginning of the interaction, usually
            when the user presses the left mouse button over a modification handle.
            </summary>
            <param name="point">
            A Point instance indicating the location of the cursor.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.Update(System.Drawing.Point)">
            <summary>
            This method is invoked to update the interaction state,
            usually in response to the user moving the mouse after
            the modification has started.
            </summary>
            <param name="point">
            A Point instance indicating the location of the cursor.
            </param>
            <returns>
            true if the update has been successful; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.Complete(System.Drawing.Point)">
            <summary>
            This method is invoked to complete the interaction,
            usually when the user releases the left mouse button.
            </summary>
            <param name="point">
            A Point instance indicating the location of the cursor.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.Cancel">
            <summary>
            Cancels the user interaction.
            </summary>
            <remarks>
            Call this method to cancel interaction, usually in response
            to the user clicking the right mouse button while dragging.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.ConfirmModify">
            <summary>
            Confirm modification by raising the ObjectModifying event for each modified object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.UpdateRect(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.PointF,System.Int32)">
            <summary>
            Calculates a new bounding rectangle for the object
            according to the modification handle that is currently
            being operated and the underlying constraints.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.IsAllowed(System.Drawing.Point)">
            <summary>
            Checks whether the current interaction can be completed at the specified point.
            </summary>
            <param name="point">
            A Point instance indicating the location of the cursor.
            </param>
            <returns>
            true if the action can be completed at point; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.ValidateAndSetCursor(System.Drawing.Point)">
            <summary>
            Gets the cursor depending on whether the interaction
            can be completed at the specified point or not.
            </summary>
            <param name="point">
            A PointF instance indicating the location of the cursor.
            </param>
            <returns>
            One of the values of the CursorHint enumeration, which is used by
            the view to set its Cursor property.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.CancelNow">
            <summary>
            Instruct the interaction to terminate on the next pass.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InteractionState.ShouldCancelDrag">
            <summary>
            Gets a value indicating whether the interaction should terminate on the next pass.
            </summary>
            <returns>
            true if the interaction should terminate; otherwise, false.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractionState.AdjustmentHandle">
            <summary>
            Gets the index of the selection handle to be modified.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractionState.CurrentPoint">
            <summary>
            Gets the current location of the mouse pointer.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractionState.InvalidRect">
            <summary>
            Gets or sets the area that should be repainted.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractionState.MouseMoved">
            <summary>
            Gets a value indicating whether the mouse pointer has
            moved since the user pressed down the mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractionState.Worksheet">
            <summary>
            Gets the associated Worksheet instance.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InteractionState.KeepRatio">
            <summary>
            Gets or sets a value indicating whether the interaction
            should preserve the object's dimension ratio.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.InteractionState.Info">
            <summary>
            Contains information about a single modified object.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.SeriesCollection">
            <summary>
            Represents a specialized collection for the series of a Chart object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.SeriesCollection.#ctor(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.Charts.Chart)">
            <summary>
            Initializes a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.SeriesCollection.Add">
            <summary>
            Creates and adds a new Series to the collection.
            </summary>
            <returns>
            The newly created Series object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.SeriesCollection.Remove(MindFusion.Spreadsheet.Charts.Series)">
            <summary>
            Removes the specified Series object from the collection.
            </summary>
            <param name="series">
            The Series object to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.SeriesCollection.Clear">
            <summary>
            Removes all Series objects from the collection.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Annotation">
            <summary>
            Represents a comment of a cell within a worksheet.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IInplaceEditable">
            <summary>
            Represents an inplace-editable object within a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IInplaceEditable.GetTextToEdit">
            <summary>
            Returns the text of the object which should be
            displayed initially when the object is in-place
            edited.
            </summary>
            <returns>
            A string value that represents the initial contents
            of the in-place edit box.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.IInplaceEditable.SetEditedText(System.String)">
            <summary>
            Sets the edited text to the object after the
            in-place editing operation has been completed
            successfully.
            </summary>
            <param name="newText">
            The new text of the in-place edited object.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Annotation.#ctor(MindFusion.Spreadsheet.CellAnnotation)">
            <summary>
            Initializes a new instance of the Annotation class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Annotation.ToString">
            <summary>
            Object.ToString override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Annotation.MindFusion#Spreadsheet#IInplaceEditable#GetTextToEdit">
            <summary>
            IInplaceEditable.GetTextToEdit explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Annotation.MindFusion#Spreadsheet#IInplaceEditable#SetEditedText(System.String)">
            <summary>
            IInplaceEditable.SetEditedText explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Annotation.Remove">
            <summary>
            Removes this annotation from its owner Cell object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Annotation.ShowAlways">
            <summary>
            Gets or sets a value indicating whether the annotation is always visible.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Annotation.Text">
            <summary>
            Gets or sets the comment text of the annotation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Annotation.CellAnnotation">
            <summary>
            Gets the interactive object associated with this annotation.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorkbookView">
            <summary>
            Represents a control that can display Workbook objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.#ctor">
            <summary>
            Initializes a new instance of the WorkbookView class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnLoad(System.EventArgs)">
            <summary>
            UserControl.OnLoad override.
            </summary>
            <param name="e">
            An object that contains the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.BeginEdit(MindFusion.Spreadsheet.IInplaceEditable)">
            <summary>
            Initiates in-place edit of the specified in-place editable object.
            </summary>
            <param name="item">
            The object to edit.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.EndEdit(System.Boolean)">
            <summary>
            Completes the in-place editing operation, previously
            started by a call to BeginEdit, and accepts or cancel
            the change.
            </summary>
            <param name="acceptChanges">
            true to accept in-place changes; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.Cut">
            <summary>
            Cuts the data from the currently selected cells to the clipboard.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.Copy">
            <summary>
            Copies the data from the currently selected cells to the clipboard.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.Paste">
            <summary>
            Pastes the data from the clipboard inside the currently selected cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ResizeColumnToFit(System.Int32)">
            <summary>
            Resizes a view column to fit its contents.
            </summary>
            <param name="index">
            The index of the column to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ResizeColumnsToFit(System.Int32,System.Int32)">
            <summary>
            Resizes view columns to fit their contents.
            </summary>
            <param name="startIndex">
            The index of the first column to resize.
            </param>
            <param name="endIndex">
            The index of the last column to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ResizeRowToFit(System.Int32)">
            <summary>
            Resizes a view row to fit its contents.
            </summary>
            <param name="index">
            The index of the row to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ResizeRowsToFit(System.Int32,System.Int32)">
            <summary>
            Resizes view rows to fit their contents.
            </summary>
            <param name="startIndex">
            The index of the first row to resize.
            </param>
            <param name="endIndex">
            The index of the last row to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.BringIntoView(MindFusion.Spreadsheet.Cell)">
            <summary>
            Scrolls the view to make the specified cell visible.
            </summary>
            <param name="cell">
            The cell to scroll to.
            </param>
            <returns>
            true if the operation was successful; false if the specified cell could not be scrolled to.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ToGlobalX(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the left side of the specified cell,
            to a measure, relative to the left side of the entire worksheet.
            </summary>
            <param name="x">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the worksheet.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ToGlobalY(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the top side of the specified cell,
            to a measure, relative to the top side of the entire worksheet.
            </summary>
            <param name="y">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the worksheet.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ToLocalX(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the left side of the worksheet,
            to a measure, relative to the left side of the specified cell.
            </summary>
            <param name="x">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the cell.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.ToLocalY(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the top side of the worksheet,
            to a measure, relative to the top side of the specified cell.
            </summary>
            <param name="y">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the cell.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.GetCellAt(MindFusion.Spreadsheet.Measure,MindFusion.Spreadsheet.Measure)">
            <summary>
            Gets the cell at the specified coordinates, expressed relatively
            to the top/left of the worksheet.
            </summary>
            <param name="x">
            The x-coordinate of the cell to get.
            </param>
            <param name="y">
            The y-coordinate of the cell to get.
            </param>
            <returns>
            A Cell object representing the cell at the specified location.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.GetCellAt(System.Int32,System.Int32)">
            <summary>
            Gets the cell at the specified coordinates, expressed relatively
            to the top/left of the control.
            </summary>
            <param name="x">
            The x-coordinates of the cell to get.
            </param>
            <param name="y">
            The y-coordinates of the cell to get.
            </param>
            <returns>
            A Cell object representing the cell at the specified location.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnActionUndone(System.Object,MindFusion.Spreadsheet.UndoEventArgs)">
            <summary>
            Handles the ActionUndone event of the associated workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnActionRedone(System.Object,MindFusion.Spreadsheet.UndoEventArgs)">
            <summary>
            Handles the ActionRedone event of the associated workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetChanged(System.Object,MindFusion.Spreadsheet.WorksheetChangedEventArgs)">
            <summary>
            Handles the WorksheetChanged event of the associated workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnInitializationCompleted(System.Object,System.EventArgs)">
            <summary>
            Handles the InitializationCompleted event of the associated workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.GetInsertIndex(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Gets the position within the tab control, where a tab for
            the specified worksheet should be inserted.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the Worksheets collection
            of the associated workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetRenamed(System.Object,MindFusion.Spreadsheet.ItemRenamedEventArgs{MindFusion.Spreadsheet.Worksheet})">
            <summary>
            Handles the ItemRenamed event of the Worksheets collection
            of the associated workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewCellClicked(System.Object,MindFusion.Spreadsheet.CellMouseEventArgs)">
            <summary>
            Handles the CellClicked event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewObjectClicked(System.Object,MindFusion.Spreadsheet.ObjectMouseEventArgs)">
            <summary>
            Handles the ObjectClicked event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewColumnClicked(System.Object,MindFusion.Spreadsheet.ColumnMouseEventArgs)">
            <summary>
            Handles the ColumnClicked event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewRowClicked(System.Object,MindFusion.Spreadsheet.RowMouseEventArgs)">
            <summary>
            Handles the RowClicked event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewInplaceEditStarting(System.Object,MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Handles the InplaceEditStarting event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewInplaceEditStarted(System.Object,MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Handles the InplaceEditStarted event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewInplaceEditEnding(System.Object,MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Handles the InplaceEditEnding event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewInplaceEditEnded(System.Object,MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Handles the InplaceEditEnded event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetViewRequestWorksheet(System.Object,MindFusion.Spreadsheet.RequestWorksheetEventArgs)">
            <summary>
            Handles the RequestWorksheet event of the underlying worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectStartModifying(System.Object,MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Handles the ObjectStartModifying event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectModifying(System.Object,MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Handles the ObjectModifying event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectModified(System.Object,MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Handles the ObjectModified event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectModifyCancelled(System.Object,MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Handles the ObjectModifyCancelled event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectSelecting(System.Object,MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Handles the ObjectSelecting event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectSelected(System.Object,MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Handles the ObjectSelected event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectDeselected(System.Object,MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Handles the ObjectDeselected event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectDeleting(System.Object,MindFusion.Spreadsheet.ObjectValidationEventArgs)">
            <summary>
            Handles the ObjectDeleting event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectDeleted(System.Object,MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Handles the ObjectDeleted event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnHyperlinkClicked(System.Object,MindFusion.Spreadsheet.CellEventArgs)">
            <summary>
            Handles the HyperlinkClicked event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnOutlineLevelToggled(System.Object,MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Handles the ColumnOutlineLevelToggled event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowOutlineLevelToggled(System.Object,MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Handles the RowOutlineLevelToggled event of the active worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnGroupCollapsed(System.Object,MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Handles the ColumnGroupCollapsed event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnGroupExpanded(System.Object,MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Handles the ColumnGroupCollapsed event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowGroupCollapsed(System.Object,MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Handles the RowGroupCollapsed event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowGroupExpanded(System.Object,MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Handles the RowGroupExpanded event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnDrawColumn(System.Object,MindFusion.Spreadsheet.DrawColumnEventArgs)">
            <summary>
            Handles the DrawColumn event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnDrawRow(System.Object,MindFusion.Spreadsheet.DrawRowEventArgs)">
            <summary>
            Handles the DrawRow event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsResized(System.Object,MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Handles the ColumnsResized event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsResized(System.Object,MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Handles the RowsResized event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsMoved(System.Object,MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Handles the ColumnsMoved event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsMoved(System.Object,MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Handles the RowsMoved event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsMoving(System.Object,MindFusion.Spreadsheet.ColumnRangeMovingEventArgs)">
            <summary>
            Handles the ColumnsMoving event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsMoving(System.Object,MindFusion.Spreadsheet.RowRangeMovingEventArgs)">
            <summary>
            Handles the RowsMoving event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsResizing(System.Object,MindFusion.Spreadsheet.ColumnRangeResizingEventArgs)">
            <summary>
            Handles the ColumnsResizing event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsResizing(System.Object,MindFusion.Spreadsheet.RowRangeResizingEventArgs)">
            <summary>
            Handles the RowsResizing event of the worksheet view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetCellChanged(System.Object,MindFusion.Spreadsheet.CellChangedEventArgs)">
            <summary>
            Handles the CellChanged event of the active worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetCellsCleared(System.Object,System.EventArgs)">
            <summary>
            Handles the CellsCleared event of the active worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetInitializationCompleted(System.Object,System.EventArgs)">
            <summary>
            Hadles the InitializationCopleted event of the active worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnFxTextEnter(System.Object,System.EventArgs)">
            <summary>
            Handles the Enter event of the formula textbox.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnFxTextLeave(System.Object,System.EventArgs)">
            <summary>
            Handles the Leave event of the formula textbox.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnFxTextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the formula textbox.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnFxTextKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the formula textbox.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabAdding(System.Object,MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Handles the TabAdding event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabAdded(System.Object,MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Handles the TabAdded event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabMoved(System.Object,MindFusion.Spreadsheet.TabMovedEventArgs)">
            <summary>
            Handles the TabMoved event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabRemoving(System.Object,MindFusion.Spreadsheet.TabValidationEventArgs)">
            <summary>
            Handles the TabRemoving event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabRemoved(System.Object,MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Handles the TabRemoved event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabRenaming(System.Object,MindFusion.Spreadsheet.TabNameValidationEventArgs)">
            <summary>
            Handles the TabRenaming event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabRenamed(System.Object,MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Handles the TabRenamed event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnTabClicked(System.Object,MindFusion.Spreadsheet.TabMouseEventArgs)">
            <summary>
            Handles the TabClicked event of the underlying tab control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.UpdateActiveSheet">
            <summary>
            Updates the currently displayed worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.Associate(MindFusion.Spreadsheet.Tab,MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Establishes association between the specified tab and worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.Dissociate(MindFusion.Spreadsheet.Tab,MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Removes a previously established association beteen the specified tab and worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnFxButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the Fx button.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnExpandButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the Expand button.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetAdded(MindFusion.Spreadsheet.WorksheetEventArgs)">
            <summary>
            Raises the WorksheetAdded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetRemoving(MindFusion.Spreadsheet.WorksheetValidationEventArgs)">
            <summary>
            Raises the WorksheetRemoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetRemoved(MindFusion.Spreadsheet.WorksheetEventArgs)">
            <summary>
            Raises the WorksheetRemoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnActiveWorksheetChanged(System.EventArgs)">
            <summary>
            Raises the ActiveWorksheetChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnActiveCellChanged(System.EventArgs)">
            <summary>
            Raises the ActiveCellChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the SelectionChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetTabClicked(MindFusion.Spreadsheet.WorksheetMouseEventArgs)">
            <summary>
            Raises the WorksheetTabClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetRenameFailed(MindFusion.Spreadsheet.WorksheetEventArgs)">
            <summary>
            Raises the WorksheetRenameFailed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnWorksheetRenamed(MindFusion.Spreadsheet.WorksheetEventArgs)">
            <summary>
            Raises the WorksheetRenamed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnCellClicked(MindFusion.Spreadsheet.CellMouseEventArgs)">
            <summary>
            Raises the CellClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectClicked(MindFusion.Spreadsheet.ObjectMouseEventArgs)">
            <summary>
            Raises the ObjectClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnClicked(MindFusion.Spreadsheet.ColumnMouseEventArgs)">
            <summary>
            Raises the ColumnClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowClicked(MindFusion.Spreadsheet.RowMouseEventArgs)">
            <summary>
            Raises the RowClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnInplaceEditStarting(MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Raises the InplaceEditStarting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnInplaceEditStarted(MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Raises the InplaceEditStarted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnInplaceEditEnding(MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Raises the InplaceEditEnding event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnInplaceEditEnded(MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Raises the InplaceEditEnded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectStartModifying(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectStartModifying event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectModifying(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectModifying event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectModified(MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Raises the ObjectModified event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectModifyCancelled(MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Raises the ObjectModifyCancelled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectSelecting(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectSelecting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectSelected(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectSelected event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectDeselected(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectDeselected event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectDeleting(MindFusion.Spreadsheet.ObjectValidationEventArgs)">
            <summary>
            Raises the ObjectDeleting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnObjectDeleted(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectDeleted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnHyperlinkClicked(MindFusion.Spreadsheet.CellEventArgs)">
            <summary>
            Raises the HyperlinkClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnOutlineLevelToggled(MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Raises the ColumnOutlineLevelToggled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowOutlineLevelToggled(MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Raises the RowOutlineLevelToggled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnGroupExpanded(MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Raises the ColumnGroupExpanded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnGroupCollapsed(MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Raises the ColumnGroupCollapsed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowGroupCollapsed(MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Raises the RowGroupCollapsed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowGroupExpanded(MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Raises the RowGroupExpanded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnDrawColumn(MindFusion.Spreadsheet.DrawColumnEventArgs)">
            <summary>
            Raises the DrawColumn event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnDrawRow(MindFusion.Spreadsheet.DrawRowEventArgs)">
            <summary>
            Raises the DrawRow event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsResized(MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Raises the ColumnsResized event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsResized(MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Raises the RowsResized event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsMoved(MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Raises the ColumnsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsMoved(MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Raises the RowsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsMoving(MindFusion.Spreadsheet.ColumnRangeMovingEventArgs)">
            <summary>
            Raises the ColumnsMoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsMoving(MindFusion.Spreadsheet.RowRangeMovingEventArgs)">
            <summary>
            Raises the RowsMoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnColumnsResizing(MindFusion.Spreadsheet.ColumnRangeResizingEventArgs)">
            <summary>
            Raises the ColumnsResizing event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.OnRowsResizing(MindFusion.Spreadsheet.RowRangeResizingEventArgs)">
            <summary>
            Raises the RowsResizing event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="F:MindFusion.Spreadsheet.WorkbookView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorkbookView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.BackColor">
            <summary>
            Gets or sets the background color of the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.Workbook">
            <summary>
            Gets or sets the Workbook displayed in the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ActiveWorksheet">
            <summary>
            Gets or sets the currently active worksheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.Selection">
            <summary>
            Gets an object that can be used to manipulate the selection in the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowSelection">
            <summary>
            Gets or sets a value indicating whether to display the cell selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ActiveCell">
            <summary>
            Gets or sets the currently active cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowActiveCell">
            <summary>
            Gets or sets a value indicating whether to display the active cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowAutoFilterRange">
            <summary>
            Gets or sets a value indicating whether to display the range affected by the autofilter.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ScrollX">
            <summary>
            Gets or sets the value of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ScrollY">
            <summary>
            Gets or sets the value of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowTabs">
            <summary>
            Gets or sets a value indicating whether the tabs are visible.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.TabAlignment">
            <summary>
            Gets or sets the tabs alignment.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowTabCloseButtons">
            <summary>
            Gets or sets a value indicating whether to display a close button for each tab.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowTabNavigationButtons">
            <summary>
            Gets or sets a value indicating whether the tab navigation buttons.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowCreateNewTab">
            <summary>
            Gets or sets a value indicating whether to display the 'Create New Tab' button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AllowTabReorder">
            <summary>
            Gets or sets a value indicating whether tabs can be rearranged interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AllowTabEdit">
            <summary>
            Gets or sets a value indicating whether tabs can be in-place edited.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether to display the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.DrawFilledCellBorders">
            <summary>
            Gets or sets a value indicating whether to draw the default grid lines
            for cells with set background.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AllowAutoFill">
            <summary>
            Gets or sets a value indicating whether to display the auto-fill
            handle at the bottom-right side of the selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AutoFillCopyOnly">
            <summary>
            Gets or sets whether the auto-fill tool should only copy values,
            instead of extrapolating new values from the selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AllowMoveHeaders">
            <summary>
            Gets or sets a value indicating whether the user can interactively move
            the worksheet headers, by selecting the entire column or row and dragging.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AllowMoveCells">
            <summary>
            Gets or sets a value indicating whether the user can interactively
            move cells around the worksheet, by pressing near the edge of the
            currently selected cells with the mouse and dragging.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowScrollToolTips">
            <summary>
            Gets or sets a value indicating whether to display tooltips when scrolling with the thumb.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.HScrollToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when the
            view is scrolled horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.VScrollToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when the
            view is scrolled vertically.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowResizeHeaderToolTips">
            <summary>
            Gets or sets a value indicating whether to display tooltips when the
            user resizes row or column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ResizeColumnToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when a
            column is resized interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ResizeRowToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when a
            row is resized interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowHeaders">
            <summary>
            Gets or sets a value indicating whether to display the row and column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowHiddenHeaderIndicators">
            <summary>
            Gets or sets a value indicating whether to display indicators for
            hidden row and column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AllowResizeCells">
            <summary>
            Gets or sets a value indicating whether users can resize rows and columns by dragging cell borders.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header, or null, to automatically size the row headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of the column header, or null, to automatically size the column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowHorizontalScrollBar">
            <summary>
            Gets or sets a value indicating whether to display the horizontal scroll bar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowVerticalScrollBar">
            <summary>
            Gets or sets a value indicating whether to display the vertical scroll bar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.ShowFormulaBar">
            <summary>
            Gets or sets a value indicating whether to display the formula bar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.IsEditing">
            <summary>
            Gets a value indicating whether there is currently an in-place
            editing operation in progress within the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.PointerCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user when no modification is performed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.DisallowCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user when
            an object cannot be created at a given location.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.MoveCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if
            the pointed object can be modified.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.HorizontalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user
            if dragging would resize an object horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.VerticalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object vertically.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.HorizontalSplitCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging would resize rows.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.VerticalSplitCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging would resize columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.DiagonalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object both vertically and horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.CounterDiagonalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object both vertically and horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.AutoFillCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if the mouse
            is over the auto fill handle or the user is currently performing
            an auto fill operation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.HyperlinkCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if the mouse is over
            a cell containing a hyperlink.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorkbookView.LicenseKey">
            <summary>
            Gets or sets the license key of the control.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.WorksheetAdded">
            <summary>
            Raised when a new worksheet is added to the view interactively,
            that is, when the user clicks on the 'Create New Tab' button.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.WorksheetRemoving">
            <summary>
            Raised when a worksheet is about to be removed interactively,
            that is, when the user clicks the close button of its associated tab.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.WorksheetRemoved">
            <summary>
            Raised when a worksheet is removed interactively, that is,
            when the user clicks the close button of its associated tab.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ActiveWorksheetChanged">
            <summary>
            Raised when the currently active worksheet is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ActiveCellChanged">
            <summary>
            Raised when the active cell is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.SelectionChanged">
            <summary>
            Raised when the current cell selection is changed interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.WorksheetTabClicked">
            <summary>
            Raised when a worksheet tab is clicked with the mouse.
            </summary>
            <remarks>
            The X and Y coordinates of the supplied event argument are
            relative to the WorkbookView.
            </remarks>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.WorksheetRenameFailed">
            <summary>
            Raised when a worksheet in-place edit failed due to repeating names.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.WorksheetRenamed">
            <summary>
            Raised when a worksheet is renamed through in-place edit.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.CellClicked">
            <summary>
            Raised when a cell of the active worksheet is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectClicked">
            <summary>
            Raised when an object of the active worksheet is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnClicked">
            <summary>
            Raised when a column of the active worksheet is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowClicked">
            <summary>
            Raised when a row of the active worksheet is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.InplaceEditStarting">
            <summary>
            Raised when an in-place edit operation is about to start,
            before the in-place editor is displayed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.InplaceEditStarted">
            <summary>
            Raised when an in-place edit operation has started,
            after the in-place editor is displayed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.InplaceEditEnding">
            <summary>
            Raised when an in-place edit operation is about to finish,
            before the in-place editor is closed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.InplaceEditEnded">
            <summary>
            Raised when an inplace-edit operation has finished.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectStartModifying">
            <summary>
            Raised while the user is moving or resizing an interactive object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectModifying">
            <summary>
            Raised when the user starts modifying an interactive object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectModified">
            <summary>
            Raised when the user completes the modification of an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectModifyCancelled">
            <summary>
            Raised when the user cancels the modification of an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectSelecting">
            <summary>
            Raised when the user is about to select an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectSelected">
            <summary>
            Raised when an object is selected, either programmatically or interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectDeselected">
            <summary>
            Raised when an object is deselected, either programmatically or interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectDeleting">
            <summary>
            Raised when an object is about to be deleted interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ObjectDeleted">
            <summary>
            Raised when an object is deleted interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.HyperlinkClicked">
            <summary>
            Raised when a cell containing a hyperlink is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnOutlineLevelToggled">
            <summary>
            Raised when a column outline level has been activated interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowOutlineLevelToggled">
            <summary>
            Raised when a row outline level has been activated interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnGroupExpanded">
            <summary>
            Raised when a column group has been expanded interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnGroupCollapsed">
            <summary>
            Raised when a column group has been collapsed interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowGroupExpanded">
            <summary>
            Raised when a row group has been expanded interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowGroupCollapsed">
            <summary>
            Raised when a row group has been collapsed interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.DrawColumn">
            <summary>
            Raised to allow custom drawing of view columns.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.DrawRow">
            <summary>
            Raised to allow custom drawing of view rows.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnsResized">
            <summary>
            Raised when one or more columns are resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowsResized">
            <summary>
            Raised when one or more rows are resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnsMoved">
            <summary>
            Raised when one or more columns are moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowsMoved">
            <summary>
            Raised when one or more rows are moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnsMoving">
            <summary>
            Raised when one or more columns are being moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowsMoving">
            <summary>
            Raised when one or more rows are being moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.ColumnsResizing">
            <summary>
            Raised when one or more columns are being resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorkbookView.RowsResizing">
            <summary>
            Raised when one or more rows are being resized interactively.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorkbookView.WorksheetViewState">
            <summary>
            Contains view-related information about individual worksheets inside the WorkbookView.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Case">
            <summary>
            Specifies the casing of a string.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Case.None">
            <summary>
            Indicates an empty string.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Case.Lower">
            <summary>
            Indicates that all characters are lower case or case-invariant.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Case.Upper">
            <summary>
            Indicates that all characters are upper case or case-invariant.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Case.Title">
            <summary>
            Indicates that the first letter is upper case and
            all other characters are lower case or case-invariant.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Case.Mixed">
            <summary>
            Indicates that the characters are mixed lower and upper case, but no title.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SortOrder">
            <summary>
            Specifies the order of a sorting operation, ascending or descending.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SortOrder.Ascending">
            <summary>
            Indicates that the items are sorted in ascending order.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SortOrder.Descending">
            <summary>
            Indicates that the items are sorted in descending order.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SortKey">
            <summary>
            Represents a key in a sorting operation.
            </summary>
            <remarks>
            Instances of this class can be added to the Keys collection of
            the SortOptions class.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.SortKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SortKey class.
            </summary>
            <param name="index">
            The zero-based index of the column or row to sort by.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.SortKey.Index">
            <summary>
            Gets or sets the zero-based index of the column or row to sort by.
            </summary>
            <remarks>
            This property identifies either column or row index, depending on
            the value of the Direction property of the parent SortOptions.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.SortKey.Order">
            <summary>
            Gets or sets the sort order, either ascending or descending.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SortKey.TreatTextAsNumber">
            <summary>
            Gets or sets a value identifying whether to compare text values as numbers
            when possible. 
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SortDirection">
            <summary>
            Specifies the direction of a sorting operation.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SortDirection.TopToBottom">
            <summary>
            Indicates top-to-bottom direction. The sort keys represent columns.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SortDirection.LeftToRight">
            <summary>
            Indicates left-to-right direction. The sort keys represent rows.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SortOptions">
            <summary>
            Specifies the order of a sorting operation, ascending or descending.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.SortOptions.#ctor">
            <summary>
            Initializes a new instance of the SortOptions class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SortOptions.Keys">
            <summary>
            Gets the sort keys - objects identifying which columns or rows
            to sort by and whether the sort is ascending or descending.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SortOptions.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SortOptions.CaseSensitive">
            <summary>
            Gets or sets a value indicating whether text value comparison
            is case-sensitive.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SortOptions.Locale">
            <summary>
            Gets or sets a CultureInfo object to use when parsing text values
            for keys with TreatTextAsNumber set to true.
            </summary>
            <remarks>
            If this property is null, the parsing will be performed using the
            culture of the current worksheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.DataSorter.#ctor">
            <summary>
            Initializes a new instance of the DataSorter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DataSorter.Sort(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.SortOptions)">
            <summary>
            Sorts the data in the specified range of the specified sheet using the
            specified options.
            </summary>
            <param name="worksheet">
            The worksheet to sort.
            </param>
            <param name="range">
            The range within the worksheet.
            </param>
            <param name="options">
            The options to use.
            </param>
            <returns>
            true if the sort was successful; otherwise, false.
            </returns>
            <remarks>
            The sorting will fail if there are no keys specified or if all keys
            are outside of the specified range.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.DataComparer.CompareStrings(System.Object,System.Object)">
            <summary>
            Compares the specified objects as strings using the underlying culture
            and sorting options.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ValueParser">
            <summary>
            Interprets a string value based on a specified locale.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Drawing">
            <summary>
            Represents a drawing within a worksheet. A drawing can contain unlimited
            number of visual elements such as pictures, diagrams and charts.
            </summary>
            <remarks>
            This class cannot be instantiated directly. In order to obtain a reference
            to a drawing use the Drawing property of the respective Worksheet object.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the Drawing class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.AddPicture">
            <summary>
            Creates and adds a new picture to the drawing.
            </summary>
            <returns>
            A Picture object representing the newly created picture.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.AddPicture(System.String)">
            <summary>
            Creates and adds a new picture with the specified image to the drawing.
            </summary>
            <param name="imagePath">
            The full name of the file containing the image.
            </param>
            <returns>
            A Picture object representing the newly created picture.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.AddPicture(System.String,System.Int32,System.Int32)">
            <summary>
            Creates and adds a new picture with the specified image to the drawing.
            </summary>
            <param name="imagePath">
            The full name of the file containing the image.
            </param>
            <param name="column">
            The column where the picture will be positioned initially.
            </param>
            <param name="row">
            The row where the picture will be positioned initially.
            </param>
            <returns>
            A Picture object representing the newly created picture.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.AddChart">
            <summary>
            Creates and adds a new chart to the drawing.
            </summary>
            <returns>
            A Chart object representing the newly created chart.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.AddChart(System.Int32,System.Int32)">
            <summary>
            Creates and adds a new chart to the drawing.
            </summary>
            <param name="column">
            The column where the chart will be positioned initially.
            </param>
            <param name="row">
            The row where the chart will be positioned initially.
            </param>
            <returns>
            A Chart object representing the newly created chart.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.Remove(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Removes the specified object from the drawing.
            </summary>
            <param name="obj">
            The object to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.Clear">
            <summary>
            Removes all objects from the drawing.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.BringToFront(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Brings the specified object to the top of the z-order.
            </summary>
            <param name="obj">
            The object to reorder.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.SendToBack(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Sends the specified object to the bottom of the z-order.
            </summary>
            <param name="obj">
            The object to reorder.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.BringForward(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Moves the specified object one step up in the z-order.
            </summary>
            <param name="obj">
            The object to reorder.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Drawing.SendBackward(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Moves the specified object one step down in the z-order.
            </summary>
            <param name="obj">
            The object to reorder.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.Drawing.Pictures">
            <summary>
            Gets an enumerable with all pictures in the drawing.
            </summary>
            <value>
            An IEnumerable object that can be used to iterate the pictures in the drawing.
            </value>
        </member>
        <member name="P:MindFusion.Spreadsheet.Drawing.Charts">
            <summary>
            Gets an enumerable with all charts in the drawing.
            </summary>
            <value>
            An IEnumerable object that can be used to iterate the charts in the drawing.
            </value>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.Series">
            <summary>
            Represents a data series in a Chart object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Series.#ctor(MindFusion.Spreadsheet.Charts.SeriesCollection)">
            <summary>
            Initializes a new instance of the Series class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.Name">
            <summary>
            Gets or sets the name of the series.
            </summary>
            <remarks>
            This property can be an expression or a name of a cell.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.NameInvariant">
            <summary>
            Gets or sets Name in a culture-invariant manner.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.Values">
            <summary>
            Gets or sets the values of the series.
            </summary>
            <remarks>
            This property can be an expression that evaluates to a range of cells or a matrix,
            or a name of a range of cells.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.Labels">
            <summary>
            Gets or sets the labels of the series. The first available labels are
            used for the category names for all series in the chart.
            </summary>
            <remarks>
            This property can be an expression that evaluates to a range of cells or a matrix,
            or a name of a range of cells.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.Fill">
            <summary>
            Gets or sets a brush that is used to fill the chart elements representing the series,
            or null, to automatically assign a brush.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.LineColor">
            <summary>
            Gets or sets the outline color of the chart elements representing the series,
            or null, to hide the outlines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.LineSize">
            <summary>
            Gets or sets the outline thickness of the chart elements representing the series,
            or null, to use the default thickness.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Series.LineStyle">
            <summary>
            Gets or sets the outline style of the chart elements representing the series,
            or null, to draw solid lines.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellPainter">
            <summary>
            Draws Worksheet cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellPainter.GetCellRect(System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell with the specified column and row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellPainter.GetRangeRect(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Gets the rectangle of the specified cell range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellPainter.GetRangeRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell range with the specified coordinates.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellPainter.BorderInfo">
            <summary>
            Precalculated information for a single border side.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellPaintInfo">
            <summary>
            Precomputed information required to paint a cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellPaintInfo.#ctor(MindFusion.Spreadsheet.Cell)">
            <summary>
            Initializes a new instance of the CellPaintInfo class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.X">
            <summary>
            Gets or sets the x-coordinate of this object in the cell info grid.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.Y">
            <summary>
            Gets or sets the y-coordinate of this object in the cell info grid.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.Cell">
            <summary>
            Gets or sets the underlying cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.Style">
            <summary>
            Gets or sets the style of the cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.Rect">
            <summary>
            Gets or sets the paint rectangle of the cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.IsMerged">
            <summary>
            Gets a value indicating whether this cell is part of a merged range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.IsMergedStart">
            <summary>
            Gets or sets a value indicating whether this is the first visible cell
            of a merged range, not necessarily the top-left cell of the range.
            This property is set during painting.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.MergeInfo">
            <summary>
            Gets or sets the CellPaintInfo of the master merge cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.CellStorage">
            <summary>
            Gets or sets the storage of this cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.MergeRange">
            <summary>
            Gets or sets the merged range this cell belongs to, if any.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.MergeRect">
            <summary>
            Gets the rectangle of the merged range this cell belongs to.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.IsVisible">
            <summary>
            Gets or sets a value indicating whether this cell should be painted.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.OverflowOriginOffset">
            <summary>
            Gets or sets the relative column of the cell whose content overflows
            into this cell. This is null for cells that do not display overflowing
            content. The origin cell may or may not be part of the cell info grid.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.OverflowOriginInfo">
            <summary>
            Gets or sets the cell whose content overflows into this cell, if it is
            part of the cell info grid.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.IsContentPainted">
            <summary>
            Gets or sets a value indicating whether the content of this cell has been painted.
            This property is set during painting.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.Value">
            <summary>
            Gets or sets the content of this cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.ContentStyle">
            <summary>
            Gets or sets the style of the cell content. This is not null only
            when the cell displays overflown content from a nearby cell and
            specifies the style of this overflown content.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.ContentRect">
            <summary>
            Gets or sets the rectangle of the cell content. This is not null only
            when the cell displays overflown content from a nearby cell and
            specifies the rectangle of this overflown content.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellPaintInfo.ClipRect">
            <summary>
            Gets or sets a rectangle that should be used to clip the content of the cell.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RenderContext">
            <summary>
            CellPainter rendering context.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IRenderTarget">
            <summary>
            CellPainter rendering target.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.GraphicsRenderTarget">
            <summary>
            Graphics rendering target.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GraphicsRenderTarget.Split(System.String)">
            <summary>
            Subdivides the specified string to whitespaces and text.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DeviceContextRenderTarget">
            <summary>
            Mixed rendering target.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.TopBottomFilterForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TopBottomFilterForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TopBottomFilterForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.StyleData">
            <summary>
            Represents a copy of the cell styles in a worksheet region.
            Instances of this class can be obtained by calling the CopyStyles
            method of a Worksheet.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Properties.Resources.down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Properties.Resources.fx">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Properties.Resources.up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.MoveItemCommand`1">
            <summary>
            Implements moving of items within a collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MoveItemCommand`1.#ctor(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.UndoableCollection{`0},System.Int32,System.Int32,`0)">
            <summary>
            Initializes a new instance of the MoveItemCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
            <param name="collection">
            The collection in which the item is moved.
            </param>
            <param name="fromIndex">
            The zero-based of the item.
            </param>
            <param name="toIndex">
            The zero-based index where the item should be moved.
            </param>
            <param name="item">
            The item that should be moved.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.MoveItemCommand`1.Execute">
            <summary>
            Command.Execute override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MoveItemCommand`1.Undo">
            <summary>
            Command.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MoveItemCommand`1.Redo">
            <summary>
            Command.Redo override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellCollection">
            <summary>
            Represents a specialized collection for worksheet cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellCollection.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the CellCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An IEnumerator that can be used to iterate through the collection.
            </returns>
            <remarks>
            The returned enumerator iterates only though the cells that are not blank.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellCollection.GetFast(System.String)">
            <summary>
            Gets the cell with the specified reference. The specified string
            must be a proper A1 format or the function will behave unexpectedly.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets a Cell object that can be used to manipulate the
            data of the cell with the specified coordinates.
            </summary>
            <param name="column">
            The zero-based index of the cell column.
            </param>
            <param name="row">
            The zero-based index of the cell row.
            </param>
            <returns>
            A Cell object that can be used to get or set the data of the cell.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellCollection.Item(System.String)">
            <summary>
            Gets a Cell object that can be used to manipulate the data of the specified cell.
            </summary>
            <param name="reference">
            A string value representing a cell reference in the A1 or R1C1 format.
            </param>
            <returns>
            A Cell object that can be used to get or set the data of the cell.
            </returns>
            <remarks>
            If <i>reference</i> is not a valid cell reference, represents a cell range, or
            contains a sheet name other than that of the current worksheet, this property
            returns null.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellStorage">
            <summary>
            Represents a cell in a Worksheet model.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellStorage.#ctor(MindFusion.Spreadsheet.Worksheet,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellStorage class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellStorage.RefactorSheet(System.String,System.String)">
            <summary>
            Replaces all references to the sheet with the specified old name
            in the cell expression to be the specified new name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellStorage.RefactorReferences(System.Func{MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.CellRef})">
            <summary>
            Refactors all cell references in the cell expression using
            the specified function.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellStorage.GetInvariantData">
            <summary>
            Gets a culture-invariant representation of the cell's data. If the cell
            is a formula, containing floating point numbers, they use dot as the
            decimal separators.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorage.CellRef">
            <summary>
            Gets the address of this cell, as a CellRef object.
            The returned CellRef uses absolute coordinates.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorage.Data">
            <summary>
            Gets or sets the data of this cell.
            </summary>
            <remarks>
            If the specified data is a string, starting with an equal sign '=',
            it is interpreted as a formula. To specify a string, starting with
            an equal sign, prefix the string with a single apostrophe '''.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorage.Value">
            <summary>
            Gets or sets the effective value of this cell.
            If the cell contains a formula, this property
            should return the result of the formula evaluation.
            </summary>
            <remarks>
            This property should be set only by the underlying calc engine
            or during deserialization.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorage.Formula">
            <summary>
            Gets a culture-aware representation of the cell's formula, if any.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorage.Locale">
            <summary>
            Gets or sets the locale used to format the cell value.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorage.IsStale">
            <summary>
            Gets or sets a value indicating whether the value of this cell
            is out-of-date and needs to be recalculated.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorage.ErrorMessage">
            <summary>
            Gets the error message of the cell evaluation, if the cell evaluated to an error,
            or an empty string.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Cell">
            <summary>
            Identifies a single cell in a Worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.#ctor(MindFusion.Spreadsheet.Worksheet,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Cell class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
            <param name="obj">
            The object to compare with the current object.
            </param>
            <returns>
            true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>
            A string representation of the cell.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.SetData(System.Object,System.Int32,System.Int32)">
            <summary>
            Sets the data of the cell, represented by this object.
            </summary>
            <param name="value">
            The new data of the cell.
            </param>
            <param name="dcolumn">
            If <i>value</i> represents a formula, this is the column offset of
            all relative cell references. Otherwise, this value is ignored.
            </param>
            <param name="drow">
            If <i>value</i> represents a formula, this is the row offset of
            all relative cell references. Otherwise, this value is ignored.
            </param>
            <remarks>
            If <i>value</i> is a string, starting with an equal sign '=', it
            is interpreted as a formula. To specify a string, starting with an
            equal sign as cell data, prefix the string with a single apostrophe '''.
            The parameters <i>dcolumn</i> and <i>drow</i> can be used to offset
            all relative cell references in the formula. For example, the following
            call SetData("=A1", 1, 2) will actually set the formula "=B3" as data
            in the cell.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.SetData(System.Object,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the data of the cell, represented by this object.
            </summary>
            <param name="value">
            The new data of the cell.
            </param>
            <param name="dcolumn">
            If <i>value</i> represents a formula, this is the column offset of
            all relative cell references. Otherwise, this value is ignored.
            </param>
            <param name="drow">
            If <i>value</i> represents a formula, this is the row offset of
            all relative cell references. Otherwise, this value is ignored.
            </param>
            <param name="isCultureInvariant">
            true to interpret the specified data as a culture-invariant;
            false to interpret it in the context of the worksheet's locale.
            </param>
            <remarks>
            If <i>value</i> is a string, starting with an equal sign '=', it
            is interpreted as a formula. To specify a string, starting with an
            equal sign as cell data, prefix the string with a single apostrophe '''.
            The parameters <i>dcolumn</i> and <i>drow</i> can be used to offset
            all relative cell references in the formula. For example, the following
            call SetData("=A1", 1, 2) will actually set the formula "=B3" as data
            in the cell.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.Clear">
            <summary>
            Clears the contents of this cell.
            </summary>
            <returns>
            true if the cell contained actual data before the call;
            false, if the cell is already blank.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.Reset">
            <summary>
            Clears the cell contents, as well as its associated style,
            hyperlink, annotation, conditional formatting and data validations.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.SetAnnotation(System.String)">
            <summary>
            Sets the text of the annotation object, associated with this cell.
            </summary>
            <param name="value">
            The text of the comment.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.RemoveAnnotation">
            <summary>
            Removes an annotation object from the cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.SetHyperlink(MindFusion.Spreadsheet.HyperlinkType,System.String,System.String)">
            <summary>
            Sets a hyperlink, associated with this cell.
            </summary>
            <param name="type">
            The type of the hyperlink.
            </param>
            <param name="target">
            The hyperlink target.
            </param>
            <param name="subTarget">
            The hyperlink sub-target.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.SetHyperlinkInternal(MindFusion.Spreadsheet.HyperlinkType,System.String,System.String,System.String)">
            <summary>
            Sets an implicit hyperlink associated with this cell.
            </summary>
            <param name="type">
            The type of the hyperlink.
            </param>
            <param name="target">
            The hyperlink target.
            </param>
            <param name="subTarget">
            The hyperlink sub-target.
            </param>
            <param name="toolTip">
            The hyperlink tooltip.
            </param>
            <remarks>
            Used internally by the expression evaluation engine.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.RemoveHyperlink">
            <summary>
            Removes the hyperlink associated with this cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.RemoveHyperlinkInternal">
            <summary>
            Removes an implicit hyperlink associated with this cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.GetStyle">
            <summary>
            Gets the final style of the cell. All properties of the returned style
            are fully defined. Missing style properties fall back to the style of
            the associated row and column, if any, or to the default style.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Cell.GetValidation">
            <summary>
            Gets the validation of the cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Worksheet">
            <summary>
            Gets the worksheet this cell belongs to.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.CellRef">
            <summary>
            Gets the address of this cell, as a CellRef object.
            The returned CellRef uses absolute coordinates.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.CellStorage">
            <summary>
            Gets the underlying cell storage, possibly null, if this object
            represents a default cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Data">
            <summary>
            Gets or sets the cell data.
            </summary>
            <remarks>
            If this property is set to null, this is equivalent to clearing
            the cell via Clear. If the specified value is a string, starting
            with an equal sign '=', it is interpreted as a formula. To specify
            a string, starting with an equal sign as cell data, prefix the
            string with a single apostrophe '''.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.RawData">
            <summary>
            Gets the raw data of the cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Value">
            <summary>
            Gets the effective value of this cell.
            If the cell contains a formula, this property
            should return the result of the formula evaluation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Annotation">
            <summary>
            Gets the Annotation object that represents a comment for this cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Hyperlink">
            <summary>
            Gets a Hyperlink object that represents the hyperlink associated with this cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Style">
            <summary>
            Gets an IStyle object that can be used to customize
            the appearance of the cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Validation">
            <summary>
            Gets an IValidation object that can be used to specify validation
            rules for the data in the cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.ConditionalFormats">
            <summary>
            Gets a list with format objects that can be used to customize
            the appearance of the cell based on various conditions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Column">
            <summary>
            Gets the zero-based index of the column of the represented cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Row">
            <summary>
            Gets the zero-based index of the row of the represented cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.IsMerged">
            <summary>
            Gets a value indicating whether this cell is part of a merged cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.IsHidden">
            <summary>
            Gets a value indicating whether this cell belongs to a hidden column or row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Cell.Locale">
            <summary>
            Gets or sets the locale used to format the value of this cell.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnCollection">
            <summary>
            Represents a specialized collection for worksheet columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the ColumnCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.RebuildVmap">
            <summary>
            Rebuilds the column visibility map if necessary.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.RebuildOmap">
            <summary>
            Rebuilds the column outline map if necessary.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetFirst">
            <summary>
            Gets the first visible column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetLast">
            <summary>
            Gets the last visible column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetNext(System.Int32)">
            <summary>
            Gets the next visible column, given a column index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetNext(System.Int32,System.Boolean)">
            <summary>
            Gets the next visible column, given a column index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetPrevious(System.Int32)">
            <summary>
            Gets the previous visible column, given a column index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetPrevious(System.Int32,System.Boolean)">
            <summary>
            Gets the previous visible column, given a column index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetSegmentLength">
            <summary>
            Gets the number of hidden columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetSegmentLength(System.Int32,System.Int32)">
            <summary>
            Gets the number of hidden columns in the range [from, to].
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.IsHidden(System.Int32)">
            <summary>
            Checks whether the specified column is hidden.
            This is generally faster than calling Column.IsHidden directly,
            particularly when called multiple times in a row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetFirstOutline">
            <summary>
            Gets the first column with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetFirstOutline(System.Int32@)">
            <summary>
            Gets the first column with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetLastOutline">
            <summary>
            Gets the last column with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetLastOutline(System.Int32@)">
            <summary>
            Gets the last column with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetNextOutline(System.Int32)">
            <summary>
            Gets the next column with outline different than the outline of
            the column with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetNextOutline(System.Int32,System.Int32@)">
            <summary>
            Gets the next column with outline different than the outline of
            the column with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetPreviousOutline(System.Int32)">
            <summary>
            Gets the previous column with outline different than the outline of
            the column with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetPreviousOutline(System.Int32,System.Int32@)">
            <summary>
            Gets the previous column with outline different than the outline of
            the column with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An IEnumerator&lt;Column&gt; that can be used to iterate
            through the collection.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable.GetEnumerator explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.Insert(System.Int32)">
            <summary>
            Inserts a new column at the specified index.
            </summary>
            <param name="index">
            The zero-based index where the column should be inserted.
            </param>
            <remarks>
            This method will raise an InvalidOperationException exception if the
            operation would cause filled cells to be shifted beyond the sheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts the specified number of columns at the specified index.
            </summary>
            <param name="index">
            The zero-based index where the columns should be inserted.
            </param>
            <param name="count">
            The number of columns to insert.
            </param>
            <remarks>
            This method will raise an InvalidOperationException exception if the
            operation would cause filled cells to be shifted beyond the sheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.Remove(System.Int32)">
            <summary>
            Removes the column at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the column to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes the specified number of columns at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the first column to remove.
            </param>
            <param name="count">
            The number of columns to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the specified column to the specified target index.
            </summary>
            <param name="index">
            The zero-based index of the column to move.
            </param>
            <param name="target">
            The zero-based index of the column before which the column should be moved.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.Move(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the specified number of columns to the specified target index.
            </summary>
            <param name="index">
            The zero-based index of the first column to move.
            </param>
            <param name="count">
            The number of columns to move.
            </param>
            <param name="target">
            The zero-based index of the column before which the columns should be moved.
            </param>
            <returns>
            true if a move occurred; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnCollection.AdjustColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adjusts the specified column as if the specified number of columns
            at the specified index are moved to the specified target index.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnCollection.Count">
            <summary>
            Gets the number of columns in the collection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnCollection.Item(System.Int32)">
            <summary>
            Gets the column at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the column to get.
            </param>
            <returns>
            A Column object identifying the column at the specified position.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets a ColumnRange object that can be used to manipulate the
            columns in the specified range.
            </summary>
            <param name="left">
            The zero-based index of the left column in the range.
            </param>
            <param name="right">
            The zero-based index of the right column in the range.
            </param>
            <returns>
            A ColumnRange object that can be used to manipulate the columns in the range.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnStorage">
            <summary>
            Represents a column in a Worksheet model.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnStorage.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ColumnStorage class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Column">
            <summary>
            Identifies a column in a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Column.#ctor(MindFusion.Spreadsheet.Worksheet,System.Int32)">
            <summary>
            Initializes a new instance of the Column class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.Index">
            <summary>
            Gets the zero-based index of the represented column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.Title">
            <summary>
            Gets or sets the column title.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.IsHidden">
            <summary>
            Gets or sets a value indicating whether the column is hidden.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.OutlineLevel">
            <summary>
            Gets or sets the outline level of the column, or 0, if the column is not grouped.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.IsCollapsed">
            <summary>
            Gets or sets a value indicating whether the group represented by this column is collapsed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.IsCollapsedInternal">
            <summary>
            Gets or sets the IsCollapsed property without raising the IsCollapsed property change notification.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.PageBreak">
            <summary>
            Gets or sets a value indicating whether to force a page break after this column during printing.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.Tag">
            <summary>
            Gets or sets a custom object associated with this column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.Style">
            <summary>
            Gets an IColumnStyle object that can be used to customize
            the appearance of all cells in the column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.Validation">
            <summary>
            Gets an IValidation object that can be used to specify validation
            rules for the data in the column.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Column.ConditionalFormats">
            <summary>
            Gets a list with format objects that can be used to customize
            the appearance of the cells in the column based on various conditions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellAnnotation">
            <summary>
            Represents the interactive object containing a comment for a cell within a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellAnnotation.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the CellAnnotation class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellAnnotation.GetActualWidth">
            <summary>
            InteractiveObject.GetActualWidth override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellAnnotation.GetActualHeight">
            <summary>
            InteractiveObject.GetActualHeight override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.IsMerged">
            <summary>
            Gets a value indicating whether this cell is inside a merged range and
            not the top-left cell of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.Anchor">
            <summary>
            InteractiveObject.Anchor override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.IsLockedToCell">
            <summary>
            InteractiveObject.IsLockedToCell override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.Text">
            <summary>
            Gets or sets the comment text of the annotation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.AutomaticDelay">
            <summary>
            Gets or sets the automatic delay for the annotation.
            </summary>
            <remarks>
            The AutomaticDelay property enables you to set a single delay value, 
            which is then used to set the values of the AutoPopDelay, InitialDelay 
            and ReshowDelay properties as follows: 
            AutoPopDelay - 10 times the AutomaticDelay property value.
            InitialDelay - Equal to the AutomaticDelay property value.
            ReshowDelay - 1/5 of the AutomaticDelay property value.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.AutoPopDelay">
            <summary>
            Gets or sets the period of time the annotation remains visible.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.InitialDelay">
            <summary>
            Gets or sets the time that passes before the annotation appears.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.ReshowDelay">
            <summary>
            Gets or sets the time that passes before the annotation appears.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.ShowAlways">
            <summary>
            Gets or sets a value indicating whether the annotation is always visible.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.Parent">
            <summary>
            Gets the parent Annotation object of this instance.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.BackColor">
            <summary>
            Gets or sets the background color of the object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.TextColor">
            <summary>
            Gets or sets the background color of the object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.FontName">
            <summary>
            Gets or sets the name of the font to use in the comment.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.FontSize">
            <summary>
            Gets or sets the size of the font to use in the comment.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.FontBold">
            <summary>
            Gets or sets a value indicating whether the comment text is bold.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.FontItalic">
            <summary>
            Gets or sets a value indicating whether the comment text is italic.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.FontUnderline">
            <summary>
            Gets or sets a value indicating whether the comment text is underlined.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.FontStrikeout">
            <summary>
            Gets or sets a value indicating whether the comment text is with a line through the middle.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the text used in the comment.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the text used in the comment.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.IndicatorColor">
            <summary>
            Gets or sets the color of the cell indicator.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.Margin">
            <summary>
            Gets or sets the text margins.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.UseAnimation">
            <summary>
            Gets or sets a value determining whether an animation effect should be used
            when displaying the annotation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.UseFading">
            <summary>
            Gets or sets a value determining whether a fade effect should be used when
            displaying the annotation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.ExtendsOutsideBounds">
            <summary>
            InteractiveObject.ExtendsOutsideBounds override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellAnnotation.RegardsMergedCells">
            <summary>
            InteractiveObject.RegardsMergedCells override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.AddItemCommand`1">
            <summary>
            Implements addition of items to a collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AddItemCommand`1.#ctor(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.UndoableCollection{`0},System.Int32,`0)">
            <summary>
            Initializes a new instance of the AddItemCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
            <param name="collection">
            The collection to which the new item is added.
            </param>
            <param name="index">
            The zero-based index where the new collection should be added.
            </param>
            <param name="item">
            The item that should be added to the collection.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.AddItemCommand`1.Execute">
            <summary>
            Command.Execute override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AddItemCommand`1.Undo">
            <summary>
            Command.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.AddItemCommand`1.Redo">
            <summary>
            Command.Redo override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor">
            <summary>
            Represents an expression tree visitor.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Analyzer">
            <summary>
            Collects cell references and checks for volatile elements.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ReferenceRefactorVisitor">
            <summary>
            Performs refactoring of all cell references in an expression.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ExpressionToStringConverter">
            <summary>
            Transforms an expression to its string representation.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.OkCancelControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OkCancelControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.OkCancelControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DrawingPainter">
            <summary>
            Draws worksheet drawings, such as pictures and shapes.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DrawingPainter.GetCellRect(MindFusion.Spreadsheet.WorksheetMeasurer,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle of the cell with the specified column and row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DrawingPainter.GetObjectRect(MindFusion.Spreadsheet.WorksheetMeasurer,MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Gets the rectangle of the specified object.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CalcImporter">
            <summary>
            CalcImporter lets you import OpenOffice Calc spreadsheets into a Workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CalcImporter.Import(System.String,MindFusion.Spreadsheet.Workbook)">
            <summary>
            Imports the specified OpenOffice Calc spreadsheet into the specified workbook.
            </summary>
            <param name="filePath">A string specifying the path to the .ods file.</param>
            <param name="workbook">A Workbook instance where to import the Calc data.</param>
        </member>
        <member name="T:MindFusion.Spreadsheet.BinaryContext">
            <summary>
            Contains methods that help serializing and deserializing
            complex objects to and from binary streams.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.#ctor(MindFusion.Spreadsheet.Workbook,System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the BinaryContext class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadHeader">
            <summary>
            Reads the binary file format header from the underlying
            stream and throws an exception if the header is not recognized.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteHeader">
            <summary>
            Writes the binary file format header to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.SaveWorksheets">
            <summary>
            Writes the workbook's worksheets to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.LoadWorksheets">
            <summary>
            Reads the workbook's worksheets from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadStyle(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads a Style object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadValidation(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IStyle)">
            <summary>
            Reads a Validation object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadConditionalFormats(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IStyle)">
            <summary>
            Reads ConditionalFormats from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadColumnStyles(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the column styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadRowStyles(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the row styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadStyles(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadScanLines(MindFusion.Spreadsheet.PlainRegion)">
            <summary>
            Reads the scan lines of the specified style region.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadMergedCells(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the merged cells of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadNamedRanges">
            <summary>
            Reads the name ranges from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadColumns(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the columns of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadRows(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the rows of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadCells(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the cells data of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadDrawing(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads the drawing of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadInteractiveObject(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Reads a InteractiveObject object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadPicture(MindFusion.Spreadsheet.Picture)">
            <summary>
            Reads a Picture object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadChart(MindFusion.Spreadsheet.Charts.Chart)">
            <summary>
            Reads a Chart object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadChartSeries(MindFusion.Spreadsheet.Charts.Chart)">
            <summary>
            Reads the chart series of the specified Chart object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadAxisSettings(MindFusion.Spreadsheet.Charts.AxisSettings)">
            <summary>
            Reads an AxisSettings object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadAnnotation(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads a CellAnnotation object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadString">
            <summary>
            Reads a string from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadEnum">
            <summary>
            Reads an enumeration value from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadBrush">
            <summary>
            Reads a MindFusion.Drawing.Brush from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadDouble">
            <summary>
            Reads a double from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadFloat">
            <summary>
            Reads a float from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadBool">
            <summary>
            Reads a bool from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadInt">
            <summary>
            Reads a integer from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadTag">
            <summary>
            Reads an object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadObject">
            <summary>
            Reads an object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadColor">
            <summary>
            Reads a Color object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadRectangle">
            <summary>
            Reads a Rectangle object from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadMeasure">
            <summary>
            Reads a Measure object  from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadFloatArray">
            <summary>
            Reads a float array from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadColorArray">
            <summary>
            Reads a color array from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.ReadImage">
            <summary>
            Reads an image from the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteStyle(MindFusion.Spreadsheet.IStyle)">
            <summary>
            Writes the specified style to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteValidation(MindFusion.Spreadsheet.IStyle)">
            <summary>
            Writes the validation of the specified style to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteConditionalFormats(MindFusion.Spreadsheet.IStyle)">
            <summary>
            Writes the specified conditional formats to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteColumnStyles(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the column styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteRowStyles(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the row styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteStyles(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteMergedCells(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the merged cells of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteNamedRanges">
            <summary>
            Writes the named ranges to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteColumns(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the columns of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteRows(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the rows of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteCells(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the cells data of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteDrawing(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Writes the drawing of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteInteractiveObject(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Writes an InteractiveObject instance to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WritePicture(MindFusion.Spreadsheet.Picture)">
            <summary>
            Writes an Picture instance to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteChart(MindFusion.Spreadsheet.Charts.Chart)">
            <summary>
            Writes an Chart instance to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteAnnotation(MindFusion.Spreadsheet.CellAnnotation)">
            <summary>
            Writes an CellAnnotation instance to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteChartSeries(MindFusion.Spreadsheet.Charts.Chart)">
            <summary>
            Writes the Chart series of the specified Chart to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteAxisSettings(MindFusion.Spreadsheet.Charts.AxisSettings)">
            <summary>
            Writes the specified AxisSettings instance to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteTag(System.Object)">
            <summary>
            Saves the specified object to the underlying stream.
            </summary>
            <param name="tag">
            The object to write.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteObject(System.Object)">
            <summary>
            Saves the specified object to the underlying stream.
            </summary>
            <param name="obj">
            The object to write.
            </param>
            <remarks>
            The objects is serialized if it is one of the .NET
            core types or if it is marked as Serializable.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteString(System.String)">
            <summary>
            Writes the specified string to the underlying stream.
            </summary>
            <param name="value">The string object to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteBrush(MindFusion.Drawing.Brush)">
            <summary>
            Writes the specified Brush to the underlying stream.
            </summary>
            <param name="value">The MindFusion.Drawing.Brush object to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteColor(System.Nullable{System.Drawing.Color})">
            <summary>
            Writes the specified Color object to the underlying stream.
            </summary>
            <param name="value">The Color object to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteRectangle(System.Nullable{System.Drawing.Rectangle})">
            <summary>
            Writes the specified Rectangle object to the underlying stream.
            </summary>
            <param name="value">The Rectangle object to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteMeasure(MindFusion.Spreadsheet.Measure)">
            <summary>
            Writes the specified Measure object to the underlying stream.
            </summary>
            <param name="value">The Measure object to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteEnum(System.Object)">
            <summary>
            Writes the specified enumeration value to the underlying stream.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteInt(System.Nullable{System.Int32})">
            <summary>
            Writes the specified integer to the underlying stream.
            </summary>
            <param name="value">The integer to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteDouble(System.Nullable{System.Double})">
            <summary>
            Writes the specified double to the underlying stream.
            </summary>
            <param name="value">The double to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteFloat(System.Nullable{System.Single})">
            <summary>
            Writes the specified float to the underlying stream.
            </summary>
            <param name="value">The float to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteBool(System.Nullable{System.Boolean})">
            <summary>
            Writes the specified bool to the underlying stream.
            </summary>
            <param name="value">The bool to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteFloatArray(System.Single[])">
            <summary>
            Writes the specified float array to the underlying stream.
            </summary>
            <param name="value">The array to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteColorArray(System.Drawing.Color[])">
            <summary>
            Writes the specified color array to the underlying stream.
            </summary>
            <param name="value">The array to write.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.BinaryContext.WriteImage(System.Drawing.Image)">
            <summary>
            Writes the specified image to the underlying stream.
            </summary>
            <param name="image">
            The image to write.
            </param>
        </member>
        <member name="F:MindFusion.Spreadsheet.BinaryContext.LatestFormat">
            <summary>
            Specifies the latest file format revision number.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.BinaryContext.sharedStrings">
            <summary>
            When saving this map is (string => int), when loading this map is (int => string).
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.BinaryContext.Writer">
            <summary>
            Gets the binary writer used for serialization.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.BinaryContext.Reader">
            <summary>
            Gets the binary reader used for deserialization.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.BinaryContext.Version">
            <summary>
            Gets the format revision number for the file being currently serialized.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.GfxSerializer">
            <summary>
            Enables binary serialization for MindFusion Pen and Brush objects.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TimeSpanUtilities">
            <summary>
            Provides methods for culture-aware parsing and formatting of TimeSpan objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TimeSpanUtilities.TryParse(System.String,System.TimeSpan@)">
            <summary>
            Converts the string representation of a time interval to its TimeSpan
            equivalent by using the current culture and returns a value that
            indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TimeSpanUtilities.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)">
            <summary>
            Converts the string representation of a time interval to its TimeSpan
            equivalent by using the specified culture-specific formatting information,
            and returns a value that indicates whether the conversion succeeded.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TimeSpanUtilities.Format(System.TimeSpan,System.String)">
            <summary>
            Converts the value of the current TimeSpan object to its equivalent
            string representation by using the specified format and the current
            culture.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TimeSpanUtilities.Format(System.TimeSpan,System.String,System.IFormatProvider)">
            <summary>
            Converts the value of the current System.TimeSpan object to its equivalent
            string representation by using the specified format and culture-specific
            formatting information.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ExpressionTreeBuilder">
            <summary>
            Builds an expression tree from a parse tree.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.ExpressionTreeBuilder.Tree">
            <summary>
            Gets the created expression tree.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode">
            <summary>
            Represents a node in an expression tree.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.#ctor">
            <summary>
            Initializes a new instance of the ExpressionTreeNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.Clone">
            <summary>
            Creates a deep copy of this node.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.Create">
            <summary>
            Creates a shallow copy of this node.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.AcceptChildren(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            Visits the children of the current node.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            Accepts the specified visitor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            Calculates the value of this node in the specified context.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.Children">
            <summary>
            Gets the child nodes of this node.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.ExpressionTreeNode.Enclosed">
            <summary>
            Gets (or sets) a value indicating whether the expression element
            represented by this node was originally enclosed in brackets in the
            expression. This property should be set only when the expression
            tree is constructed (in ExpressionTreeBuilder) and is only used to
            restore the original expression as text (in ExpressionToStringConverter).
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ReferenceNode">
            <summary>
            Represents a single or a range of cell references in an expression tree.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ReferenceNode.#ctor(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Initializes a new instance of the ReferenceNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ReferenceNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ReferenceNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ReferenceNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.ReferenceNode.CellRef">
            <summary>
            Gets (or sets) the CellRef represented by this node.
            This property should be set only when refactoring sheet
            names to avoid the need to reconstruct the affected subtrees.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.LiteralNode">
            <summary>
            Represents a literal - number, string, and so on.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.LiteralNode.#ctor(MindFusion.Spreadsheet.Expressions.Base)">
            <summary>
            Initializes a new instance of the LiteralNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.LiteralNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.LiteralNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.LiteralNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.LiteralNode.Value">
            <summary>
            Gets the literal represented by this node.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.IdentifierNode">
            <summary>
            Represents an identifier, such as the name of a named range and so on.
            Error literals (#ERROR!, #NAME?, and so on) are also represented by
            instances of this class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IdentifierNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IdentifierNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IdentifierNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IdentifierNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IdentifierNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.IdentifierNode.Identifier">
            <summary>
            Gets the identifier represented by this node.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.MatrixNode">
            <summary>
            Represents a matrix literal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MatrixNode.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the MatrixNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MatrixNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MatrixNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MatrixNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.MatrixNode.Columns">
            <summary>
            Gets the number of columns of the matrix represented by this node.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.MatrixNode.Rows">
            <summary>
            Gets the number of rows of the matrix represented by this node.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.BinaryOpNode">
            <summary>
            Represents a binary operation in an expression tree.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.BinaryOpNode.#ctor(MindFusion.Spreadsheet.Expressions.BinaryOp)">
            <summary>
            Initializes a new instance of the BinaryOpNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.BinaryOpNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.BinaryOpNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.BinaryOpNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.BinaryOpNode.Op">
            <summary>
            Gets the operation represented by this node.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.BinaryOp">
            <summary>
            Specifies a binary operation in an expression tree.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.UnaryOpNode">
            <summary>
            Represents an unary operation in an expression tree.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.UnaryOpNode.#ctor(MindFusion.Spreadsheet.Expressions.UnaryOp)">
            <summary>
            Initializes a new instance of the UnaryOpNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.UnaryOpNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.UnaryOpNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.UnaryOpNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.UnaryOpNode.Op">
            <summary>
            Gets the operation represented by this node.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.UnaryOpNode.IsPostfix">
            <summary>
            Gets a value indicating whether the operation is postfix.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.UnaryOp">
            <summary>
            Specifies an unary operation in an expression tree.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.MissingParamNode">
            <summary>
            Represents an omitted parameter of a function call or a missing matrix element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MissingParamNode.#ctor">
            <summary>
            Initializes a new instance of the MissingParamNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MissingParamNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MissingParamNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.MissingParamNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.FunctionCallNode">
            <summary>
            Represents a function invocation in an expression tree.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FunctionCallNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.Create">
            <summary>
            ExpressionTreeNode.Create override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.AcceptVisitor(MindFusion.Spreadsheet.Expressions.ExpressionTreeVisitor)">
            <summary>
            ExpressionTreeNode.AcceptVisitor override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.Evaluate(MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            ExpressionTreeNode.Evaluate override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.IsInvariant">
            <summary>
            Gets a value indicating whether this node represents an invariant
            function. Invariant functions have reference parameters, but do not
            evaluate them and as such, are not able to induce dependency cycles.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.IsVolatile">
            <summary>
            Gets a value indicating whether this node represents a volatile function.
            Volatile functions may return different values in subsequent calls with
            the same arguments.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.IsDynamic">
            <summary>
            Gets a value indicating whether this node represents a dynamic function.
            Dynamic functions are volatile functions that return Reference objects.
            In other words, expressions containing dynamic functions may change their
            dependencies when evaluated.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.FunctionCallNode.IsCustom">
            <summary>
            Gets a value indicating whether this node represents a custom function.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.FunctionCallNode.OriginalName">
            <summary>
            Gets the name of the function represented by this node in its original casing.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.FunctionCallNode.Name">
            <summary>
            Gets the name of the function in upper case.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.HeaderHitTestResult">
            <summary>
            Specifies the result of a header hit-testing operaion.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ExcelExporter">
            <summary>
            ExcelExporter lets you export Workbooks to Excel Open XML documents.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ExcelExporter.Export(MindFusion.Spreadsheet.Workbook,System.String)">
            <summary>
            Exports the specified workbook to the specified Excel Open XML document.
            </summary>
            <param name="workbook">A Workbook instance to export the data from.</param>
            <param name="filePath">A string specifying the path to the .xlsx file.</param>
        </member>
        <member name="P:MindFusion.Spreadsheet.ExcelExporter.View">
            <summary>
            Gets or sets an optional view. This view is used during export to write
            the currently active worksheet and the current cell selection. If the
            view is not specified, the active worksheet and cell selection are set to the default.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CustomFilterForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CustomFilterForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.CustomFilterForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TabControl">
            <summary>
            Displays an interactive list of tabs.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.#ctor">
            <summary>
            Initializes a new instance of the TabControl class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.Dispose(System.Boolean)">
            <summary>
            Control.Dispose override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Control.OnPaint override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnSizeChanged(System.EventArgs)">
            <summary>
            Control.OnSizeChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.ScrollToFill">
            <summary>
            Adjusts the current scroll index so that the entire tray is filled
            with tabs, if possible. Only done if the last tab is visible with
            the current scroll position.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseDown override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseMove override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseUp override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnAutoscrollTimer(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the autoscroll timer during reordering operations.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnButtonTimer(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the button timer during scrolling operations.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.FindTab(System.String)">
            <summary>
            Returns the first tab with the specified title, or null.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.FindTab(System.String,System.StringComparison)">
            <summary>
            Returns the first tab with the specified title, or null.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.GetCloseButtonBounds(System.Drawing.Rectangle)">
            <summary>
            Returns the bounding rectangle of the close button of a tab,
            relative to the tab's bounding rectangle.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the underlying tab collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the individual tabs contained in the control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnFontChanged(System.EventArgs)">
            <summary>
            Control.OnFontChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabAdding(MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Raises the TabAdding event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabAdded(MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Raises the TabAdded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabMoved(MindFusion.Spreadsheet.TabMovedEventArgs)">
            <summary>
            Raises the TabMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabRemoved(MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Raises the TabRemoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.ConfirmRemoveTab(MindFusion.Spreadsheet.Tab)">
            <summary>
            Confirms the removal of the specified tab by raising the TabRemoving event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabRemoving(MindFusion.Spreadsheet.TabValidationEventArgs)">
            <summary>
            Raises the TabRemoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabRenamed(MindFusion.Spreadsheet.TabEventArgs)">
            <summary>
            Raises the TabRenamed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.ConfirmRenameTab(MindFusion.Spreadsheet.Tab,System.String)">
            <summary>
            Confirms the renaming of the specified tab by raising the TabRenaming event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabClicked(MindFusion.Spreadsheet.TabMouseEventArgs)">
            <summary>
            Raises the TabClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.OnTabRenaming(MindFusion.Spreadsheet.TabNameValidationEventArgs)">
            <summary>
            Raises the TabRenaming event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="F:MindFusion.Spreadsheet.TabControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.Tabs">
            <summary>
            Gets a list of the tabs contained in the control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected tab.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.SelectedTab">
            <summary>
            Gets the currently selected tab, or null.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.ShowCloseButtons">
            <summary>
            Gets or sets a value indicating whether to display a close button for each tab.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.ShowNavigationButtons">
            <summary>
            Gets or sets a value indicating whether to display the tab navigation buttons.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.ShowCreateNewTab">
            <summary>
            Gets or sets a value indicating whether to display the 'Create New Tab' button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.AllowReorder">
            <summary>
            Gets or sets a value indicating whether tabs can be rearranged interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.AllowEdit">
            <summary>
            Gets or sets a value indicating whether tabs can be in-place edited.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.TabAlignment">
            <summary>
            Gets or sets the tabs alignment.
            </summary>
            <remarks>
            This property specifies the alignment of the control itself. For example,
            Top signifies that the control is aligned at the top of its container, so
            the tabs will actually be aligned to the bottom of the TabControl.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabControl.IsHorizontal">
            <summary>
            Gets a value indicating whether tabs are arranged horizontally, that is,
            whether TabAlignment is Top or Bottom.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.SelectedIndexChanged">
            <summary>
            Raised when the currently selected tab is changed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabAdding">
            <summary>
            Raised when a new tab is about to be added to the view interactively,
            that is, when the user clicks on the 'Create New Tab' button.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabAdded">
            <summary>
            Raised when a new tab is added to the view interactively, that is,
            when the user clicks on the 'Create New Tab' button.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabMoved">
            <summary>
            Raised when a tab has been moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabRemoving">
            <summary>
            Raised when a tab is about to be removed interactively, that is,
            when the user clicks the close button of its associated tab.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabRemoved">
            <summary>
            Raised when a tab is removed interactively, that is,
            when the user clicks the close button of its associated tab.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabRenaming">
            <summary>
            Raised when a tab is about to be renamed interactively, that is,
            when the user in-place edits the tab.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabRenamed">
            <summary>
            Raised when a tab is renamed interactively, that is,
            when the user in-place edits the tab.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.TabControl.TabClicked">
            <summary>
            Raised when the mouse is pressed over a tab. The event is raised on MouseDown.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Tab">
            <summary>
            Represents a tab in a TabControl.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Tab.#ctor">
            <summary>
            Initializes a new instance of the Tab class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Tab.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Tab.Title">
            <summary>
            Gets or sets the text displayed in the tab.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Tab.TitleColor">
            <summary>
            Gets or sets the color of the tab title.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Tab.Icon">
            <summary>
            Gets or sets the image displayed in the tab.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Tab.Tag">
            <summary>
            Gets or sets an arbitrary object associated with the tab.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Tab.DesiredSize">
            <summary>
            Gets or sets the desired size of this tab, that is the size when
            the tab will be able to display its contents without cutting or
            clipping.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Tab.Bounds">
            <summary>
            Gets or sets the bounding rectangle of this tab in the current layout
            relative to the tab control.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.Tab.PropertyChanged">
            <summary>
            INotifyPropertyChanged.PropertyChanged implementation.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TabEventArgs">
            <summary>
            Contains the arguments passed to Tab-related event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabEventArgs.#ctor(MindFusion.Spreadsheet.Tab)">
            <summary>
            Initializes a new instance of the TabEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabEventArgs.Tab">
            <summary>
            Gets the tab related to the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TabMovedEventArgs">
            <summary>
            Contains the arguments passed to the TabMoved event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabMovedEventArgs.#ctor(MindFusion.Spreadsheet.Tab,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TabMovedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabMovedEventArgs.FromIndex">
            <summary>
            Gets the original index of the tab.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabMovedEventArgs.ToIndex">
            <summary>
            Gets the new index of the tab.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TabMouseEventArgs">
            <summary>
            Contains the arguments passed to the TabClicked event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabMouseEventArgs.#ctor(MindFusion.Spreadsheet.Tab,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TabMouseEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabMouseEventArgs.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabMouseEventArgs.X">
            <summary>
            Gets the x-coordinates of the mouse, relative to the tab control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabMouseEventArgs.Y">
            <summary>
            Gets the y-coordinates of the mouse, relative to the tab control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabMouseEventArgs.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TabValidationEventArgs">
            <summary>
            Contains the arguments passed to handlers of Tab validation events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabValidationEventArgs.#ctor(MindFusion.Spreadsheet.Tab)">
            <summary>
            Initializes a new instance of the TabValidationEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabValidationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the current operation.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TabNameValidationEventArgs">
            <summary>
            Contains the arguments passed to handlers of the TabRenaming event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TabNameValidationEventArgs.#ctor(MindFusion.Spreadsheet.Tab,System.String)">
            <summary>
            Initializes a new instance of the TabNameValidationEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TabNameValidationEventArgs.NewName">
            <summary>
            Gets the new name of the tab.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TabAlignment">
            <summary>
            Specifies the alignment of the tabs in a WorkbookView.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.TabAlignment.Top">
            <summary>
            Indicates that the tabs are displayed at the top side.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.TabAlignment.Left">
            <summary>
            Indicates that the tabs are displayed at the left side.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.TabAlignment.Bottom">
            <summary>
            Indicates that the tabs are displayed at the bottom side.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.TabAlignment.Right">
            <summary>
            Indicates that the tabs are displayed at the right side.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.PropertyEventArgs">
            <summary>
            Provides data for the PropertyValueChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.PropertyEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the PropertyEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.PropertyEventArgs.PropertyName">
            <summary>
            Gets the name of the property that changed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.PropertyEventArgs.OldValue">
            <summary>
            Gets the value of the property before the change.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.PropertyEventArgs.NewValue">
            <summary>
            Gets the current value of the property.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.AxisSettings">
            <summary>
            Contains the settings for the axes of a Chart object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.AxisSettings.#ctor(MindFusion.Spreadsheet.Charts.Chart)">
            <summary>
            Initializes a new instance of the AxisSettings class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.Visible">
            <summary>
            Gets or sets a value indicating whether the axis is visible.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.Title">
            <summary>
            Gets or sets the axis title.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.TitleFontName">
            <summary>
            Gets or sets the font name of the axis title, or null,
            to use the FontName property of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.TitleFontSize">
            <summary>
            Gets or sets the font size of the axis title, or null,
            to use the FontSize property of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.TitleFontBold">
            <summary>
            Gets or sets a value indicating whether the axis title is bold, or null,
            to use the FontBold property of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.TitleFontItalic">
            <summary>
            Gets or sets a value indicating whether the axis title is italic, or null,
            to use the FontItalic property of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.TitleFontUnderline">
            <summary>
            Gets or sets a value indicating whether the axis title is underlined, or null,
            to use the FontUnderline property of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.TitleFontStrikeout">
            <summary>
            Gets or sets a value indicating whether the axis title is with a line through the middle,
            or null, to use the FontStrikeout property of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.TitleTextColor">
            <summary>
            Gets or sets the color of the axis title, or null,
            to use the TextColor property of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.ShowMajorGridLines">
            <summary>
            Gets or sets a value indicating whether to display
            the major gird lines for this axis.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.ShowMajorTicks">
            <summary>
            Gets or sets a value indicating whether to display
            the major ticks along the axis.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.ShowMinorTicks">
            <summary>
            Gets or sets a value indicating whether to display
            the minor ticks along the axis.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.Minimum">
            <summary>
            Gets or sets the minimum value of the axis, or null, to
            automatically calculate the minimum value based on the chart data.
            </summary>
            <remarks>
            This property is only relevant for value axes.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.Maximum">
            <summary>
            Gets or sets the maximum value of the axis, or null, to
            automatically calculate the maximum value based on the chart data.
            </summary>
            <remarks>
            This property is only relevant for value axes.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.MajorUnit">
            <summary>
            Gets or sets the major unit of the axis, or null, to
            automatically calculate the major unit based on the chart data.
            </summary>
            <remarks>
            This property is only relevant for value axes.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.AxisSettings.MinorUnit">
            <summary>
            Gets or sets the minor unit of the axis, or null, to
            automatically calculate the minor unit based on the chart data.
            </summary>
            <remarks>
            This property is only relevant for value axes.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetMeasurer">
            <summary>
            Represents an object that can be used to calculate bounds and sizes of worksheet components.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.#ctor(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IResolution,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the WorksheetMeasurer class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetColumnWidth(System.Int32)">
            <summary>
            Gets the width, in pixels, of the specified column.
            The result is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetColumnWidthF(System.Int32)">
            <summary>
            Gets the width, in pixels, of the specified column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetRowHeight(System.Int32)">
            <summary>
            Gets the height, in pixels, of the specified row.
            The result is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetRowHeightF(System.Int32)">
            <summary>
            Gets the height, in pixels, of the specified row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetColumnWidthUnit(System.Int32)">
            <summary>
            Gets the width unit of the specified column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetRowHeightUnit(System.Int32)">
            <summary>
            Gets the height unit of the specified row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRect(MindFusion.Spreadsheet.Cell)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell.
            Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRect(System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell.
            Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRectRelativeTo(MindFusion.Spreadsheet.Cell,System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell, relative
            to another specified cell. Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRectRelativeTo(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell, relative
            to another specified cell. Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRectF(MindFusion.Spreadsheet.Cell)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRectF(System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRectRelativeToF(MindFusion.Spreadsheet.Cell,System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell, relative
            to another specified cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetCellRectRelativeToF(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell, relative
            to another specified cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetRangeRect(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell range.
            Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetRangeRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell range.
            Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetRangeRectRelativeTo(MindFusion.Spreadsheet.CellRange,System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified range, relative
            to the specified cell. Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetRangeRectRelativeTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle, in pixels, of the specified cell, relative
            to another specified cell. Each component is rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetPixels(MindFusion.Spreadsheet.Measure)">
            <summary>
            Converts the specified measure to pixels, rounded to the nearest integer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.GetPixelsF(MindFusion.Spreadsheet.Measure)">
            <summary>
            Converts the specified measure in pixels.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMeasurer.Round(System.Drawing.RectangleF)">
            <summary>
            Rounds the components of the specified rectangle to the nearest integers.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetCollection">
            <summary>
            Represents a specialized collection of Worksheet objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the WorksheetCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Add">
            <summary>
            Creates a new Worksheet object and adds it to the end of the collection.
            </summary>
            <returns>
            The newly created Worksheet object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Add(System.String)">
            <summary>
            Creates a new Worksheet object with the specified name and adds it
            to the end of the collection. If a worksheet with the specified name
            already exists, an exception is thrown.
            </summary>
            <param name="name">
            The name of the new worksheet object.
            </param>
            <returns>
            The newly created Worksheet object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Insert(System.Int32)">
            <summary>
            Creates a new Worksheet object and adds it at the specified index
            within the collection.
            </summary>
            <param name="index">
            The zero-based index where the new worksheet should be added.
            </param>
            <returns>
            The newly created Worksheet object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Insert(System.Int32,System.String)">
            <summary>
            Creates a new Worksheet object with the specified name and adds it
            at the specified index within the collection. If a worksheet with
            the specified name already exists, an exception is thrown.
            </summary>
            <param name="index">
            The zero-based index where the new worksheet should be added.
            </param>
            <param name="name">
            The name of the new worksheet.
            </param>
            <returns>
            The newly created Worksheet object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the Worksheet object at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the worksheet to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Remove(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Removes the specified Worksheet object from the collection.
            If the worksheet is not part of the collection, the method
            has no effect.
            </summary>
            <param name="worksheet">
            The worksheet to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Remove(System.String)">
            <summary>
            Removes the Worksheet object with the specified name from the collection.
            If there is no worksheet with the specified name, the method has no effect.
            </summary>
            <param name="name">
            The name of the worksheet to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Move(MindFusion.Spreadsheet.Worksheet,System.Int32)">
            <summary>
            Moves the specified Worksheet object from its current position to
            the specified index. If the worksheet is not part of the collection,
            the method has no effect.
            </summary>
            <param name="worksheet">
            The worksheet to move.
            </param>
            <param name="index">
            The zero-based index of the position to move to.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.Clear">
            <summary>
            Clears all elements from the collection. If the collection
            is empty, the method has no effect.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetCollection.GenerateName">
            <summary>
            Generates a unique worksheet name.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.TrackChangesCommand">
            <summary>
            Represents a command that can track and undo changes of
            INotifyPropertyValueChanged objects.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DisposableCommand">
            <summary>
            Represents a command that implements the IDisposable interface.
            </summary>
            <remarks>
            A DisposableCommand is automatically committed when disposed unless
            it has been already executed or cancelled.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.DisposableCommand.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the DisposableCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.DisposableCommand.Dispose">
            <summary>
            IDisposable.Dispose implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DisposableCommand.Clean">
            <summary>
            Disposes of this command.
            </summary>
            <remarks>
            This method is guaranteed to be invoked when the command is either
            disposed of or executed directly without subsequently disposed of.
            This method is guaranteed to be invoked only once, that is, if a
            command is executed and then disposed of, this method is invoked
            only once.
            This method is not automatically invoked when the command is cancelled
            (undone) to prevent cleaning when Undo is invoked by the undo manager.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.DisposableCommand.Execute">
            <summary>
            Command.Execute override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DisposableCommand.Cancel">
            <summary>
            Cancels the command.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DisposableCommand.Undo">
            <summary>
            Command.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DisposableCommand.Redo">
            <summary>
            Command.Redo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TrackChangesCommand.Undo">
            <summary>
            DisposableCommand.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TrackChangesCommand.Redo">
            <summary>
            DisposableCommand.Redo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TrackChangesCommand.BeginChange">
            <summary>
            Called before undoing or redoing the command.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.TrackChangesCommand.EndChange">
            <summary>
            Called after undoing or redoing the command.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.TrackChangesCommand.HasEffect">
            <summary>
            Command.HasEffect override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.NamedRange">
            <summary>
            Represents a named range of cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRange.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRange.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the NamedRange class.
            </summary>
            <param name="name">
            The initial name of the range.
            </param>
            <param name="cellRange">
            The initial cell range.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRange.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NamedRange class.
            </summary>
            <param name="name">
            The initial name of the range.
            </param>
            <param name="sheetName">
            The name of the sheet of the initial cell range.
            </param>
            <param name="topLeftColumn">
            The column of the top-left cell of the initial range.
            </param>
            <param name="topLeftRow">
            The row of the top-left cell of the initial range.
            </param>
            <param name="bottomRightColumn">
            The column of the bottom-right cell of the initial range.
            </param>
            <param name="bottomRightRow">
            The row of the bottom-right cell of the initial range.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRange.OnPropertyValueChanged(MindFusion.Spreadsheet.PropertyEventArgs)">
            <summary>
            Raises the PropertyValueChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NamedRange.IsValidName(System.String)">
            <summary>
            Checks if the specified value is a valid NamedRange name.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.NamedRange.Name">
            <summary>
            Gets or sets the name of the named range.
            </summary>
            <remarks>
            The name of a named range must be unique (ignoring case) amongst
            all named ranges in a Workbook. It must not be a valid cell or cell
            range reference (for example, A1). It needs to be a proper identifier,
            that is, it must start with a letter and contain only letters, numbers
            and underscore characters. Lastly, the name must not coincide with the
            built-in identifiers 'true' and 'false'. If any of these requirements
            are violated, an exception will be thrown.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.NamedRange.CellRange">
            <summary>
            Gets or sets the cell or range of cells associated with this named range.
            </summary>
            <remarks>
            Specifying an invalid or incomplete cell range will throw an exception.
            A cell range without sheet name is considered incomplete.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.NamedRange.WorksheetName">
            <summary>
            Gets the name of the worksheet represented by this named range.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.NamedRange.PropertyValueChanged">
            <summary>
            Raised when a property of this object is changed.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Parser">
            <summary>
            Provides parsing capabilities for token lists previously generated
            by processing character sequences through a Lexer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.#ctor(MindFusion.Spreadsheet.Expressions.Lexer)">
            <summary>
            Initializes a new instance of the Parser class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Parse">
            <summary>
            Returns a ParseTreeNode corresponding to the parsed tree starting
            at the 'expression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.expression">
            <summary>
            Parses an 'expression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.equalityExpression">
            <summary>
            Parses an 'equalityExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.relationalExpression">
            <summary>
            Parses a 'relationalExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.concatExpression">
            <summary>
            Parses a 'concatExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.additiveExpression">
            <summary>
            Parses an 'additiveExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.multiplicativeExpression">
            <summary>
            Parses a 'multiplicativeExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.exponentExpression">
            <summary>
            Parses a 'exponentExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.percentExpression">
            <summary>
            Parses a 'percentExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.unaryExpression">
            <summary>
            Parses an 'unaryExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.sheetRefExpression">
            <summary>
            Parses a 'sheetRefExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.cellRangeExpression">
            <summary>
            Parses a 'cellRangeExpression' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.paramList">
            <summary>
            Parses a 'paramList' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.matrix">
            <summary>
            Parses a 'matrix' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.rowList">
            <summary>
            Parses a rowList nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.expressionList(MindFusion.Spreadsheet.Expressions.TokenType[],MindFusion.Spreadsheet.Expressions.TokenType[],System.Boolean)">
            <summary>
            Parses an 'expressionList' nonterminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.ParseCurrent(MindFusion.Spreadsheet.Expressions.TokenType)">
            <summary>
            Parses a terminal of the specified type at the current
            parsing position within the token list.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Comma">
            <summary>
            Parses a 'Comma' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Semicolon">
            <summary>
            Parses a 'Semicolon' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Ob">
            <summary>
            Parses an 'Ob' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Cb">
            <summary>
            Parses a 'Cb' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Ocb">
            <summary>
            Parses an 'Ocb' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Ccb">
            <summary>
            Parses a 'Ccb' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Vline">
            <summary>
            Parses a 'Vline' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpPlus">
            <summary>
            Parses an 'OpPlus' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpMinus">
            <summary>
            Parses an 'OpMinus' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpMultiply">
            <summary>
            Parses an 'OpMultiply' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpDivide">
            <summary>
            Parses an 'OpDivide' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpPercent">
            <summary>
            Parses an 'OpPercent' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpConcat">
            <summary>
            Parses an 'OpConcat' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpExponent">
            <summary>
            Parses an 'OpExponent' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpLess">
            <summary>
            Parses an 'OpLess' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpLessOrEqual">
            <summary>
            Parses an 'OpLessOrEqual' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpGreater">
            <summary>
            Parses an 'OpGreater' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpGreaterOrEqual">
            <summary>
            Parses an 'OpGreaterOrEqual' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpEqual">
            <summary>
            Parses an 'OpEqual' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpNotEqual">
            <summary>
            Parses an 'OpNotEqual' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpCellRange">
            <summary>
            Parses an 'OpCellRange' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.OpSheetRef">
            <summary>
            Parses an 'OpSheetRef' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.CellIndex">
            <summary>
            Parses an 'CellIndex' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.SheetRef">
            <summary>
            Parses an 'SheetRef' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Identifier">
            <summary>
            Parses an 'Identifier' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Error">
            <summary>
            Parses an 'Error' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.Function">
            <summary>
            Parses an 'Function' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.IntNumber">
            <summary>
            Parses an 'IntNumber' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.String">
            <summary>
            Parses a 'String' terminal.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Parser.FloatNumber">
            <summary>
            Parses a 'FloatNumber' terminal.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Parser.tokens">
            <summary>
            The list of tokens to parse.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Parser.current">
            <summary>
            The current parsing position.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Parser.Done">
            <summary>
            Gets a value indicating whether the parser consumed all tokens
            in the source list.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Parser.CurrentToken">
            <summary>
            Gets the current token, or null, if done.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Parser.CurrentTokenType">
            <summary>
            Gets the type of the current token, or -1, if done.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectAnchor">
            <summary>
            Specifies the anchor of a worksheet object.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ObjectAnchor.ToPage">
            <summary>
            Indicates that a worksheet object is anchored to its page.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ObjectAnchor.ToCell">
            <summary>
            Indicates that a worksheet object is anchored to a specific cell.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Interop.XFORM">
            <summary>
            The XFORM structure specifies a world-space to page-space transformation.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ImageExporter">
            <summary>
            Exports worksheets as images.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ImageExporter.#ctor">
            <summary>
            Initializes a new instance of the ImageExporter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ImageExporter.Export(MindFusion.Spreadsheet.Worksheet,System.String)">
            <summary>
            Exports the specified worksheet as an image.
            </summary>
            <param name="worksheet">
            The worksheet to export.
            </param>
            <param name="filePath">
            The name of the file where the image should be stored.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ImageExporter.ExportObject(MindFusion.Spreadsheet.InteractiveObject,System.String)">
            <summary>
            Exports the specified object as an image.
            </summary>
            <param name="obj">
            The object to export.
            </param>
            <param name="filePath">
            The name of the file where the image should be stored.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ImageExporter.ExportObject(MindFusion.Spreadsheet.InteractiveObject,System.String,System.Nullable{System.Drawing.Size})">
            <summary>
            Exports the specified object as an image.
            </summary>
            <param name="obj">
            The object to export.
            </param>
            <param name="filePath">
            The name of the file where the image should be stored.
            </param>
            <param name="size">
            The desired size of the created image. The object is stretched to the
            specified size.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ImageExporter.GetExportedRange">
            <summary>
            Gets the range of cells that was actually exported by the most recent call to Export.
            </summary>
            <returns>
            A Rectangle representing the exported cells or an empty rectangle if Export has
            never been called.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.ImageExporter.ImageFormat">
            <summary>
            Gets or sets the format of the created image.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ImageExporter.CellRange">
            <summary>
            Gets or sets the range of cells to export, or null, to export the entire sheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ImageExporter.MaxImageSize">
            <summary>
            Gets or sets the maximum size of the created image. If the size is too big
            an exception could be thrown.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ImageExporter.EnableGridLines">
            <summary>
            Gets or sets a value indicating whether to export the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ImageExporter.EnableObjects">
            <summary>
            Gets or sets a value indicating whether to export drawing objects.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ImageExporter.EnableZoom">
            <summary>
            Gets or sets a value indicating whether to take into consideration
            the worksheet's zoom factor.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.Chart">
            <summary>
            Represents a chart in a drawing within a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the Chart class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.Dispose(System.Boolean)">
            <summary>
            InteractiveObject.Dispose override.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.OnResized">
            <summary>
            InteractiveObject.OnResized override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            InteractiveObject.OnPropertyChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.OnWorksheetPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            InteractiveObject.OnWorksheetPropertyChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.OnAttach">
            <summary>
            InteractiveObject.OnAttach override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.OnDetach">
            <summary>
            InteractiveObject.OnDetach override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.OnCellsUpdated(System.Object,MindFusion.Spreadsheet.CellsUpdatedEventArgs)">
            <summary>
            Handles the CellsUpdated event of the containing workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.Contains(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Checks whether the chart depends on a cell in the specified range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.Draw(MindFusion.Spreadsheet.IRenderTarget,MindFusion.Spreadsheet.RenderContext,System.Drawing.Rectangle)">
            <summary>
            InteractiveObject.Draw override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.RefactorReferences(System.Func{MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.CellRef})">
            <summary>
            InteractiveObject.RefactorReferences override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.RestoreReferences(System.Object)">
            <summary>
            InteractiveObject.RestoreReferences override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.CreateChart(MindFusion.Spreadsheet.RenderContext)">
            <summary>
            Creates a component hierarchy representing the chart according to
            the underlying settings and data.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.GetActualWidth">
            <summary>
            InteractiveObject.GetActualWidth override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.GetActualHeight">
            <summary>
            InteractiveObject.GetActualHeight override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Charts.Chart.SetDataSource(System.String,MindFusion.Spreadsheet.Charts.PlotBy,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Sets the chart data source to the specified range of cells.
            </summary>
            <param name="data">
            A string specifying a range of cells or an expression which evaluates to a range of cells.
            </param>
            <param name="plotBy">
            A flag specifying whether the series are created from the columns or
            from the rows in the specified range.
            </param>
            <param name="firstColumnAsLabel">
            A flag specifying whether to use the values in the first column of the specified range
            as labels, or null, to attempt to automatically determine this based on the type of the data.
            This parameter is ignored by some charts that do not display labels.
            </param>
            <param name="firstRowAsLabel">
            A flag specifying whether to use the values in the first row of the specified range
            as labels, or null, to attempt to automatically determine this based on the type of the data.
            This parameter is ignored by some charts that do not display labels.
            </param>
            <returns>
            true if the data source was successfully set; false if the specified string
            does not identify a range of cells.
            </returns>
            <remarks>
            The changes caused by this method are automatically recorded for subsequent undo,
            therefore it is not necessary to call this method in the scope of a TrackChangesCommand.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.Type">
            <summary>
            Gets or sets the type of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.Series">
            <summary>
            Gets a collection with the data series of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.DefaultSeriesNameFormat">
            <summary>
            Gets or sets the format of the names of the data series
            that do not have an explicitly defined name.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.DefaultColors">
            <summary>
            Gets or sets the default colors for data series that do not have
            explicitly defined colors.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.XAxisSettings">
            <summary>
            Gets the settings for the category label axis of the chart, if the chart is an axes chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.YAxisSettings">
            <summary>
            Gets the settings for the value axis of the chart, if the chart is an axes chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.FontName">
            <summary>
            Gets or sets the font of the texts in the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.FontSize">
            <summary>
            Gets or sets the font size of the texts of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.FontBold">
            <summary>
            Gets or sets a value indicating whether the text in the chart is bold.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.FontItalic">
            <summary>
            Gets or sets a value indicating whether the text in the chart is italic.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.FontUnderline">
            <summary>
            Gets or sets a value indicating whether the text in the chart is underlined.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.FontStrikeout">
            <summary>
            Gets or sets a value indicating whether the text in the chart is with a line through the middle.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.Fill">
            <summary>
            Gets or sets a brush used to fill the background of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TextColor">
            <summary>
            Gets or sets the color of the texts in the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TitleFontName">
            <summary>
            Gets or sets the font of the chart title, or null,
            to use the FontName property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TitleFontSize">
            <summary>
            Gets or sets the font size of the chart title, or null,
            to use the FontSize property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TitleFontBold">
            <summary>
            Gets or sets a value indicating whether the chart title is bold,
            or null, to use the FontBold property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TitleFontItalic">
            <summary>
            Gets or sets a value indicating whether the chart title is italic,
            or null, to use the FontItalic property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TitleFontUnderline">
            <summary>
            Gets or sets a value indicating whether the chart title is underlined,
            or null, to use the FontUnderline property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TitleFontStrikeout">
            <summary>
            Gets or sets a value indicating whether the chart title is with a line through the middle,
            or null, to use the FontStrikeout property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.TitleTextColor">
            <summary>
            Gets or sets the color of the chart title, or null,
            to use the TextColor property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.PlotFill">
            <summary>
            Gets or sets a brush used to fill the background of the chart's plot area.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.PlotBorderColor">
            <summary>
            Gets or sets the border color of the chart's plot area, or null,
            to hide the border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.PlotBorderSize">
            <summary>
            Gets or sets the border thickness of the chart's plot area, or null,
            to use a hairline thickness.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.PlotBorderStyle">
            <summary>
            Gets or sets the border style of the chart's plot area, or null,
            to use a solid line.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.ShowLegend">
            <summary>
            Gets or sets a value indicating whether to display the chart's legend.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendPosition">
            <summary>
            Gets or sets the legend position.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendFontName">
            <summary>
            Gets or sets the font name of the legend, or null,
            to use the FontName property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendFontSize">
            <summary>
            Gets or sets the font size of the legend, or null,
            to use the FontSize property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendFontBold">
            <summary>
            Gets or sets a value indicating whether the legend text is bold,
            or null, to use the FontBold property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendFontItalic">
            <summary>
            Gets or sets a value indicating whether the legend text is italic,
            or null, to use the FontItalic property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendFontUnderline">
            <summary>
            Gets or sets a value indicating whether the legend text is underlined,
            or null, to use the FontUnderline property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendFontStrikeout">
            <summary>
            Gets or sets a value indicating whether the legend text is with a line through the middle,
            or null, to use the FontStrikeout property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendTextColor">
            <summary>
            Gets or sets the color of the texts in the legend, or null,
            to use the TextColor property.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendFill">
            <summary>
            Gets or sets a brush used to fill the legend's background.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendBorderColor">
            <summary>
            Gets or sets the border color of the legend, or null,
            to hide the border.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendBorderSize">
            <summary>
            Gets or sets the border thickness of the legend, or null,
            to use a hairline thickness.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendBorderStyle">
            <summary>
            Gets or sets the border style of the legend, or null,
            to use a solid line.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.LegendLanes">
            <summary>
            Gets or sets the number of columns or rows to use when layouting items
            inside the legend, or null, to use the default number of columns or rows,
            which is 1.
            </summary>
            <remarks>
            This property applies to the number of columns in a left/right-aligned
            legends and on the number of rows in top/bottom-aligned legends.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.GridLineColor">
            <summary>
            Gets or sets the color of the major grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.GridLineSize">
            <summary>
            Gets or sets the thickness of the major grid lines, or null,
            to use a hairline thickness.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.GridLineStyle">
            <summary>
            Gets or sets the style of the major grid lines, or null,
            to draw solid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.AxisColor">
            <summary>
            Gets or sets the color of the chart axes.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.AxisSize">
            <summary>
            Gets or sets the thickness of the chart axes, or null,
            to use a hairline thickness.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.AxisStyle">
            <summary>
            Gets or sets the style of the chart axes, or null,
            to draw solid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.DefaultLineSize">
            <summary>
            Gets or sets the default thickness in line and radar charts
            for series that have no explicitly specified line size.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Charts.Chart.MarkShape">
            <summary>
            Gets or sets the shape of marks in the chart, or null, to use
            alternating shapes.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetView">
            <summary>
            Represents a control that can display individual Worksheet objects.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.WorksheetView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.#ctor">
            <summary>
            Initializes a new instance of the WorksheetView class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnResize(System.EventArgs)">
            <summary>
            UserControl.OnResize override.
            </summary>
            <param name="e">
            An object that contains the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnHScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles the Scroll event of the horizontal scrollbar.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnVScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles the Scroll event of the vertical scrollbar.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnActiveCellChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ActiveCellChanged event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnSelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectionChanged event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnCellClicked(System.Object,MindFusion.Spreadsheet.GenericMouseEventArgs{MindFusion.Spreadsheet.Cell})">
            <summary>
            Handles the CellClicked event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectClicked(System.Object,MindFusion.Spreadsheet.GenericMouseEventArgs{MindFusion.Spreadsheet.InteractiveObject})">
            <summary>
            Handles the ObjectClicked event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnClicked(System.Object,MindFusion.Spreadsheet.IndexMouseEventArgs)">
            <summary>
            Handles the ColumnClicked event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowClicked(System.Object,MindFusion.Spreadsheet.IndexMouseEventArgs)">
            <summary>
            Handles the RowClicked event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnScrollXChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ScrollXChanged event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnScrollYChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ScrollYChanged event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditStarting(System.Object,MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Handles the InplaceEditStarting event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditStarted(System.Object,MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Handles the InplaceEditStarted event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditEnding(System.Object,MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Handles the InplaceEditEnding event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditEnded(System.Object,MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Handles the InplaceEditEnded event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRequestWorksheet(System.Object,MindFusion.Spreadsheet.RequestWorksheetEventArgs)">
            <summary>
            Handles the RequestWorksheet event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectStartModifying(System.Object,MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Handles the ObjectStartModifying event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectModifying(System.Object,MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Handles the ObjectModifying event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectModified(System.Object,MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Handles the ObjectModified event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectModifyCancelled(System.Object,MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Handles the ObjectModifyCancelled event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectSelecting(System.Object,MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Handles the ObjectSelecting event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectSelected(System.Object,MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Handles the ObjectSelected event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectDeselected(System.Object,MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Handles the ObjectDeselected event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectDeleting(System.Object,MindFusion.Spreadsheet.ObjectValidationEventArgs)">
            <summary>
            Handles the ObjectDeleting event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectDeleted(System.Object,MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Handles the ObjectDeleted event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnHyperlinkClicked(System.Object,MindFusion.Spreadsheet.CellEventArgs)">
            <summary>
            Handles the HyperlinkClicked event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnOutlineLevelToggled(System.Object,MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Handles the ColumnOutlineLevelToggled event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowOutlineLevelToggled(System.Object,MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Handles the RowOutlineLevelToggled event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnGroupCollapsed(System.Object,MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Handles the ColumnGroupCollapsed event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnGroupExpanded(System.Object,MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Handles the ColumnGroupCollapsed event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowGroupCollapsed(System.Object,MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Handles the RowGroupCollapsed event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowGroupExpanded(System.Object,MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Handles the RowGroupExpanded event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnDrawColumn(System.Object,MindFusion.Spreadsheet.DrawColumnEventArgs)">
            <summary>
            Handles the DrawColumn event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnDrawRow(System.Object,MindFusion.Spreadsheet.DrawRowEventArgs)">
            <summary>
            Handles the DrawRow event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsResized(System.Object,MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Handles the ColumnsResized event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsResized(System.Object,MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Handles the RowsResized event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsMoved(System.Object,MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Handles the ColumnsMoved event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsMoved(System.Object,MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Handles the RowsMoved event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsMoving(System.Object,MindFusion.Spreadsheet.ColumnRangeMovingEventArgs)">
            <summary>
            Handles the ColumnsMoving event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsMoving(System.Object,MindFusion.Spreadsheet.RowRangeMovingEventArgs)">
            <summary>
            Handles the RowsMoving event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsResizing(System.Object,MindFusion.Spreadsheet.ColumnRangeResizingEventArgs)">
            <summary>
            Handles the ColumnsResizing event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsResizing(System.Object,MindFusion.Spreadsheet.RowRangeResizingEventArgs)">
            <summary>
            Handles the RowsResizing event of the grid view.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.Cut">
            <summary>
            Cuts the data from the currently selected cells to the clipboard.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.Copy">
            <summary>
            Copies the data from the currently selected cells to the clipboard.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.Paste">
            <summary>
            Pastes the data from the clipboard inside the currently selected cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ResizeColumnToFit(System.Int32)">
            <summary>
            Resizes a view column to fit its contents.
            </summary>
            <param name="index">
            The index of the column to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ResizeColumnsToFit(System.Int32,System.Int32)">
            <summary>
            Resizes view columns to fit their contents.
            </summary>
            <param name="startIndex">
            The index of the first column to resize.
            </param>
            <param name="endIndex">
            The index of the last column to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ResizeRowToFit(System.Int32)">
            <summary>
            Resizes a view row to fit its contents.
            </summary>
            <param name="index">
            The index of the row to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ResizeRowsToFit(System.Int32,System.Int32)">
            <summary>
            Resizes view rows to fit their contents.
            </summary>
            <param name="startIndex">
            The index of the first row to resize.
            </param>
            <param name="endIndex">
            The index of the last row to resize.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.BringIntoView(MindFusion.Spreadsheet.Cell)">
            <summary>
            Scrolls the view to make the specified cell visible.
            </summary>
            <param name="cell">
            The cell to scroll to.
            </param>
            <returns>
            true if the operation was successful; false if the specified cell could not be scrolled to.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ToGlobalX(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the left side of the specified cell,
            to a measure, relative to the left side of the entire worksheet.
            </summary>
            <param name="x">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the worksheet.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ToGlobalY(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the top side of the specified cell,
            to a measure, relative to the top side of the entire worksheet.
            </summary>
            <param name="y">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the worksheet.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ToLocalX(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the left side of the worksheet,
            to a measure, relative to the left side of the specified cell.
            </summary>
            <param name="x">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the cell.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.ToLocalY(MindFusion.Spreadsheet.Measure,System.Int32,System.Int32)">
            <summary>
            Converts the specified measure, relative to the top side of the worksheet,
            to a measure, relative to the top side of the specified cell.
            </summary>
            <param name="y">
            The coordinate to convert.
            </param>
            <param name="column">
            The 0-based index of the column of the relative cell.
            </param>
            <param name="row">
            The 0-based index of the row of the relative cell.
            </param>
            <returns>
            A Measure object representing the specified measure, reative to the cell.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.GetCellAt(MindFusion.Spreadsheet.Measure,MindFusion.Spreadsheet.Measure)">
            <summary>
            Gets the cell at the specified coordinates, expressed relatively
            to the top/left of the worksheet.
            </summary>
            <param name="x">
            The x-coordinate of the cell to get.
            </param>
            <param name="y">
            The y-coordinate of the cell to get.
            </param>
            <returns>
            A Cell object representing the cell at the specified location.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.GetCellAt(System.Int32,System.Int32)">
            <summary>
            Gets the cell at the specified coordinates, expressed relatively
            to the top/left of the control.
            </summary>
            <param name="x">
            The x-coordinates of the cell to get.
            </param>
            <param name="y">
            The y-coordinates of the cell to get.
            </param>
            <returns>
            A Cell object representing the cell at the specified location.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnCellClicked(MindFusion.Spreadsheet.CellMouseEventArgs)">
            <summary>
            Raises the CellClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectClicked(MindFusion.Spreadsheet.ObjectMouseEventArgs)">
            <summary>
            Raises the ObjectClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnClicked(MindFusion.Spreadsheet.ColumnMouseEventArgs)">
            <summary>
            Raises the ColumnClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowClicked(MindFusion.Spreadsheet.RowMouseEventArgs)">
            <summary>
            Raises the RowClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditStarting(MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Raises the InplaceEditStarting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditStarted(MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Raises the InplaceEditStarted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditEnding(MindFusion.Spreadsheet.InplaceEditValidationEventArgs)">
            <summary>
            Raises the InplaceEditEnding event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnInplaceEditEnded(MindFusion.Spreadsheet.InplaceEditEventArgs)">
            <summary>
            Raises the InplaceEditEnded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRequestWorksheet(MindFusion.Spreadsheet.RequestWorksheetEventArgs)">
            <summary>
            Raises the RequestWorksheet event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectStartModifying(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectStartModifying event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectModifying(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectModifying event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectModified(MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Raises the ObjectModified event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectModifyCancelled(MindFusion.Spreadsheet.ObjectInteractionEventArgs)">
            <summary>
            Raises the ObjectModifyCancelled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectSelecting(MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs)">
            <summary>
            Raises the ObjectSelecting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectSelected(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectSelected event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectDeselected(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectDeselected event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectDeleting(MindFusion.Spreadsheet.ObjectValidationEventArgs)">
            <summary>
            Raises the ObjectDeleting event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnObjectDeleted(MindFusion.Spreadsheet.ObjectEventArgs)">
            <summary>
            Raises the ObjectDeleted event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnHyperlinkClicked(MindFusion.Spreadsheet.CellEventArgs)">
            <summary>
            Raises the HyperlinkClicked event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnOutlineLevelToggled(MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Raises the ColumnOutlineLevelToggled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowOutlineLevelToggled(MindFusion.Spreadsheet.OutlineEventArgs)">
            <summary>
            Raises the RowOutlineLevelToggled event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnGroupExpanded(MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Raises the ColumnGroupExpanded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnGroupCollapsed(MindFusion.Spreadsheet.ColumnEventArgs)">
            <summary>
            Raises the ColumnGroupCollapsed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowGroupCollapsed(MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Raises the RowGroupCollapsed event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowGroupExpanded(MindFusion.Spreadsheet.RowEventArgs)">
            <summary>
            Raises the RowGroupExpanded event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnDrawColumn(MindFusion.Spreadsheet.DrawColumnEventArgs)">
            <summary>
            Raises the DrawColumn event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnDrawRow(MindFusion.Spreadsheet.DrawRowEventArgs)">
            <summary>
            Raises the DrawRow event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsResized(MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Raises the ColumnsResized event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsResized(MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Raises the RowsResized event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsMoved(MindFusion.Spreadsheet.ColumnRangeEventArgs)">
            <summary>
            Raises the ColumnsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsMoved(MindFusion.Spreadsheet.RowRangeEventArgs)">
            <summary>
            Raises the RowsMoved event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsMoving(MindFusion.Spreadsheet.ColumnRangeMovingEventArgs)">
            <summary>
            Raises the ColumnsMoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsMoving(MindFusion.Spreadsheet.RowRangeMovingEventArgs)">
            <summary>
            Raises the RowsMoving event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnColumnsResizing(MindFusion.Spreadsheet.ColumnRangeResizingEventArgs)">
            <summary>
            Raises the ColumnsResizing event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetView.OnRowsResizing(MindFusion.Spreadsheet.RowRangeResizingEventArgs)">
            <summary>
            Raises the RowsResizing event.
            </summary>
            <param name="e">
            An object providing the event data.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.BackColor">
            <summary>
            Gets or sets the background color of the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.Worksheet">
            <summary>
            Gets or sets the Worksheet displayed in the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ScrollX">
            <summary>
            Gets or sets the value of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ScrollY">
            <summary>
            Gets or sets the value of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ActiveCell">
            <summary>
            Gets or sets the currently active cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowActiveCell">
            <summary>
            Gets or sets a value indicating whether to display the active cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowAutoFilterRange">
            <summary>
            Gets or sets a value indicating whether to display the range affected by the autofilter.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.Selection">
            <summary>
            Gets an object that can be used to manipulate the selection in the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowSelection">
            <summary>
            Gets or sets a value indicating whether to display the cell selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether to display the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.DrawFilledCellBorders">
            <summary>
            Gets or sets a value indicating whether to draw the default grid lines
            for cells with set background.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.AllowAutoFill">
            <summary>
            Gets or sets a value indicating whether to display the auto-fill
            handle at the bottom-right side of the selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.AutoFillCopyOnly">
            <summary>
            Gets or sets whether the auto-fill tool should only copy values,
            instead of extrapolating new values from the selection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.AllowMoveHeaders">
            <summary>
            Gets or sets a value indicating whether the user can interactively move
            the worksheet headers, by selecting the entire column or row and dragging.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.AllowMoveCells">
            <summary>
            Gets or sets a value indicating whether the user can interactively
            move cells around the worksheet, by pressing near the edge of the
            currently selected cells with the mouse and dragging.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowScrollToolTips">
            <summary>
            Gets or sets a value indicating whether to display tooltips when scrolling with the thumb.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.HScrollToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when the
            view is scrolled horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.VScrollToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when the
            view is scrolled vertically.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowResizeHeaderToolTips">
            <summary>
            Gets or sets a value indicating whether to display tooltips when the
            user resizes row or column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ResizeColumnToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when a
            column is resized interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ResizeRowToolTipFormat">
            <summary>
            Gets or sets the format of the tooltip that is displayed when a
            row is resized interactively.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowHeaders">
            <summary>
            Gets or sets a value indicating whether to display the row and column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowHiddenHeaderIndicators">
            <summary>
            Gets or sets a value indicating whether to display indicators for
            hidden row and column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.AllowResizeCells">
            <summary>
            Gets or sets a value indicating whether users can resize rows and columns by dragging cell borders.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header, or null, to automatically size the row headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of the column header, or null, to automatically size the column headers.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowHorizontalScrollBar">
            <summary>
            Gets or sets a value indicating whether to display the horizontal scroll bar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.ShowVerticalScrollBar">
            <summary>
            Gets or sets a value indicating whether to display the vertical scroll bar.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.IsEditing">
            <summary>
            Gets a value indicating whether there is currently an in-place
            editing operation in progress within the view.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.PointerCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user when no modification is performed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.DisallowCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user when
            an object cannot be created at a given location.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.MoveCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if
            the pointed object can be modified.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.HorizontalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user
            if dragging would resize an object horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.VerticalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object vertically.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.HorizontalSplitCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging would resize rows.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.VerticalSplitCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging would resize columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.DiagonalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object both vertically and horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.CounterDiagonalResizeCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if dragging
            would resize an object both vertically and horizontally.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.AutoFillCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if the mouse
            is over the auto fill handle or the user is currently performing
            an auto fill operation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.HyperlinkCursor">
            <summary>
            Gets or sets the mouse cursor shown to the user if the mouse is over
            a cell containing a hyperlink.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetView.LicenseKey">
            <summary>
            Gets or sets the license key of the control.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.PropertyChanged">
            <summary>
            Raised when a property value changes.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.CellClicked">
            <summary>
            Raised when a cell is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectClicked">
            <summary>
            Raised when a object is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnClicked">
            <summary>
            Raised when a column header is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowClicked">
            <summary>
            Raised when a row header is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.InplaceEditStarting">
            <summary>
            Raised when an in-place edit operation is about to start,
            before the in-place editor is displayed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.InplaceEditStarted">
            <summary>
            Raised when an in-place edit operation has started,
            after the in-place editor is displayed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.InplaceEditEnding">
            <summary>
            Raised when an in-place edit operation is about to finish,
            before the in-place editor is closed.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.InplaceEditEnded">
            <summary>
            Raised when an inplace-edit operation has finished.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RequestWorksheet">
            <summary>
            Raised when the view needs to display another worksheet.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectStartModifying">
            <summary>
            Raised while the user is moving or resizing an interactive object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectModifying">
            <summary>
            Raised when the user starts modifying an interactive object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectModified">
            <summary>
            Raised when the user completes the modification of an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectModifyCancelled">
            <summary>
            Raised when the user cancels the modification of an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectSelecting">
            <summary>
            Raised when the user is about to select an object.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectSelected">
            <summary>
            Raised when an object is selected, either programmatically or interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectDeselected">
            <summary>
            Raised when an object is deselected, either programmatically or interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectDeleting">
            <summary>
            Raised when an object is about to be deleted interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ObjectDeleted">
            <summary>
            Raised when an object is deleted interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.HyperlinkClicked">
            <summary>
            Raised when a cell containing a hyperlink is clicked.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnOutlineLevelToggled">
            <summary>
            Raised when a column outline level has been activated interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowOutlineLevelToggled">
            <summary>
            Raised when a row outline level has been activated interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnGroupExpanded">
            <summary>
            Raised when a column group has been expanded interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnGroupCollapsed">
            <summary>
            Raised when a column group has been collapsed interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowGroupExpanded">
            <summary>
            Raised when a row group has been expanded interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowGroupCollapsed">
            <summary>
            Raised when a row group has been collapsed interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.DrawColumn">
            <summary>
            Raised to allow custom drawing of view columns.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.DrawRow">
            <summary>
            Raised to allow custom drawing of view rows.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnsResized">
            <summary>
            Raised when one or more columns are resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowsResized">
            <summary>
            Raised when one or more rows are resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnsMoved">
            <summary>
            Raised when one or more columns are moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowsMoved">
            <summary>
            Raised when one or more rows are moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnsMoving">
            <summary>
            Raised when one or more columns are being moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowsMoving">
            <summary>
            Raised when one or more rows are being moved interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.ColumnsResizing">
            <summary>
            Raised when one or more columns are being resized interactively.
            </summary>
        </member>
        <member name="E:MindFusion.Spreadsheet.WorksheetView.RowsResizing">
            <summary>
            Raised when one or more rows are being resized interactively.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Calc">
            <summary>
            Provides cross-type calculation operators.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Calc.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Calc.Do(System.Object,MindFusion.Spreadsheet.Expressions.UnaryOp,MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            Performs the specified unary operation on the specified argument.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Calc.Do(System.Object,System.Object,MindFusion.Spreadsheet.Expressions.BinaryOp,MindFusion.Spreadsheet.Expressions.EvaluationContext)">
            <summary>
            Performs the specified operation on the specified arguments.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Calc.Compare(System.IComparable,System.IComparable,MindFusion.Spreadsheet.Expressions.BinaryOp)">
            <summary>
            Performs the specified comparison operation on the specified arguments.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Calc.typePriority">
            <summary>
            Contains the priority of the types. Objects are promoted to types
            of higher priority when performing operation on different types.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowCollection">
            <summary>
            Represents a specialized collection for worksheet rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the RowCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.RebuildVmap">
            <summary>
            Rebuilds the row visibility map if necessary.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.RebuildOmap">
            <summary>
            Rebuilds the row outline map if necessary.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetFirst">
            <summary>
            Gets the first visible row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetLast">
            <summary>
            Gets the last visible row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetNext(System.Int32)">
            <summary>
            Gets the next visible row, given a row index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetNext(System.Int32,System.Boolean)">
            <summary>
            Gets the next visible row, given a row index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetPrevious(System.Int32)">
            <summary>
            Gets the previous visible row, given a row index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetPrevious(System.Int32,System.Boolean)">
            <summary>
            Gets the previous visible row, given a row index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetSegmentLength">
            <summary>
            Gets the number of hidden rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetSegmentLength(System.Int32,System.Int32)">
            <summary>
            Gets the number of hidden rows in the range [from, to].
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.IsHidden(System.Int32)">
            <summary>
            Checks whether the specified row is hidden.
            This is generally faster than calling Row.IsHidden directly,
            particularly when called multiple times in a row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetFirstOutline">
            <summary>
            Gets the first row with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetFirstOutline(System.Int32@)">
            <summary>
            Gets the first row with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetLastOutline">
            <summary>
            Gets the last row with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetLastOutline(System.Int32@)">
            <summary>
            Gets the last row with outline.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetNextOutline(System.Int32)">
            <summary>
            Gets the next row with outline different than the outline of
            the row with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetNextOutline(System.Int32,System.Int32@)">
            <summary>
            Gets the next row with outline different than the outline of
            the row with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetPreviousOutline(System.Int32)">
            <summary>
            Gets the previous row with outline different than the outline of
            the row with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetPreviousOutline(System.Int32,System.Int32@)">
            <summary>
            Gets the previous row with outline different than the outline of
            the row with the specified index.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An IEnumerator&lt;Row&gt; that can be used to iterate
            through the collection.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable.GetEnumerator explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.Insert(System.Int32)">
            <summary>
            Inserts a new row at the specified index.
            </summary>
            <param name="index">
            The zero-based index where the row should be inserted.
            </param>
            <remarks>
            This method will raise an InvalidOperationException exception if the
            operation would cause filled cells to be shifted beyond the sheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts the specified number of rows at the specified index.
            </summary>
            <param name="index">
            The zero-based index where the rows should be inserted.
            </param>
            <param name="count">
            The number of rows to insert.
            </param>
            <remarks>
            This method will raise an InvalidOperationException exception if the
            operation would cause filled cells to be shifted beyond the sheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.Remove(System.Int32)">
            <summary>
            Removes the row at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the row to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes the specified number of rows at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the first row to remove.
            </param>
            <param name="count">
            The number of rows to remove.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the specified row to the specified target index.
            </summary>
            <param name="index">
            The zero-based index of the row to move.
            </param>
            <param name="target">
            The zero-based index of the row before which the row should be moved.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.Move(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the specified number of rows to the specified target index.
            </summary>
            <param name="index">
            The zero-based index of the first row to move.
            </param>
            <param name="count">
            The number of rows to move.
            </param>
            <param name="target">
            The zero-based index of the row before which the rows should be moved.
            </param>
            <returns>
            true if a move occurred; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowCollection.AdjustRow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adjusts the specified row as if the specified number of rows
            at the specified index are moved to the specified target index.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowCollection.Count">
            <summary>
            Gets the number of rows in the collection.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowCollection.Item(System.Int32)">
            <summary>
            Gets the row at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the row to get.
            </param>
            <returns>
            A Row object identifying the row at the specified position.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets a RowRange object that can be used to manipulate the
            rows in the specified range.
            </summary>
            <param name="top">
            The zero-based index of the top row in the range.
            </param>
            <param name="bottom">
            The zero-based index of the bottom row in the range.
            </param>
            <returns>
            A RowRange object that can be used to manipulate the rows in the range.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowStorage">
            <summary>
            Represents a row in a Worksheet model.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowStorage.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the RowStorage class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Row">
            <summary>
            Identifies a row in a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Row.#ctor(MindFusion.Spreadsheet.Worksheet,System.Int32)">
            <summary>
            Initializes a new instance of the Row class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.Index">
            <summary>
            Gets the zero-based index of the represented row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.Title">
            <summary>
            Gets or sets the row title.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.Height">
            <summary>
            Gets or sets the height of the row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.IsHidden">
            <summary>
            Gets or sets a value indicating whether the row is hidden.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.OutlineLevel">
            <summary>
            Gets or sets the outline level of the row, or 0, if the row is not grouped.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.IsCollapsed">
            <summary>
            Gets or sets a value indicating whether the group represented by this row is collapsed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.IsCollapsedInternal">
            <summary>
            Gets or sets the IsCollapsed property without raising
            the IsCollapsed property change notification.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.PageBreak">
            <summary>
            Gets or sets a value indicating whether to force a page break
            after this row during printing.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.Tag">
            <summary>
            Gets or sets a custom object associated with this row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.Style">
            <summary>
            Gets an IRowStyle object that can be used to customize
            the appearance of all cells in the row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.Validation">
            <summary>
            Gets an IValidation object that can be used to specify validation
            rules for the data in the row.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Row.ConditionalFormats">
            <summary>
            Gets a list with format objects that can be used to customize
            the appearance of the cells in the row based on various conditions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.MergedCellsCollection">
            <summary>
            Represents a specialized collection for merged cells in a worksheet,
            each merged cell is represented by a CellRange object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MergedCellsCollection.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the MergedCellsCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MergedCellsCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.FormulaTextBox">
            <summary>
            Text box tailored for editing spreadsheet formulae.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.#ctor(MindFusion.Spreadsheet.Workbook,System.Drawing.Color[])">
            <summary>
            Initializes a new instance of the FormulaTextBox class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            RichTextBox.WndProc override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Control.OnKeyDown override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Control.OnKeyPress override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            TextBoxBase.OnTextChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.OnSelectionChanged(System.EventArgs)">
            <summary>
            RichTextBox.SelectionChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.ClearAllFormatting">
            <summary>
            Clears all formatting in the control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.Undo">
            <summary>
            Undoes the last edit operation in the text box.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.Redo">
            <summary>
            Redoes the last edit operation in the text box.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.SuspendRepaint">
            <summary>
            Suspends repainting of the control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.ResumeRepaint">
            <summary>
            Resumes repainting of the control.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormulaTextBox.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FormulaTextBox.lexer">
            <summary>
            This field is updated asynchronuously and may return null,
            or an out-of-sync value, if obtained immediatelly after
            the content is changed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.Text">
            <summary>
            RichTextBox.Text override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.SelectedText">
            <summary>
            RichTextBox.SelectedText override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.CanUndo">
            <summary>
            Gets a value indicating whether the user can undo the previous operation in the control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.CanRedo">
            <summary>
            Gets a value indicating whether the user can redo the previous operation in the control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.SelectionBold">
            <summary>
            Gets or sets the font weight of the current selection or insertion point.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.Bold">
            <summary>
            Gets or sets the font weight formatting in the control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.SelectionItalic">
            <summary>
            Gets or sets the font style of the current selection or insertion point.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.Italic">
            <summary>
            Gets or sets the font style formatting in the control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.SelectionUnderlined">
            <summary>
            Gets or sets the font underline style of the current selection or insertion point.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.Underlined">
            <summary>
            Gets or sets the font underline formatting in the control.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.EnableAutoFormatting">
            <summary>
            Gets or sets a value indicating whether the control should perform
            automatic colorization of its content.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.AllowArrowNavigation">
            <summary>
            Gets or sets a value indicating whether the user can adjust the caret
            in the text box by using the arrow keys.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.UndoRecord.IsEmpty">
            <summary>
            Gets or sets a value indicating whether there is
            an actual change.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.UndoRecord.Type">
            <summary>
            Gets or sets the type of the change.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.UndoRecord.OldLocation">
            <summary>
            Gets or sets the location of the caret before the change.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.UndoRecord.Location">
            <summary>
            Gets or sets the location of the caret after the change.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.UndoRecord.Length">
            <summary>
            Gets or sets the length of the selection before the change.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.UndoRecord.OldText">
            <summary>
            Gets or sets the text that was modified or deleted.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormulaTextBox.UndoRecord.Text">
            <summary>
            Gets or sets the text that was inserted.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ComparisonOperator">
            <summary>
            Specifies an operator for value comparison.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.Between">
            <summary>
            Indicates that the left operand must be between the right operands.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.NotBetween">
            <summary>
            Indicates that the left operand must not be between the right operands.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.Equal">
            <summary>
            Indicates that the left operand must be equal to the right operand.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.NotEqual">
            <summary>
            Indicates that the left operand must not be equal to the right operand.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.Contain">
            <summary>
            Indicates that the left operand must contain the right operand.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.NotContain">
            <summary>
            Indicates that the left operand must not contain the right operand.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.LessThan">
            <summary>
            Indicates that the left operand must be less than the right operand.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.LessThanOrEqual">
            <summary>
            Indicates that the left operand must be less than or equal to the right operand.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.GreaterThan">
            <summary>
            Indicates that the left operand must be greater than the right operand.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ComparisonOperator.GreaterThanOrEqual">
            <summary>
            Indicates that the left operand must be greater than or equal to the right operand.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Comparison">
            <summary>
            Provides methods for value comparison.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellRangeCollection">
            <summary>
            Represents a specialized collection for cell ranges.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRangeCollection.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the CellRangeCollection class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRangeCollection.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a CellRange object that can be used to manipulate the
            data of the cells in the specified range.
            </summary>
            <param name="topLeftColumn">
            The zero-based index of the top-left column of the range.
            </param>
            <param name="topLeftRow">
            The zero-based index of the top-left row of the range.
            </param>
            <param name="bottomRightColumn">
            The zero-based index of the bottom-right column of the range.
            </param>
            <param name="bottomRightRow">
            The zero-based index of the bottom-right row of the range.
            </param>
            <returns>
            A CellRange object that can be used to manipulate the cells in the range.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRangeCollection.Item(System.String)">
            <summary>
            Gets a CellRange object that can be used to manipulate the
            data of the cells in the specified range.
            </summary>
            <param name="range">
            A string identifying the range to get, in the format 'A1:B2'.
            </param>
            <returns>
            A CellRange object that can be used to manipulate the cells in the range.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellRange">
            <summary>
            Identifies a range of cells in a Worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.#ctor(MindFusion.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellRange class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.#ctor(MindFusion.Spreadsheet.Worksheet,System.String)">
            <summary>
            Initializes a new instance of the CellRange class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.#ctor(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellRef)">
            <summary>
            Initializes a new instance of the CellRange class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable.GetEnumerator explicit implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.GetEnumerator">
            <summary>
            Returns an enumerator object that can be used to iterate through
            the cells in the range.
            </summary>
            <returns>
            An IEnumerator&lt;Cell&gt; object that can be used to iterate
            through the cells in the range.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Intersects(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Checks whether this cell range intersects the specified cell range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Intersects(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Checks whether this cell range intersects the cell range identified
            by the specified reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Contains(MindFusion.Spreadsheet.CellRange)">
            <summary>
            Checks whether this cell range fully contains the specified cell range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Contains(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Checks whether this cell range fully contains the cell range identified
            by the specified reference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Contains(System.Int32,System.Int32)">
            <summary>
            Checks whether this cell range contains the cell identified by the
            specified column and row.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Clear">
            <summary>
            Clears the content of the cells in this range.
            </summary>
            <returns>
            true if at least one cell has been cleared; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Reset">
            <summary>
            Clears the contents of the cells in the range, as well as their associated styles,
            hyperlinks, annotations, conditional formatting and data validations.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Insert(MindFusion.Spreadsheet.PushDirection)">
            <summary>
            Inserts new cells in the current range of cells. The existing cells
            are pushed down or right based on the value of <i>direction</i>.
            </summary>
            <param name="direction">
            Specifies the direction to push the existing cells in the range.
            </param>
            <remarks>
            This method will raise an InvalidOperationException exception if the
            operation would cause filled cells to be shifted beyond the sheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Remove(MindFusion.Spreadsheet.ShiftDirection)">
            <summary>
            Remove the cells in the current range of cells.
            </summary>
            <param name="direction">
            Specifies how to fill the space of the removed cells.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.MoveTo(MindFusion.Spreadsheet.Cell)">
            <summary>
            Moves the data from the current range to the range identified
            by the specified cell.
            </summary>
            <param name="targetCell">
            The top-left cell of the target range.
            </param>
            <remarks>
            This method will raise an InvalidOperationException exception if the
            target range is outside of the current worksheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.MoveTo(System.Int32,System.Int32)">
            <summary>
            Moves the data from the current range to the range identified
            by the specified column and row.
            </summary>
            <param name="targetColumn">
            The leftmost column of the target range.
            </param>
            <param name="targetRow">
            The topmost row of the target range.
            </param>
            <remarks>
            This method will raise an ArgumentOutOfRangeException exception if the
            target range is outside of the current worksheet.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Sum">
            <summary>
            TODO: test sum aggregation.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.FillData(MindFusion.Spreadsheet.FillType,MindFusion.Spreadsheet.FillDirection,MindFusion.Spreadsheet.FillDate,System.Double,System.Nullable{System.Double},System.Boolean)">
            <summary>
            Fills the data in this range according to the current data and the specified options.
            </summary>
            <param name="type">
            The fill type.
            </param>
            <param name="direction">
            The fill direction.
            </param>
            <param name="date">
            The date component to increment when the fill type is Date.
            This parameter is ignored for any of the other fill types.
            </param>
            <param name="step">
            The increment step. This parameter is ignored if the fill type
            is Auto or when using linear or growth trend.
            </param>
            <param name="stop">
            The fill restriction. The fill will stop when the running value
            exceeds this restriction. This parameter is ignored if the fill type
            is Auto or when using linear or growth trend.
            </param>
            <param name="trend">
            A flag indicating whether to use linear or growth trend. This flag
            can be combined with the Linear and Growth fill types to specify the
            actual trend.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.AutoFill(MindFusion.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
            <summary>
            Automatically fills the values of the cells in the specified range based
            on the values of the cells in this range.
            </summary>
            <param name="target">
            The range to fill.
            </param>
            <param name="copyOnly">
            A flag indicating whether to perform a raw copy, rather than increments/estimates.
            </param>
            <param name="horizontal">
            A flag indicating the direction of the fill.
            </param>
            <returns>
            true, if the fill was successful; otherwise, false.
            </returns>
            <remarks>
            The autofill operation will fail if the specified range intersects with this range.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Merge">
            <summary>
            Merges the cells in this range into a single cell.
            </summary>
            <returns>
            true if the merge was successful; otherwise, false.
            </returns>
            <remarks>
            The merge will fail if the current range contains only a single
            cell or if the range intersects with another merged cell.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Unmerge">
            <summary>
            Unmerges all merged cells intersecting with this range.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.Sort(MindFusion.Spreadsheet.SortOptions)">
            <summary>
            Sorts the data in this range according to the specified options.
            </summary>
            <param name="options">
            The sort settings, such as sort keys and direction.
            </param>
            <returns>
            true if the sort was successful; otherwise, false.
            </returns>
            <remarks>
            The sorting will fail if there are no keys specified or if all keys
            are outside of the current range.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.AutoFilter">
            <summary>
            Toggles autofiltering for the columns in this range.
            </summary>
            <returns>
            true if autofiltering was successfully toggled; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.AutoFilter(System.Int32,System.Object,MindFusion.Spreadsheet.AutoFilterOperator,System.Object,System.Boolean)">
            <summary>
            Enables autofiltering for the specified column in this range using the specified criteria.
            </summary>
            <param name="field">
            The 1-based index of the column, relatively to the leftmost column in the range.
            </param>
            <param name="criteria1">
            A string or an array of values, specifying the first criteria, for example "101".
            Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields.
            If this argument is omitted, the criteria is All. If op is Top10Items, criteria1
            specifies the number of items, for example, "10".
            </param>
            <param name="op">
            A value specifying the type of the filter.
            </param>
            <param name="criteria2">
            The second criteria. Used with criteria1 and op to construct compound criteria.
            </param>
            <param name="visibleDropDown">
            true to display the autofilter drop-down arrow for the filtered field;
            false to hide the autofilter drop-down arrow for the filtered field.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellRange.ToString">
            <summary>
            Object.ToString override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRange.Style">
            <summary>
            Gets an IStyle object that can be used to customize
            the appearance of all cells in the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRange.Validation">
            <summary>
            Gets an IValidation object that can be used to specify validation
            rules for the data in the cell range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRange.ConditionalFormats">
            <summary>
            Gets a list with format objects that can be used to customize
            the appearance of the cells in the range based on various conditions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRange.Left">
            <summary>
            Gets the left side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRange.Top">
            <summary>
            Gets the top side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRange.Right">
            <summary>
            Gets the right side of the range.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellRange.Bottom">
            <summary>
            Gets the bottom side of the range.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CaseInsensitiveComparer">
            <summary>
            Case-insensitive culture-aware string comparer.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CaseInsensitiveComparer.#ctor">
            <summary>
            Initializes a new instance of the CaseInsensitiveComparer class
            using an invariant culture.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the CaseInsensitiveComparer class
            using the specified culture.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ValidationType">
            <summary>
            Specifies the type of data validation.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.AllValues">
            <summary>
            Indicates that there are no limitations.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.WholeNumber">
            <summary>
            Indicates only whole numbers corresponding to the condition.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.Decimal">
            <summary>
            Indicates all numbers corresponding to the condition.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.Date">
            <summary>
            Indicates all dates corresponding to the condition.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.Time">
            <summary>
            Indicates all times corresponding to the condition.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.Text">
            <summary>
            Indicates all text values corresponding to the condition.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.List">
            <summary>
            Indicates all values matching a predefined list of values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationType.TextLength">
            <summary>
            Indicates validation based on the length of the entered text.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ValidationErrorAction">
            <summary>
            Specifies the action to perform when data validation fails.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationErrorAction.Stop">
            <summary>
            Indicates that an error message box will be displayed.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationErrorAction.Warning">
            <summary>
            Indicates that a warning message box will be displayed.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationErrorAction.Information">
            <summary>
            Indicates that an information message box will be displayed.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ValidationErrorAction.RaiseEvent">
            <summary>
            Indicates that an event will be raised.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Validation">
            <summary>
            Represents data validation associated with a range of cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Validation.#ctor(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IStyle)">
            <summary>
            Initializes a new instance of the Validation class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Validation.Reset">
            <summary>
            Resets the validation to the default.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Validation.FirstInvariant">
            <summary>
            Gets or sets First in a culture-invariant manner.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Validation.SecondInvariant">
            <summary>
            Gets or sets Second in a culture-invariant manner.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Validator">
            <summary>
            Provides methods for data validation through IValidation objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Validator.Validate(MindFusion.Spreadsheet.IValidation,MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.Cell,System.String)">
            <summary>
            Checks whether the specified data is valid according to the
            specified validation criteria.
            </summary>
            <param name="validation">
            An object specifying the validation rules.
            </param>
            <param name="workbook">
            The workbook in which the validation occurs.
            </param>
            <param name="cell">
            The cell being validated.
            </param>
            <param name="data">
            The data to validate.
            </param>
            <returns>
            true if the validation is successful; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Validator.GetValidationList(MindFusion.Spreadsheet.IValidation,MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.Cell)">
            <summary>
            Gets the list of options for this validation.
            </summary>
            <param name="validation">
            An object specifying the validation rules.
            </param>
            <param name="workbook">
            The workbook in which the validation occurs.
            </param>
            <param name="cell">
            The cell being validated.
            </param>
            <returns>
            A list with valid options, if this validation represents
            a list; otherwise, an empty list.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.UndoEventArgs">
            <summary>
            Contains the arguments passed to the ActionUndone and ActionRedone event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.UndoEventArgs.#ctor(MindFusion.Spreadsheet.Command)">
            <summary>
            Initializes a new instance of the UndoEventArgs class.
            </summary>
            <param name="command">
            The Command related to the event.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.UndoEventArgs.Command">
            <summary>
            Gets a reference to the Command instance related to
            the event being handled.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetEventArgs">
            <summary>
            Contains the arguments passed to Worksheet-related events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetEventArgs.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the WorksheetEventArgs class.
            </summary>
            <param name="worksheet">
            The related worksheet.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetEventArgs.Worksheet">
            <summary>
            Gets the related worksheet.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetValidationEventArgs">
            <summary>
            Contains the arguments passed to Worksheet-related validation events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetValidationEventArgs.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the WorksheetValidationEventArgs class.
            </summary>
            <param name="worksheet">
            The related worksheet.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetValidationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the current operation.
            </summary>
            <remarks>
            Set this property to true to prevent the user from completing the operation.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetMouseEventArgs">
            <summary>
            Contains the arguments passed to Worksheet-related mouse events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetMouseEventArgs.#ctor(MindFusion.Spreadsheet.Worksheet,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the WorksheetMouseEventArgs class.
            </summary>
            <param name="worksheet">
            The related worksheet.
            </param>
            <param name="button">
            The clicked mouse button.
            </param>
            <param name="x">
            The relative x-coordinate of the mouse.
            </param>
            <param name="y">
            The relative y-coordinate of the mouse.
            </param>
            <param name="clicks">
            The number of mouse clicks.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetMouseEventArgs.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetMouseEventArgs.X">
            <summary>
            Gets the relative x-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetMouseEventArgs.Y">
            <summary>
            Gets the relative y-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetMouseEventArgs.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetRenamedEventArgs">
            <summary>
            Contains the arguments passed to the WorksheetRenamed event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetRenamedEventArgs.#ctor(MindFusion.Spreadsheet.Worksheet,System.String)">
            <summary>
            Initializes a new instance of the WorksheetRenamedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetRenamedEventArgs.OldName">
            <summary>
            Gets the previous worksheet name.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ItemRenamedEventArgs`1">
            <summary>
            Contains the arguments passed to the ItemRenamed event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ItemRenamedEventArgs`1.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the ItemRenamedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ItemRenamedEventArgs`1.Item">
            <summary>
            Gets the renamed item.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ItemRenamedEventArgs`1.OldName">
            <summary>
            Gets the previous item name.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnEventArgs">
            <summary>
            Contains the arguments passed to column-related events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnEventArgs.#ctor(MindFusion.Spreadsheet.Column)">
            <summary>
            Initializes a new instance of the ColumnEventArgs class.
            </summary>
            <param name="column">
            The related column.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnEventArgs.Column">
            <summary>
            Gets the related column.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnRangeEventArgs">
            <summary>
            Contains the arguments passed to events related to multiple column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRangeEventArgs.#ctor(MindFusion.Spreadsheet.ColumnRange)">
            <summary>
            Initializes a new instance of the ColumnRangeEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeEventArgs.ColumnRange">
            <summary>
            Gets the related range of columns.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnsEventArgs">
            <summary>
            Contains the arguments passed to column-related events.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.StyleChangedEventArgs">
            <summary>
            Provides data for the StyleChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnsEventArgs.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Object)">
            <summary>
            Initializes a new instance of the ColumnsEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnsEventArgs.Index">
            <summary>
            Gets the index where the columns were inserted.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnsEventArgs.Count">
            <summary>
            Gets the number of inserted or deleted columns.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnsEventArgs.OriginalAutoFilter">
            <summary>
            Gets the state of the worksheet autofilter before the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnsRemovedEventArgs">
            <summary>
            Contains the arguments passed to the ColumnsRemoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnsRemovedEventArgs.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.ColumnStorage},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{System.Int32,MindFusion.Spreadsheet.CellRange}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.List{MindFusion.Spreadsheet.CellAnnotation},System.Object)">
            <summary>
            Initializes a new instance of the ColumnsRemovedEventArgs class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnsMovedEventArgs">
            <summary>
            Contains the arguments passed to the ColumnMoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnsMovedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Object)">
            <summary>
            Initializes a new instance of the ColumnsMovedEventArgs class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnMouseEventArgs">
            <summary>
            Contains the arguments passed to column-related mouse events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnMouseEventArgs.#ctor(MindFusion.Spreadsheet.Column,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ColumnMouseEventArgs class.
            </summary>
            <param name="column">
            The related column.
            </param>
            <param name="button">
            The clicked mouse button.
            </param>
            <param name="x">
            The relative x-coordinate of the mouse.
            </param>
            <param name="y">
            The relative y-coordinate of the mouse.
            </param>
            <param name="clicks">
            The number of mouse clicks.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnMouseEventArgs.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnMouseEventArgs.X">
            <summary>
            Gets the relative x-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnMouseEventArgs.Y">
            <summary>
            Gets the relative y-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnMouseEventArgs.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowEventArgs">
            <summary>
            Contains the arguments passed to row-related events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowEventArgs.#ctor(MindFusion.Spreadsheet.Row)">
            <summary>
            Initializes a new instance of the RowEventArgs class.
            </summary>
            <param name="row">
            The related row.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowEventArgs.Row">
            <summary>
            Gets the related row.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowRangeEventArgs">
            <summary>
            Contains the arguments passed to events related to multiple rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRangeEventArgs.#ctor(MindFusion.Spreadsheet.RowRange)">
            <summary>
            Initializes a new instance of the RowRangeEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeEventArgs.RowRange">
            <summary>
            Gets the related range of rows.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowRangeMovingEventArgs">
            <summary>
            Contains the arguments passed to validation events related to multiple rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRangeMovingEventArgs.#ctor(MindFusion.Spreadsheet.RowRange,System.Boolean)">
            <summary>
            Initializes a new instance of the RowRangeMovingEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeMovingEventArgs.Initial">
            <summary>
            Gets a value indicating whether this is the first time the event is raised.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeMovingEventArgs.Abort">
            <summary>
            Gets or sets a value indicating whether to terminate the current operation immediately.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeMovingEventArgs.Allow">
            <summary>
            Gets or sets a value indicating whether to allow the current operation.
            </summary>
            <remarks>
            Set this property to true to allow the user to complete the operation.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnRangeMovingEventArgs">
            <summary>
            Contains the arguments passed to validation events related to multiple columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRangeMovingEventArgs.#ctor(MindFusion.Spreadsheet.ColumnRange,System.Boolean)">
            <summary>
            Initializes a new instance of the ColumnRangeMovingEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeMovingEventArgs.Initial">
            <summary>
            Gets a value indicating whether this is the first time the event is raised.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeMovingEventArgs.Abort">
            <summary>
            Gets or sets a value indicating whether to terminate the current operation immediately.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeMovingEventArgs.Allow">
            <summary>
            Gets or sets a value indicating whether to allow the current operation.
            </summary>
            <remarks>
            Set this property to true to allow the user to complete the operation.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowRangeResizingEventArgs">
            <summary>
            Contains the arguments passed to validation events related to multiple rows.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowRangeResizingEventArgs.#ctor(MindFusion.Spreadsheet.RowRange,System.Boolean,MindFusion.Spreadsheet.Measure)">
            <summary>
            Initializes a new instance of the RowRangeResizingEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeResizingEventArgs.Initial">
            <summary>
            Gets a value indicating whether this is the first time the event is raised.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeResizingEventArgs.Abort">
            <summary>
            Gets or sets a value indicating whether to terminate the current operation immediately.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeResizingEventArgs.Allow">
            <summary>
            Gets or sets a value indicating whether to allow the current operation.
            </summary>
            <remarks>
            Set this property to true to allow the user to complete the operation.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowRangeResizingEventArgs.Height">
            <summary>
            Gets or sets the new row height.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnRangeResizingEventArgs">
            <summary>
            Contains the arguments passed to validation events related to multiple columns.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnRangeResizingEventArgs.#ctor(MindFusion.Spreadsheet.ColumnRange,System.Boolean,MindFusion.Spreadsheet.Measure)">
            <summary>
            Initializes a new instance of the ColumnRangeResizingEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeResizingEventArgs.Initial">
            <summary>
            Gets a value indicating whether this is the first time the event is raised.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeResizingEventArgs.Abort">
            <summary>
            Gets or sets a value indicating whether to terminate the current operation immediately.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeResizingEventArgs.Allow">
            <summary>
            Gets or sets a value indicating whether to allow the current operation.
            </summary>
            <remarks>
            Set this property to true to allow the user to complete the operation.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnRangeResizingEventArgs.Width">
            <summary>
            Gets or sets the new column width.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowsEventArgs">
            <summary>
            Contains the arguments passed to row-related events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowsEventArgs.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Object)">
            <summary>
            Initializes a new instance of the RowsEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowsEventArgs.Index">
            <summary>
            Gets the index where the rows were inserted.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowsEventArgs.Count">
            <summary>
            Gets the number of inserted or deleted rows.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowsEventArgs.OriginalAutoFilter">
            <summary>
            Gets the state of the worksheet autofilter before the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowsRemovedEventArgs">
            <summary>
            Contains the arguments passed to the RowsRemoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowsRemovedEventArgs.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.RowStorage},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{System.Int32,MindFusion.Spreadsheet.CellRange}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.List{MindFusion.Spreadsheet.CellAnnotation},System.Object)">
            <summary>
            Initializes a new instance of the RowsRemovedEventArgs class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowsMovedEventArgs">
            <summary>
            Contains the arguments passed to the RowMoved event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowsMovedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellStorage,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.InteractiveObject,System.Object}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.CellRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.List{MindFusion.Spreadsheet.Pair{MindFusion.Spreadsheet.NamedRange,MindFusion.Spreadsheet.CellRef}},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.PlainRegion},System.Object)">
            <summary>
            Initializes a new instance of the RowsMovedEventArgs class.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowMouseEventArgs">
            <summary>
            Contains the arguments passed to row-related mouse events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowMouseEventArgs.#ctor(MindFusion.Spreadsheet.Row,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the RowMouseEventArgs class.
            </summary>
            <param name="row">
            The related row.
            </param>
            <param name="button">
            The clicked mouse button.
            </param>
            <param name="x">
            The relative x-coordinate of the mouse.
            </param>
            <param name="y">
            The relative y-coordinate of the mouse.
            </param>
            <param name="clicks">
            The number of mouse clicks.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowMouseEventArgs.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowMouseEventArgs.X">
            <summary>
            Gets the relative x-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowMouseEventArgs.Y">
            <summary>
            Gets the relative y-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowMouseEventArgs.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IndexMouseEventArgs">
            <summary>
            Contains the arguments passed to mouse-related events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IndexMouseEventArgs.#ctor(System.Int32,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the IndexMouseEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IndexMouseEventArgs.Index">
            <summary>
            Gets the index of the related item.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IndexMouseEventArgs.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IndexMouseEventArgs.X">
            <summary>
            Gets the relative x-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.IndexMouseEventArgs.Y">
            <summary>
            Gets the relative y-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.IndexMouseEventArgs.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.GenericMouseEventArgs`1">
            <summary>
            Contains the arguments passed to mouse-related events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.GenericMouseEventArgs`1.#ctor(`0,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the GenericMouseEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GenericMouseEventArgs`1.Target">
            <summary>
            Gets the object related to the event.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GenericMouseEventArgs`1.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.GenericMouseEventArgs`1.X">
            <summary>
            Gets the relative x-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.GenericMouseEventArgs`1.Y">
            <summary>
            Gets the relative y-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.GenericMouseEventArgs`1.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellStorageEventArgs">
            <summary>
            Provides data for events related to individual cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellStorageEventArgs.#ctor(MindFusion.Spreadsheet.CellStorage)">
            <summary>
            Initializes a new instance of the CellStorageEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellStorageEventArgs.CellStorage">
            <summary>
            Gets the cell related to the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellEventArgs">
            <summary>
            Provides data for events related to individual cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellEventArgs.#ctor(MindFusion.Spreadsheet.Cell)">
            <summary>
            Initializes a new instance of the CellEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellEventArgs.Cell">
            <summary>
            Gets the cell related to the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellChangedEventArgs">
            <summary>
            Provides data for the CellChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellChangedEventArgs.#ctor(MindFusion.Spreadsheet.Cell,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the CellChangedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellChangedEventArgs.OldData">
            <summary>
            Gets the previous data in the modified cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellChangedEventArgs.NewData">
            <summary>
            Gets the new data in the modified cell.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectEventArgs">
            <summary>
            Provides data for events related to interactive objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectEventArgs.#ctor(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Initializes a new instance of the ObjectEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectEventArgs.Object">
            <summary>
            Gets the object for which the event was raised.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectValidationEventArgs">
            <summary>
            Contains the arguments passed to handlers of object validation events.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectValidationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the current operation.
            </summary>
            <remarks>
            Set this property to true to prevent the user from completing the operation.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectInteractionEventArgs">
            <summary>
            Provides data for events related to interactive objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteractionEventArgs.#ctor(MindFusion.Spreadsheet.InteractiveObject,System.Drawing.Point,MindFusion.Spreadsheet.AdjustmentHandles)">
            <summary>
            Initializes a new instance of the ObjectInteractionEventArgs class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteractionEventArgs.#ctor(MindFusion.Spreadsheet.InteractiveObject,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ObjectInteractionEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectInteractionEventArgs.MousePosition">
            <summary>
            Gets or sets the current mouse pointer position.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectInteractionEventArgs.MouseButton">
            <summary>
            Gets which mouse button has been pressed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectInteractionEventArgs.AdjustmentHandle">
            <summary>
            Gets or sets the adjustment handle being moved by the user.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs">
            <summary>
            Contains the arguments passed to handlers of object validation events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs.#ctor(MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Initializes a new instance of the ObjectInteractionValidationEventArgs class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs.#ctor(MindFusion.Spreadsheet.InteractiveObject,System.Drawing.Point,MindFusion.Spreadsheet.AdjustmentHandles)">
            <summary>
            Initializes a new instance of the ObjectInteractionValidationEventArgs class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs.CancelDrag">
            <summary>
            Cancels the modification of the object.
            </summary>
            <remarks>
            Calling this method immediately stops the operation.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectInteractionValidationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the current operation.
            </summary>
            <remarks>
            Set this property to true to prevent the user from completing the operation.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellValidationEventArgs">
            <summary>
            Provides data for validation events related to individual cells.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellValidationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the related operation.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellValidationEventArgs.NewData">
            <summary>
            Gets the new data of the cell.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellMouseEventArgs">
            <summary>
            Contains the arguments passed to cell-related mouse events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellMouseEventArgs.#ctor(MindFusion.Spreadsheet.Cell,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CellMouseEventArgs class.
            </summary>
            <param name="cell">
            The related cell.
            </param>
            <param name="button">
            The clicked mouse button.
            </param>
            <param name="x">
            The relative x-coordinate of the mouse.
            </param>
            <param name="y">
            The relative y-coordinate of the mouse.
            </param>
            <param name="clicks">
            The number of mouse clicks.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellMouseEventArgs.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellMouseEventArgs.X">
            <summary>
            Gets the relative x-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellMouseEventArgs.Y">
            <summary>
            Gets the relative y-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellMouseEventArgs.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectMouseEventArgs">
            <summary>
            Contains the arguments passed to object-related mouse events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectMouseEventArgs.#ctor(MindFusion.Spreadsheet.InteractiveObject,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectMouseEventArgs class.
            </summary>
            <param name="obj">
            The related object.
            </param>
            <param name="button">
            The clicked mouse button.
            </param>
            <param name="x">
            The relative x-coordinate of the mouse.
            </param>
            <param name="y">
            The relative y-coordinate of the mouse.
            </param>
            <param name="clicks">
            The number of mouse clicks.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectMouseEventArgs.Button">
            <summary>
            Gets the clicked mouse button.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectMouseEventArgs.X">
            <summary>
            Gets the relative x-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectMouseEventArgs.Y">
            <summary>
            Gets the relative y-coordinates of the mouse.
            </summary>
            <remarks>
            The origin of this coordinate depends on the specific event.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectMouseEventArgs.Clicks">
            <summary>
            Gets the number of mouse clicks.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellsEventArgs">
            <summary>
            Provides data for events related to multiple cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CellsEventArgs.#ctor(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            Initializes a new instance of the CellsEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CellsEventArgs.Cells">
            <summary>
            Gets a list with all cells related to the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellRangeEventArgs">
            <summary>
            Provides data to events related to a range of cells.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.WorksheetChangedEventArgs">
            <summary>
            Provides data for the WorksheetChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.WorksheetChangedEventArgs.#ctor(MindFusion.Spreadsheet.Worksheet,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the WorksheetChangedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.WorksheetChangedEventArgs.Worksheet">
            <summary>
            Gets the related worksheet.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectChangedEventArgs">
            <summary>
            Provides information for various property changed events.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectChangedEventArgs.#ctor(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the ObjectChangedEventArgs class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectChangedEventArgs.#ctor(System.Object,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the ObjectChangedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectChangedEventArgs.Source">
            <summary>
            Gets the object related to the event.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ObjectChangedEventArgs.Tag">
            <summary>
            Gets or sets an object associated with the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ColumnChangedEventArgs">
            <summary>
            Provides data for the ColumnChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ColumnChangedEventArgs.#ctor(MindFusion.Spreadsheet.Column,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the ColumnChangedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnChangedEventArgs.Worksheet">
            <summary>
            Gets the worksheet that is the source of the event.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ColumnChangedEventArgs.Column">
            <summary>
            Gets the column related to the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.RowChangedEventArgs">
            <summary>
            Provides data for the RowChanged event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.RowChangedEventArgs.#ctor(MindFusion.Spreadsheet.Row,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the RowChangedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowChangedEventArgs.Worksheet">
            <summary>
            Gets the worksheet that is the source of the event.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RowChangedEventArgs.Row">
            <summary>
            Gets the row related to the event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SerializeDataEventArgs">
            <summary>
            Provides data for the SerializeData and DeserializeData event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.SerializeDataEventArgs.#ctor(MindFusion.Spreadsheet.Cell,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Initializes a new instance of the SerializeDataEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeDataEventArgs.Data">
            <summary>
            Gets or sets the data being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeDataEventArgs.Representation">
            <summary>
            Gets or sets the string representation of the data 
            being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeDataEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
            <remarks>
            Always set this flag to true if you perform custom data serialization.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeDataEventArgs.Context">
            <summary>
            Gets the context object that enables you to write and read data.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SerializeTagEventArgs">
            <summary>
            Provides data for the SerializeTag and DeserializeTag event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.SerializeTagEventArgs.#ctor(MindFusion.Spreadsheet.Worksheet,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Initializes a new instance of the SerializeTagEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeTagEventArgs.Tag">
            <summary>
            Gets or sets the tag being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeTagEventArgs.Representation">
            <summary>
            Gets or sets the string representation of the data 
            being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeTagEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
            <remarks>
            Always set this flag to true if you perform custom data serialization.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeTagEventArgs.Context">
            <summary>
            Gets the context object that enables you to write and read data.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SerializeColumnTagEventArgs">
            <summary>
            Provides data for the SerializeColumnTag and DeserializeColumnTag event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.SerializeColumnTagEventArgs.#ctor(MindFusion.Spreadsheet.Column,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Initializes a new instance of the SerializeColumnTagEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeColumnTagEventArgs.Tag">
            <summary>
            Gets or sets the tag being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeColumnTagEventArgs.Representation">
            <summary>
            Gets or sets the string representation of the data 
            being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeColumnTagEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
            <remarks>
            Always set this flag to true if you perform custom data serialization.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeColumnTagEventArgs.Context">
            <summary>
            Gets the context object that enables you to write and read data.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SerializeRowTagEventArgs">
            <summary>
            Provides data for the SerializeRowTag and DeserializeRowTag event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.SerializeRowTagEventArgs.#ctor(MindFusion.Spreadsheet.Row,System.Object,System.Xml.Linq.XElement,MindFusion.Spreadsheet.XmlContext)">
            <summary>
            Initializes a new instance of the SerializeRowTagEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeRowTagEventArgs.Tag">
            <summary>
            Gets or sets the tag being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeRowTagEventArgs.Representation">
            <summary>
            Gets or sets the string representation of the data 
            being serialized/deserialized.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeRowTagEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
            <remarks>
            Always set this flag to true if you perform custom data serialization.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.SerializeRowTagEventArgs.Context">
            <summary>
            Gets the context object that enables you to write and read data.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ValidationFailedEventArgs">
            <summary>
            Provides data for the ValidationFailed event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ValidationFailedEventArgs.#ctor(System.String,MindFusion.Spreadsheet.Cell)">
            <summary>
            Initializes a new instance of the ValidationFailedEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ValidationFailedEventArgs.Worksheet">
            <summary>
            Gets the worksheet that is the source of the event.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ValidationFailedEventArgs.Data">
            <summary>
            Gets the input that failed to validate.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ValidationFailedEventArgs.Cell">
            <summary>
            Gets the edited cell.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ValidationFailedEventArgs.AcceptInput">
            <summary>
            Gets or sets a value indicating whether to accept the input.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.InplaceEditEventArgs">
            <summary>
            Contains the arguments passed to the InplaceEditStarted and
            InplaceEditEnded event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InplaceEditEventArgs.#ctor(MindFusion.Spreadsheet.IInplaceEditable,System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the InplaceEditEventArgs class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InplaceEditEventArgs.#ctor(MindFusion.Spreadsheet.IInplaceEditable,System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Initializes a new instance of the InplaceEditEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InplaceEditEventArgs.Item">
            <summary>
            Gets a reference to the item being edited.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InplaceEditEventArgs.EditControl">
            <summary>
            Gets or sets the control used to edit the item's text.
            </summary>
            <remarks>
            If a custom editor is specified and it does not implement the IInplaceEditor interface,
            the Text property will be used as the cell value upon successful edit.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.InplaceEditEventArgs.Accepted">
            <summary>
            Gets a value indicating whether the in-place edit changes were accepted.
            This value is relevant only for the InplaceEditEnded event.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.InplaceEditValidationEventArgs">
            <summary>
            Contains the arguments passed to the InplaceEditStarting and
            InplaceEditEnding event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InplaceEditValidationEventArgs.#ctor(MindFusion.Spreadsheet.IInplaceEditable,System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the InplaceEditValidationEventArgs class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.InplaceEditValidationEventArgs.#ctor(MindFusion.Spreadsheet.IInplaceEditable,System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Initializes a new instance of the InplaceEditValidationEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.InplaceEditValidationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the current operation.
            </summary>
            <remarks>
            Set this property to true to prevent the user from completing the operation.
            If the current operation is starting an in-place editing, the in-place
            editing does not happen at all. If the current operation is ending an in-place
            editing, the editing does not end.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.OutlineEventArgs">
            <summary>
            Contains the arguments passed to the RowOutlineLevelToggled and
            ColumnOutlineLevelToggled event handlers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.OutlineEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the OutlineEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.OutlineEventArgs.Level">
            <summary>
            Gets the outline level that was toggled.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DrawColumnEventArgs">
            <summary>
            Provides data for the DrawColumn event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DrawColumnEventArgs.#ctor(MindFusion.Spreadsheet.Column,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the DrawColumnEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DrawColumnEventArgs.Graphics">
            <summary>
            Gets the Graphics instance that can be used to perform custom drawing.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DrawColumnEventArgs.HeaderBounds">
            <summary>
            Gets the bounding rectangle of the column header.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DrawRowEventArgs">
            <summary>
            Provides data for the DrawRow event.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DrawRowEventArgs.#ctor(MindFusion.Spreadsheet.Row,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the DrawRowEventArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DrawRowEventArgs.Graphics">
            <summary>
            Gets the Graphics instance that can be used to perform custom drawing.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DrawRowEventArgs.HeaderBounds">
            <summary>
            Gets the bounding rectangle of the row header.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.MeasureUnit">
            <summary>
            Specifies units of measure.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.#ctor(System.Int32,System.String,MindFusion.Spreadsheet.MeasureUnitType,System.Double,System.Int32)">
            <summary>
            Initializes one of the built-in units of measure.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.#ctor(System.Int32,System.String,MindFusion.Spreadsheet.MeasureUnitType,System.Double,System.Int32,MindFusion.Spreadsheet.IMeasureUnitConverter)">
            <summary>
            Initializes one of the built-in units of measure.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.#ctor(System.String,MindFusion.Spreadsheet.MeasureUnit,System.Double)">
            <summary>
            Initializes a new instance of the MeasureUnit class with
            the specified unit of measure as a base.
            </summary>
            <param name="name">
            The name of the new unit.
            </param>
            <param name="baseUnit">
            The base of the new unit.
            </param>
            <param name="scale">
            The scale of the new unit, relatively to the base.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.#ctor(System.String,MindFusion.Spreadsheet.MeasureUnit,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the MeasureUnit class with
            the specified unit of measure as a base.
            </summary>
            <param name="name">
            The name of the new unit.
            </param>
            <param name="baseUnit">
            The base of the new unit.
            </param>
            <param name="scale">
            The scale of the new unit, relatively to the base.
            </param>
            <param name="standardDivisions">
            The number of divisions of the new unit.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the MeasureUnit class with
            the specified amount.
            </summary>
            <param name="name">
            The name of the new unit.
            </param>
            <param name="unitsPerInch">
            The amount of the new unit that is equal to one inch.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.#ctor(System.String,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the MeasureUnit class with
            the specified amount.
            </summary>
            <param name="name">
            The name of the new unit.
            </param>
            <param name="unitsPerInch">
            The amount of the new unit that is equal to one inch.
            </param>
            <param name="standardDivisions">
            The number of divisions of the new unit.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>
            The name of the unit.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
            <returns>
            A hash code for the current unit.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
            <param name="obj">
            The object to compare with the current unit.
            </param>
            <returns>
            true if the specified object is the same as or is equal to the current unit;
            otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.Equals(MindFusion.Spreadsheet.MeasureUnit)">
            <summary>
            Determines whether the specified measure unit is equal to the current measure unit.
            </summary>
            <param name="unit">
            The object to compare to this measure unit.
            </param>
            <returns>
            true if the specified measure unit is equal to this object; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.Convert(System.Double,MindFusion.Spreadsheet.MeasureUnit,System.Object)">
            <summary>
            Converts the specified value from this unit to the specified unit.
            </summary>
            <param name="value">
            The value to convert, expressed in the current measure unit.
            </param>
            <param name="targetUnit">
            The target measure unit.
            </param>
            <param name="context">
            A parameter that is used when converting from logical units (such as
            inches and millimeters) to device units (such as pixels) or special units.
            This can be either Graphics, IGraphics, or IResolution.
            </param>
            <returns>
            The converted value.
            </returns>
            <remarks>
            If the target represents logical unit (such as millimeter, inch, point) or
            a unit derived from a logical unit, and the current unit is not logical
            (for example pixel), the third parameter is required to perform the conversion.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.Convert(System.Double,MindFusion.Spreadsheet.MeasureUnit,System.Object,MindFusion.Spreadsheet.Axis)">
            <summary>
            Converts the specified value from this unit to the specified unit.
            </summary>
            <param name="value">
            The value to convert, expressed in the current measure unit.
            </param>
            <param name="targetUnit">
            The target measure unit.
            </param>
            <param name="context">
            A parameter that is used when converting from logical units (such as
            inches and millimeters) to device units (such as pixels) or special units.
            This can be either Graphics, IGraphics, or IResolution.
            </param>
            <param name="axis">
            One of the coordinate axes.
            </param>
            <returns>
            The converted value.
            </returns>
            <remarks>
            If the target represents logical unit (such as millimeter, inch, point) or
            a unit derived from a logical unit, and the current unit is not logical
            (for example pixel), the third parameter is required to perform the conversion.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.Convert(System.Drawing.PointF,MindFusion.Spreadsheet.MeasureUnit,System.Object)">
            <summary>
            Converts the specified point from this unit to the specified unit.
            </summary>
            <param name="p">
            The point to convert, expressed in the current measure unit.
            </param>
            <param name="targetUnit">
            The target measure unit.
            </param>
            <param name="context">
            A parameter that is used when converting from logical units (such as
            inches and millimeters) to device units (such as pixels) or special units.
            This can be either Graphics, IGraphics, or IResolution.
            </param>
            <returns>
            The converted point.
            </returns>
            <remarks>
            If the target represents logical unit (such as millimeter, inch, point) or
            a unit derived from a logical unit, and the current unit is not logical
            (for example pixel), the third parameter is required to perform the
            conversion. If both units are of the same generic type, graphics is ignored.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.Convert(System.Drawing.RectangleF,MindFusion.Spreadsheet.MeasureUnit,System.Object)">
            <summary>
            Converts the specified rectangle from this unit to the specified unit.
            </summary>
            <param name="r">
            The rectangle to convert, expressed in the current measure unit.
            </param>
            <param name="targetUnit">
            The target measure unit.
            </param>
            <param name="context">
            A parameter that is used when converting from logical units (such as
            inches and millimeters) to device units (such as pixels) or special units.
            This can be either Graphics, IGraphics, or IResolution.
            </param>
            <returns>
            The converted rectangle.
            </returns>
            <remarks>
            If the target represents logical unit (such as mm, inch, point) or
            a unit derived from a logical unit, and the current unit is not logical
            (for example pixel), the third parameter is required to perform the
            conversion. If both units are of the same generic type, graphics is ignored.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.FromId(System.Int32)">
            <summary>
            Returns a MeasureUnit from its integer identifier.
            </summary>
            <param name="id">
            The identifier of one of the built-in measure units.
            </param>
            <returns>
            The built-in MeasureUnit corresponding to the specified identifier.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.MeasureUnit.FromGraphicsUnit(System.Drawing.GraphicsUnit)">
            <summary>
            Returns the measure unit corresponding to the specified graphics unit.
            </summary>
            <param name="unit">
            One of the GraphicsUnit values.
            </param>
            <returns>
            The built-in MeasureUnit corresponding to the specified graphics unit.
            If unit is World, this method returns null. If unit is Display, this
            method returns Pixel.
            </returns>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnit.Millimeter">
            <summary>
            Specifies millimeters as the unit of measure.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnit.Centimeter">
            <summary>
            Specifies centimeters as the unit of measure.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnit.Inch">
            <summary>
            Specifies inches as the unit of measure.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnit.Point">
            <summary>
            Specifies printer's points (1/72 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnit.Pixel">
            <summary>
            Specifies device pixels as the unit of measure.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnit.Document">
            <summary>
            Specifies document units (1/300 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnit.WpfPoint">
            <summary>
            Specifies device-independent pixels (1/96 inch) as the unit of measure.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.MeasureUnit.DefaultUnits">
            <summary>
            Gets a collection with all built-in measure units.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.MeasureUnit.Id">
            <summary>
            Gets the unit identifier.
            </summary>
            <remarks>
            This property returns -1 for custom MeasureUnit objects.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.MeasureUnit.Name">
            <summary>
            Gets the name of the unit.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.MeasureUnit.Type">
            <summary>
            Gets the generic type of the unit.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.MeasureUnit.Amount">
            <summary>
            Gets the unit's amount.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.MeasureUnit.StandardDivisions">
            <summary>
            Gets the number of subunits that measures of this unit type are commonly divided to.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.MeasureUnitType">
            <summary>
            Specifies the type of a unit of measure.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnitType.Logical">
            <summary>
            Indicates logical unit of measure, expressed as units-per-inch.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnitType.Device">
            <summary>
            Indicates device-dependent unit of measure, expressed in device pixels.
            </summary>
            <remarks>
            Converting from/to device units requires as additional information
            the DPI of the target device.
            </remarks>
        </member>
        <member name="F:MindFusion.Spreadsheet.MeasureUnitType.Special">
            <summary>
            Indicates special unit of measure.
            </summary>
            <remarks>
            Converting from/to special units is performed through a user-supplied delegate.
            </remarks>
        </member>
        <member name="T:MindFusion.Spreadsheet.Axis">
            <summary>
            Specifies a coordinate axis.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Axis.X">
            <summary>
            Indicates the x-coordinate axis.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Axis.Y">
            <summary>
            Indicates the y-coordinate axis.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IMeasureUnitConverter">
            <summary>
            Provides means to convert between cross-type measure units.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.PixelConverter">
            <summary>
            Represents a converter that can transform pixel values from/to
            logical units.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.MeasureUnitConverter">
            <summary>
            Represents a TypeConverter for MeasureUnit objects.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.EvaluationContext">
            <summary>
            Provides context for expression evaluation, including support for
            identifier and function evaluation.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext">
            <summary>
            Provides context for expression evaluators.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.GetCoreEvaluator">
            <summary>
            Gets the core evaluator. The core evaluator can be used to invoke
            any of the predefined functions or identifiers.
            </summary>
            <returns>
            An IExpressionEvaluator object identifying the core evaluator.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.GetError(MindFusion.Spreadsheet.Expressions.ErrorType,System.String)">
            <summary>
            Returns an error object of the specified type.
            </summary>
            <param name="errorType">
            One of the ErrorType constants identifying the type of the error.
            </param>
            <param name="message">
            The message associated with the error.
            </param>
            <returns>
            An error object of the specified type.
            </returns>
            <remarks>
            This method can be used when a custom function needs to return an error.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.ToValue(System.Object)">
            <summary>
            Attempts to evaluate the specified object.
            </summary>
            <param name="value">
            The object to evaluate.
            </param>
            <returns>
            The value of the object, or null, if the object cannot be evaluated.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.ToDouble(System.Object)">
            <summary>
            Attempts to convert the specified value to a double.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A double value corresponding to the specified value, or null,
            if value cannot be represented as double.
            </returns>
            <remarks>
            This method is usually used when trying to interpret a parameter passed
            to a custom function.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.ToString(System.Object)">
            <summary>
            Attempts to convert the specified value to a string.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A string value corresponding to the specified value, or null,
            if value cannot be represented as string.
            </returns>
            <remarks>
            This method is usually used when trying to interpret a parameter passed
            to a custom function.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.ToBool(System.Object)">
            <summary>
            Attempts to convert the specified value to a boolean.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A boolean value corresponding to the specified value, or null,
            if value cannot be represented as boolean.
            </returns>
            <remarks>
            This method is usually used when trying to interpret a parameter passed
            to a custom function.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.ToDateTime(System.Object)">
            <summary>
            Attempts to convert the specified value to a DateTime.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A DateTime value corresponding to the specified value, or null,
            if value cannot be represented as DateTime.
            </returns>
            <remarks>
            This method is usually used when trying to interpret a parameter passed
            to a custom function.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.ToTimeSpan(System.Object)">
            <summary>
            Attempts to convert the specified value to a TimeSpan.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A TimeSpan value corresponding to the specified value, or null,
            if value cannot be represented as TimeSpan.
            </returns>
            <remarks>
            This method is usually used when trying to interpret a parameter passed
            to a custom function.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext.Workbook">
            <summary>
            Gets a reference to the parent workbook.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.IExpressionEvaluator">
            <summary>
            Provides evaluation for functions and identifiers inside expressions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluator.EvaluateIdentifier(MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext,System.String)">
            <summary>
            Evaluates the identifier with the specified name.
            </summary>
            <param name="context">
            A helper object that can be used to obtain error values, invoke
            predefined functions, and so on.
            </param>
            <param name="identifier">
            The name of the identifier.
            </param>
            <returns>
            A bool, double, string, DateTime, or TimeSpan value, or an error received
            by calling the IExpressionEvaluatorContext.GetError method. Any other value
            will be interpreted as the identifier not being evaluated.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IExpressionEvaluator.InvokeFunction(MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext,System.String,System.Collections.IList)">
            <summary>
            Invokes the function with the specified name and parameters.
            </summary>
            <param name="context">
            A helper object that can be used to obtain error values,
            invoke predefined functions, and so on.
            </param>
            <param name="name">
            The name of the function.
            </param>
            <param name="parameters">
            The function parameters.
            </param>
            <returns>
            A bool, double, string, DateTime, or TimeSpan value, or an error received
            by calling the IExpressionEvaluatorContext.GetError method. Any other value
            will be interpreted as the function not being invoked.
            </returns>
            <remarks>
            To interpret a parameter as a CLR value, pass the parameter to one of
            the following methods of the supplied IExpressionEvaluatorContext object:
            ToDouble, ToString, ToBool, ToDateTime, or ToTimeSpan. The context will attempt
            to convert the parameter to the desired type and returns null if unsuccessful.
            To check if a parameter is an error, call the ISERROR function of the core
            evaluator.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.AddDynamicDependency(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Registers a dynamic dependency.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.EnterInvariant">
            <summary>
            Enters an invariant block. Dynamic dependencies
            registered inside this block are discarded.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.LeaveInvariant">
            <summary>
            Leaves a previously entered invariant block.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.EvaluateIdentifier(MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext,System.String)">
            <summary>
            IExpressionEvaluator.EvaluateIdentifier implementation.
            </summary>
            <remarks>
            First, attempts to evaluate the identifier through the core evaluator.
            If unsuccessful, delegates the evaluation to the extended evaluator, if any.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.InvokeFunction(MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext,System.String,System.Collections.IList)">
            <summary>
            IExpressionEvaluator.InvokeFunction implementation.
            </summary>
            <remarks>
            First, attempts to invoke the function through the core evaluator.
            If unsuccessful, delegates the invocation to the extended evaluator, if any.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.Evaluate(System.Object)">
            <summary>
            Evaluates the specified object. If the object is a ExpressionTreeNode,
            its Evaluate method is called. If the object is not a Base type, it is
            marshalled to its equivalent Base value. Otherwise, the object is returned as is.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.EvaluateToScalar(System.Object)">
            <summary>
            Evaluates the specified value to a scalar value in the current context.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.EvaluateToScalarValue(System.Object)">
            <summary>
            Evaluates the specified value to a scalar value. If the value represents
            a Reference object, returns the value of the referenced cell. In contrast,
            EvaluateToScalar would not dereference.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.EvaluateToCriterion(System.Object)">
            <summary>
            Evaluates the specified value to a Criterion object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.EvaluationContext.EvaluateToType``1(System.Object)">
            <summary>
            Evaluates the specified value as the specified type in the current context.
            If the value is not representable as type T, returns null.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CompositeCommand">
            <summary>
            Represents a set of Command instances as a single operation.
            Undoing or redoing the composite action, respectively undoes or
            redoes all its constituent subactions at the same time.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CompositeCommand.#ctor(MindFusion.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the CompositeCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
            <remarks>
            Composite commands cannot be instantiated directly by clients.
            They must be created through Workbook.StartCompositeOperation.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.CompositeCommand.Execute">
            <summary>
            DisposableCommand.Execute override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CompositeCommand.Undo">
            <summary>
            Command.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CompositeCommand.Redo">
            <summary>
            Command.Redo override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CompositeCommand.Commands">
            <summary>
            Gets a list containing the child Command objects.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ChangeWorksheetCommand">
            <summary>
            Represents a command that can track and undo changes of a Worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ChangeWorksheetCommand.#ctor(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the ChangeWorksheetCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
            <param name="worksheet">
            The Worksheet tracked by this command.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.MixedStyle.HasConditionalFormats(MindFusion.Spreadsheet.Style[])">
            <summary>
            Checks if at least one of the specified styles has conditional formats.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MixedStyle.HasConditionalFormats">
            <summary>
            Checks if this style contains conditional formats.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CsvExporter">
            <summary>
            CsvExporter lets you export Worksheet data into .csv file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CsvExporter.Export(MindFusion.Spreadsheet.Worksheet,System.String)">
            <summary>
            Exports the specified worksheet to the specified CSV file.
            </summary>
            <param name="worksheet">The worksheet to export the data from.</param>
            <param name="filePath">A string specifying the path to the .csv file.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.CsvExporter.Export(MindFusion.Spreadsheet.CellRange,System.IO.Stream)">
            <summary>
            Generates a string in an CSV format and writes it in the specified stream.
            </summary>
            <param name="range">
            The range of cells to export.
            </param>
            <param name="stream">
            The stream to write the result to.
            </param>
        </member>
        <member name="P:MindFusion.Spreadsheet.CsvExporter.Separator">
            <summary>
            Gets or sets the character used as a separator.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CsvExporter.Quote">
            <summary>
            Gets or sets the character used as a quote.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CsvExporter.Encoding">
            <summary>
            Gets or sets the encoding used.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CsvExporter.QuoteStrings">
            <summary>
            Gets or sets a value indicating whether to always quote strings.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ConditionalFormatType">
            <summary>
            Specifies the type of a conditional format.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ConditionalFormatType.CellValue">
            <summary>
            Indicates that the condition is based on the value of the cell.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ConditionalFormatType.Expression">
            <summary>
            Indicates that the condition depends on the value of an expression.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IConditionalFormat">
            <summary>
            Represents conditional format associated with a range of cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.IConditionalFormat.Reset">
            <summary>
            Resets the format to the default.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IConditionalFormat.Type">
            <summary>
            Gets or sets a value indicating whether the conditional format
            is based on the value of the cell or on the result of an expression.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IConditionalFormat.Operator">
            <summary>
            Gets or sets the comparison operator, for conditional format
            based on the cell value.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IConditionalFormat.First">
            <summary>
            Gets or sets the first value of the condition.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IConditionalFormat.Second">
            <summary>
            Gets or sets the second value of the condition.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IConditionalFormat.Style">
            <summary>
            Gets the style to apply to the cells if the condition is met.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ConditionalFormat.Check(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.Cell,System.Object)">
            <summary>
            Checks whether the specified cell value satisfies this condition.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ConditionalFormat.FirstInvariant">
            <summary>
            Gets or sets First in a culture-invariant manner.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ConditionalFormat.SecondInvariant">
            <summary>
            Gets or sets Second in a culture-invariant manner.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ConditionalFormatCollection.#ctor(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IStyle)">
            <summary>
            Initializes a new instance of the ConditionalFormatCollection class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ConditionalFormatCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An IEnumerator object.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.SparseListStorage`1">
            <summary>
            An IListStorage&lt;T&gt; implementation that uses a dictionary for data storage.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IListStorage`1">
            <summary>
            Represents a list of data.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IListStorage`1.Item(System.Int32)">
            <summary>
            Gets or sets the data at the specified location in the list.
            </summary>
            <param name="index">
            The zero-based index of the data to get or set.
            </param>
            <returns>
            The data at the specified location in the list.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.IListStorage`1.Count">
            <summary>
            Gets the total number of items in the list.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.PdfExporter">
            <summary>
            Exports worksheets as PDF files.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.PdfExporter.#ctor">
            <summary>
            Initializes a new instance of the PdfExporter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.PdfExporter.Export(MindFusion.Spreadsheet.Worksheet,System.String)">
            <summary>
            Exports the specified worksheet as a PDF file.
            </summary>
            <param name="worksheet">
            The worksheet to export.
            </param>
            <param name="filePath">
            The name of the PDF file.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.PdfExporter.GetPageCount">
            <summary>
            Gets the number of pages created by the most recent call to the Export method.
            </summary>
            <returns>
            The number of pages in the last exported PDF, or 0.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.PdfExporter.Margins">
            <summary>
            Gets or sets the margins for the PDF pages.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.PdfExporter.Scale">
            <summary>
            Gets or sets the scale of the PDF output relatively
            to the original on-screen size of the spreadsheet.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.PdfExporter.EnableGridLines">
            <summary>
            Gets or sets a value indicating whether to export the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.PdfExporter.MaxPages">
            <summary>
            Gets or sets the maximum number of pages to export, or 0, to export all pages.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.PdfExporter.PageOrientation">
            <summary>
            Gets or sets the orientation of the exported pages.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ObjectInteraction">
            <summary>
            This class is used when the user interacts with worksheet objects.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteraction.#ctor(MindFusion.Spreadsheet.GridView,MindFusion.Spreadsheet.InteractiveObject,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectInteraction class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteraction.OnMouseDown(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Interaction.OnMouseDown override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteraction.OnMouseMove(System.Drawing.Point)">
            <summary>
            Interaction.OnMouseMove override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteraction.OnMouseUp(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Interaction.OnMouseUp override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ObjectInteraction.CancelDrag">
            <summary>
            Interaction.CancelDrag override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.FormattedText">
            <summary>
            Represents a sequence of text fragments with different formatting (font, size, color).
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormattedText.#ctor">
            <summary>
            Initializes a new instance of the FormattedText class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormattedText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormattedText class from the
            specified markup text.
            </summary>
            <param name="text">
            A markup text specifying the formatted text. The markup can contain
            the following tags: &lt;fontname="value"&gt;, &lt;fontsize="value"&gt;,
            &lt;b&gt;, &lt;i&gt;, &lt;u&gt;, &lt;s&gt;, &lt;color="#rrggbb"&gt;.
            The font size must be specified as culture invariant.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormattedText.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>
            A string representing the raw text of this object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.FormattedText.NormalizeText(System.String)">
            <summary>
            Replaces HTML-specific character escapes in the specified text,
            such as &amp;amp;, &amp;lt; and &amp;gt; with their counterparts -
            &amp;, &lt; and &gt; respectively.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FormattedText.regex">
            <summary>
            Regular expression recognizer object used
            internally in the parsing process.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.FormattedText.Runs">
            <summary>
            Gets a list with the text fragments of this object.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Run">
            <summary>
            Represents a fragment of text with uniform formatting in a FormattedText object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Run.#ctor">
            <summary>
            Initializes a new instance of the Run class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Run.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>
            A string representing the raw text of this object.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Run.EqualFormat(MindFusion.Spreadsheet.Run)">
            <summary>
            Determines whether the formatting of this run is equal to
            the formatting of the specified run.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.Text">
            <summary>
            Gets or sets the text of the run.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.FontName">
            <summary>
            Gets or sets the font name of the run, or null,
            if the run should use the default font.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.FontSize">
            <summary>
            Gets or sets the font size of the run, or null,
            if the run should use the default font size.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.FontBold">
            <summary>
            Gets or sets the font weight of the run, or null,
            if the run should use the default font weight.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.FontItalic">
            <summary>
            Gets or sets the font italic style of the run, or null,
            if the run should use the default font italic style.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.FontUnderlined">
            <summary>
            Gets or sets the font underlined style of the run, or null,
            if the run should use the default font underlined style.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.FontStrikeout">
            <summary>
            Gets or sets the font strikeout style of the run, or null,
            if the run should use the default font strikeout style.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.Superscript">
            <summary>
            Gets or sets a value indicating whether the run represents a
            superscript text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.Subscript">
            <summary>
            Gets or sets a value indicating whether the run represents a
            subscript text.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Run.Color">
            <summary>
            Gets or sets the text color of the run, or null,
            if the run should use the default text color.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.IInformationProvider">
            <summary>
            Provides function information, such as summary, which can be displayed in the user interface.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IInformationProvider.GetFunctions">
            <summary>
            Gets a list with the names of all available functions.
            </summary>
            <returns>
            An enumerable of the function names.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IInformationProvider.GetFunctionSummary(System.String)">
            <summary>
            Gets a summary for the function with the specified name.
            </summary>
            <param name="name">
            The name of the function.
            </param>
            <returns>
            A string representing the function description.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.IInformationProvider.GetFunctionInformation(System.String)">
            <summary>
            Gets an object containing information about the function signature.
            </summary>
            <param name="name">
            The name of the function.
            </param>
            <returns>
            An object containing the function signature.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.CoreInformationProvider">
            <summary>
            Provides information about the core functions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.XmlInformationProvider">
            <summary>
            Provides function information from an XML file.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.XmlInformationProvider.Create(System.Xml.Linq.XDocument)">
            <summary>
            Creates a XmlInformationProvider instance from the specified XDocument object.
            </summary>
            <param name="doc">
            A XDocument that contains the function information.
            </param>
            <returns>
            An instance of the XmlInformationProvider class.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.XmlInformationProvider.GetFunctions">
            <summary>
            IInformationProvider.GetFunctions implementation.
            </summary>
            <returns>
            An enumerable of the function names.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.XmlInformationProvider.GetFunctionSummary(System.String)">
            <summary>
            IInformationProvider.GetFunctionSummary implementation.
            </summary>
            <param name="name">
            The name of the function.
            </param>
            <returns>
            A string representing the function description.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.XmlInformationProvider.GetFunctionInformation(System.String)">
            <summary>
            IInformationProvider.GetFunctionInformation implementation.
            </summary>
            <param name="name">
            The name of the function.
            </param>
            <returns>
            An object containing the function signature.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.FunctionInformation">
            <summary>
            Provides function information, which can be displayed in the user interface.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ParameterInformation">
            <summary>
            Provides parameter information, which can be displayed in the user interface.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CellAnnotationToolTip">
            <summary>
            Represents a CellAnnotation in tooltip mode, e.g. ShowAlways is set to false.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.XmlContext">
            <summary>
            Contains methods that help serializing and deserializing
            complex objects to and from XML documents.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.#ctor(MindFusion.Spreadsheet.Workbook,System.Xml.Linq.XDocument,System.Int32)">
            <summary>
            Initializes a new instance of the XmlContext class.
            </summary>
            <param name="workbook">
            The Workbook that will be serialized or deserialized.
            </param>
            <param name="document">
            The associated XDocument.
            </param>
            <param name="version">
            The file version.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.SaveWorksheet(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Saves the specified worksheet to the specified XML element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.LoadWorksheet(System.Xml.Linq.XElement)">
            <summary>
            Reads a worksheet from the specified XML element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadStyle(System.Xml.Linq.XName,System.Xml.Linq.XElement,MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Reads a style from the element with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadStyleContent(System.Xml.Linq.XElement,MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IStyle)">
            <summary>
            Reads the content of the specified Style object from the specified element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadValidation(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IStyle,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a Validation object from the specified element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadConditionalFormats(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.IStyle,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a ConditionalFormat object from the specified element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadNamedRanges(System.Xml.Linq.XElement)">
            <summary>
            Reads the named ranges of the specified workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadMergedCells(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads the merged cells of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadColumns(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads the columns of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadHyperlinks(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads the hyperlinks of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadCellData(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads the cells data of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadDrawing(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads the drawing of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadAutoFilter(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads the autofilter of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadInteractiveObject(MindFusion.Spreadsheet.InteractiveObject,System.Xml.Linq.XElement)">
            <summary>
            Reads a InteractiveObject object from the specified element.
            </summary>
            <param name="obj">
            The object to read.
            </param>
            <param name="element">
            An instance of the XElement class that specifies the element to read.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadPicture(MindFusion.Spreadsheet.Picture,System.Xml.Linq.XElement)">
            <summary>
            Reads a Picture object from the specified element.
            </summary>
            <param name="picture">
            The picture to read.
            </param>
            <param name="element">
            An instance of the XElement class that specifies the element to read.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadChart(MindFusion.Spreadsheet.Charts.Chart,System.Xml.Linq.XElement)">
            <summary>
            Reads a Chart object from the specified element.
            </summary>
            <param name="chart">
            The chart to read.
            </param>
            <param name="element">
            An instance of the XElement class that specifies the element to read.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadAnnotation(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads a CellAnnotation object from the specified element.
            </summary>
            <param name="worksheet">
            The worksheet to read from.
            </param>
            <param name="element">
            An instance of the XElement class that specifies the element to read.
            </param>
            <returns>The CellAnnotation read; null if reading has failed.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadAxisSettings(MindFusion.Spreadsheet.Charts.AxisSettings,System.Xml.Linq.XElement)">
            <summary>
            Reads a AxisSettings object from the specified element.
            </summary>
            <param name="settings">
            The AxisSettings to read.
            </param>
            <param name="element">
            An instance of the XElement class that specifies the element to read.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadData(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellStorage,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a System.Object from the element with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadBrushes(System.Xml.Linq.XElement)">
            <summary>
            Reads brushes.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadColumnStyles(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads column styles.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadRowStyles(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads row styles.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadStyles(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Reads styles.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadBrush(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a MindFusion.Drawing.Brush object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadBrush(System.Xml.Linq.XName,System.Xml.Linq.XElement,MindFusion.Drawing.Brush)">
            <summary>
            Reads a MindFusion.Drawing.Brush object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadColor(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a Color value from the element with the specified name.
            </summary>
            <param name="elementName">
            A XName object that identifies the element to read.
            </param>
            <param name="parentElement">
            An instance of the XElement class that specifies the parent element.
            </param>
            <returns>The Color read; Color.Black if reading has failed.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadRectangle(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a Rectangle value from the element with the specified name.
            </summary>
            <param name="elementName">
            A XName object that identifies the element to read.
            </param>
            <param name="parentElement">
            An instance of the XElement class that specifies the parent element.
            </param>
            <returns>The Rectangle read; Rectangle.Empty if reading has failed.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadMeasure(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a Measure value from the element with the specified name.
            </summary>
            <param name="elementName">
            A XName object that identifies the element to read.
            </param>
            <param name="parentElement">
            An instance of the XElement class that specifies the parent element.
            </param>
            <returns>The Measure read; Empty Measure if reading has failed.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadEnum(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads an enumeration object from the element with the specified name.
            </summary>
            <param name="elementName">
            A XName object that identifies the element to read.</param>
            <param name="parentElement">
            An instance of the XElement class that specifies the parent element.
            </param>
            <returns>The enumeration object read; 0 if reading has failed.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadString(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a string value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadString(System.Xml.Linq.XName,System.Xml.Linq.XElement,System.String)">
            <summary>
            Reads a string value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadBool(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a boolean value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadBool(System.Xml.Linq.XName,System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Reads a boolean value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadInt(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads an integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadInt(System.Xml.Linq.XName,System.Xml.Linq.XElement,System.Int32)">
            <summary>
            Reads an integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadShort(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadShort(System.Xml.Linq.XName,System.Xml.Linq.XElement,System.Int16)">
            <summary>
            Reads a short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadLong(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadByte(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a byte value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadSByte(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a 8-bit signed integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadChar(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a char value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadFloat(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a float value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadFloat(System.Xml.Linq.XName,System.Xml.Linq.XElement,System.Single)">
            <summary>
            Reads a float value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadDouble(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a double value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadDecimal(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a decimal value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadUInt(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads an unsigned integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadUShort(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads an unsigned short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadULong(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads an unsigned long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadFloatArray(System.Xml.Linq.XName,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a float array with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadPointF(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a PointF object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadPointF(System.Xml.Linq.XElement)">
            <summary>
            Reads a PointF object from the specified element.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ToPointF(System.String)">
            <summary>
            Converts the specified string to a Point object.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadColorArray(System.Xml.Linq.XName,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a color array with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadImage(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads an Image object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadImages(System.Xml.Linq.XElement)">
            <summary>
            Reads all images.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadStream(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads a stream with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadObject(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads an object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadTag(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads the tag for the specified worksheet.
            </summary>
            <remarks>
            Tags are read similarly to arbitrary objects except
            that the client is given a chance
            to perform custom deserialization through event handling.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadColumnTag(MindFusion.Spreadsheet.Column,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads the tag for the specified column.
            </summary>
            <remarks>
            Tags are read similarly to arbitrary objects except
            that the client is given a chance
            to perform custom deserialization through event handling.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.ReadRowTag(MindFusion.Spreadsheet.Row,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Reads the tag for the specified row.
            </summary>
            <remarks>
            Tags are read similarly to arbitrary objects except
            that the client is given a chance
            to perform custom deserialization through event handling.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteStyle(MindFusion.Spreadsheet.IStyle,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified style to the underlying stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteValidation(MindFusion.Spreadsheet.IStyle,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified Validation object as an XElement with the specified name and the specified parent.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteConditionalFormats(MindFusion.Spreadsheet.IStyle,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified ConditionalFormat object as an XElement with the specified name and the specified parent.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteColumnStyles(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteRowStyles(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteStyles(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the styles of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteMergedCells(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the merged cells of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteNamedRanges(System.Xml.Linq.XElement)">
            <summary>
            Writes the named ranges of the underlying workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteColumns(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the columns of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteCellData(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the cells of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteHyperlinks(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the hyperlinks of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteDrawing(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the drawing of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteAutoFilter(MindFusion.Spreadsheet.Worksheet,System.Xml.Linq.XElement)">
            <summary>
            Writes the autofilter of the specified worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteInteractiveObject(System.Xml.Linq.XElement,MindFusion.Spreadsheet.InteractiveObject)">
            <summary>
            Writes the specified InteractiveObject object as an XElement.
            </summary>
            <param name="element">The XElement to write to.</param>
            <param name="obj">The InteractiveObject object to write.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WritePicture(System.Xml.Linq.XElement,MindFusion.Spreadsheet.Picture)">
            <summary>
            Writes the specified Picture object as an XElement.
            </summary>
            <param name="element">The XElement to write to.</param>
            <param name="picture">The Picture object to write.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteChart(System.Xml.Linq.XElement,MindFusion.Spreadsheet.Charts.Chart)">
            <summary>
            Writes the specified Chart object as an XElement.
            </summary>
            <param name="element">The XElement to write to.</param>
            <param name="chart">The Chart object to write.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteAnnotation(System.Xml.Linq.XElement,MindFusion.Spreadsheet.CellAnnotation)">
            <summary>
            Writes the specified CellAnnotation object as an XElement.
            </summary>
            <param name="element">The XElement to write to.</param>
            <param name="annotation">The CellAnnotation object to write.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteAxisSettings(System.Xml.Linq.XElement,MindFusion.Spreadsheet.Charts.AxisSettings)">
            <summary>
            Writes the specified AxisSettings object as an XElement.
            </summary>
            <param name="element">The XElement to write to.</param>
            <param name="settings">The AxisSettings object to write.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteData(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellStorage,System.Object,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified data as an XML element with the specified 
            name and the specified parent.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteTag(MindFusion.Spreadsheet.Worksheet,System.Object,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified tag of the specified worksheet.
            </summary>
            <remarks>
            Tags are written similarly to arbitrary objects except
            that the client is given a chance
            to perform custom serialization through event handling.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteColumnTag(MindFusion.Spreadsheet.Column,System.Object,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified tag of the specified column.
            </summary>
            <remarks>
            Tags are written similarly to arbitrary objects except
            that the client is given a chance
            to perform custom serialization through event handling.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteRowTag(MindFusion.Spreadsheet.Row,System.Object,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified tag of the specified row.
            </summary>
            <remarks>
            Tags are written similarly to arbitrary objects except
            that the client is given a chance
            to perform custom serialization through event handling.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteMeasure(MindFusion.Spreadsheet.Measure,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified Measure object as an XML element with the specified name 
            and the specified parent.
            </summary>
            <param name="measure">The Measure object to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteBrushes(System.Xml.Linq.XElement)">
            <summary>
            Writes all currently accumulated brushes.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteBrush(MindFusion.Drawing.Brush,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a reference to the specified brush. The brush
            is registered within the internal hashtable for
            subsequent serialization.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteImages(System.Xml.Linq.XElement)">
            <summary>
            Writes all currently accumulated images.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteImage(System.Drawing.Image,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a reference to the specified image. The image
            is registered within the internal hashtable for
            subsequent serialization.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteColor(System.Drawing.Color,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified Color object as an XML element with the specified name 
            and the specified parent.
            </summary>
            <param name="color">The Color object to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WritePointF(System.Drawing.PointF,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a PointF with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WritePointF(System.Single,System.Single,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified PointF under the specified name.
            The x and y components of the point are written as attributes.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.FromPointF(System.Drawing.PointF)">
            <summary>
            Converts the specified PointF object to a string.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteRectangle(System.Drawing.Rectangle,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified Rectangle object as an XML element with the specified name 
            and the specified parent.
            </summary>
            <param name="rect">The Rectangle object to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteEnum(System.Object,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified Enumeration as an XML element with the specified name 
            and the specified parent.
            </summary>
            <param name="value">The Enumeration to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The newly created XML element.</returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteString(System.String,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a string value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteBool(System.Boolean,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a boolean value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteInt(System.Int32,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes an integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteShort(System.Int16,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteLong(System.Int64,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteByte(System.Byte,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Write a byte value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteSByte(System.SByte,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Write a 8-bit signed integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteDouble(System.Double,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a double value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteUInt(System.UInt32,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes an unsigned integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteUShort(System.UInt16,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes an unsigned short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteULong(System.UInt64,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes an unsigned long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteChar(System.Char,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Write a char value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteDecimal(System.Decimal,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Write a decimal value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteFloat(System.Single,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a float value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteFloatAttribute(System.Single,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes a float value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteStream(System.IO.Stream,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified stream.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteFloatArray(System.Single[],System.Xml.Linq.XName,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified array.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteColorArray(System.Drawing.Color[],System.Xml.Linq.XName,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified array.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteObject(System.Object,System.Xml.Linq.XName,System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Writes the specified object under the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.WriteObject(System.Object,System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Writes the specified object under the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.AddChildElement(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Adds a new child node with the specified name to
            the specified parent node.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.XmlContext.AddChildElement(System.Xml.Linq.XName,System.Xml.Linq.XElement,System.String)">
            <summary>
            Adds a new child node with the specified name and
            value to the specified parent node.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.XmlContext.LatestFormat">
            <summary>
            Specifies the latest file format revision number.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.XmlContext.workbook">
            <summary>
            The associated workbook.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.XmlContext.document">
            <summary>
            The underlying document.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.XmlContext.brushes">
            <summary>
            A map of all workbook brushes.
            </summary>
            <remarks>
            During serialization, this map will contain all
            serialized brushes, mapped to their indices.
            During deserialization, the brushes are loaded
            from the appropriate section in the Xml file,
            the first time they are accessed.
            This list is of type (Brush, int) when serializing
            and of type (int, Brush) when deserializing.
            </remarks>
        </member>
        <member name="F:MindFusion.Spreadsheet.XmlContext.images">
            <summary>
            A map of all worksheet images.
            </summary>
            <remarks>
            During serialization, this map will contain all
            serialized images, mapped to their indices.
            During deserialization, the images are loaded
            from the appropriate section in the Xml file,
            the first time they are accessed.
            This list is of type (Image, int) when serializing
            and of type (int, Image) when deserializing.
            </remarks>
        </member>
        <member name="F:MindFusion.Spreadsheet.XmlContext.sharedStrings">
            <summary>
            When saving this map is (string => int), when loading this map is (int => string).
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.XmlContext.Version">
            <summary>
            Gets the format revision number for the file being currently serialized.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Converter">
            <summary>
            Provides capabilities to convert various types to and from strings
            in a culture-independent way.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.#ctor">
            <summary>
            Initializes a new instance of the Converter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToBoolean(System.String)">
            <summary>
            Converts the specified string value to bool.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A boolean value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromBoolean(System.Boolean)">
            <summary>
            Converts the specified bool value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToDecimal(System.String)">
            <summary>
            Converts the specified string value to decimal.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A decimal value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromDecimal(System.Decimal)">
            <summary>
            Converts the specified decimal to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToSingle(System.String)">
            <summary>
            Converts the specified string value to float.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A float value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromSingle(System.Single)">
            <summary>
            Converts the specified float value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToDouble(System.String)">
            <summary>
            Converts the specified string value to double.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A double value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromDouble(System.Double)">
            <summary>
            Converts the specified double value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToByte(System.String)">
            <summary>
            Converts the specified string value to byte value.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A byte value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromByte(System.Byte)">
            <summary>
            Converts the specified byte value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToSByte(System.String)">
            <summary>
            Converts the specified string value to 8-bit signed integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            An 8-bit signed integer value that is deserialized from the
            specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromSByte(System.SByte)">
            <summary>
            Converts the specified 8-bit signed integer to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToUint16(System.String)">
            <summary>
            Converts the specified string value to unsigned 16-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            An unsigned 16-bit integer value that is deserialized from
            the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromUInt16(System.UInt16)">
            <summary>
            Converts the specified unsigned 16-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToUint32(System.String)">
            <summary>
            Converts the specified string value to unsigned 32-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            An unsigned 32-bit integer value that is deserialized from
            the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromUInt32(System.UInt32)">
            <summary>
            Converts the specified unsigned 32-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToUint64(System.String)">
            <summary>
            Converts the specified string value to unsigned 64-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <remarks>
            An unsigned 64-bit integer value that is deserialized from
            the specified string.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromUInt64(System.UInt64)">
            <summary>
            Converts the specified unsigned 64-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToChar(System.String)">
            <summary>
            Converts the specified string value to char.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A char value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromChar(System.Char)">
            <summary>
            Converts the specified char value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToInt16(System.String)">
            <summary>
            Converts the specified string value to 16-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A 16-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromInt16(System.Int16)">
            <summary>
            Converts the specified 16-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToInt32(System.String)">
            <summary>
            Converts the specified string value to 32-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A 32-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToInt32(System.String,System.Int32)">
            <summary>
            Converts the specified string value to 32-bit integer without throwing
            exceptions. In case the specified string cannot be converted, the
            specified default value is returned.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <param name="defaultValue">
            The default value to return if s cannot be deserialized.
            </param>
            <returns>
            A 32-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromInt32(System.Int32)">
            <summary>
            Converts the specified 32-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToInt64(System.String)">
            <summary>
            Converts the specified string value to 64-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A 64-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromInt64(System.Int64)">
            <summary>
            Converts the specified 64-bit integer to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToColor(System.String)">
            <summary>
            Converts the specified string value to Color.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A Color value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromColor(System.Drawing.Color)">
            <summary>
            Converts the specified color value to string in the format #AARRGGBB.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromColor2(System.Drawing.Color)">
            <summary>
            Converts the specified color value to string in the format #RRGGBB.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromColor3(System.Drawing.Color)">
            <summary>
            Converts the specified color value to string in the format AARRGGBB.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromColor4(System.Drawing.Color)">
            <summary>
            Converts the specified color value to string in the format RRGGBB.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ImageFromString(System.String)">
            <summary>
            Converts the specified string value to image.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            An instance of the .NET Image class that is deserialized
            from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToImageV4(System.String)">
            <summary>
            Converts the specified string value to image.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A .NET Image object that is deserialized from the specified string.
            </returns>
            <remarks>
            This method is used in XML file format 4 and earlier.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromImageV4(System.Drawing.Image)">
            <summary>
            Converts the specified image to string.
            </summary>
            <param name="val">
            The Image object to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
            <remarks>
            This method is used in XML file format 4 and earlier.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToImage(System.String)">
            <summary>
            Converts the specified string value to image.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A .NET Image object that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromImage(System.Drawing.Image)">
            <summary>
            Converts the specified image to string.
            </summary>
            <param name="val">
            The image object to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToStreamV4(System.String)">
            <summary>
            Converts the specified string value to stream.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A .NET Stream object that is deserialized from the specified string.
            </returns>
            <remarks>
            This method is used in XML file format 4 and earlier.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromStreamV4(System.IO.MemoryStream)">
            <summary>
            Converts the specified memory stream to string.
            </summary>
            <param name="val">
            The Stream object to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
            <remarks>
            This method is used in XML file format 4 and earlier.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToStream(System.String)">
            <summary>
            Converts the specified string value to stream.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A .NET Stream object that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromStream(System.IO.Stream)">
            <summary>
            Converts the specified stream to string.
            </summary>
            <param name="val">
            The Stream object to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.FromEnum(System.Object)">
            <summary>
            Converts the specified enum value to a string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.Converter.ToEnum(System.Type,System.String)">
            <summary>
            Converts the specified string value to its corresponding
            enumeration member of the specified type.
            </summary>
            <param name="type">
            The type of the enumeration to convert to.
            </param>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A member of the specified enumeration that is deserialized from
            the specified string, possibly a null reference (Nothing in Visual
            Basic) if the deserialization failed.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.PlainRegion.Offset(System.Int32,System.Int32)">
            <summary>
            Offsets the current region by the specified amount.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.PlainRegion.OffsetAndClip(MindFusion.Spreadsheet.PlainRegion,System.Int32,System.Int32,System.Nullable{System.Drawing.Rectangle})">
            <summary>
            Creates a new region, representing the specified region offset
            by the specified amount. In addition, clips the region to the
            specified rectangle.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.PlainRegion.GetLength(System.Int32,System.Int32)">
            <summary>
            Returns the length of this region in the range [from..to).
            This is only valid for linear regions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Base">
            <summary>
            The base type of all types that can be used in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Numeric">
            <summary>
            The base type of all numeric data types such as number, date, time, and so on.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Number">
            <summary>
            Represents numbers in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Date">
            <summary>
            Represents dates in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Time">
            <summary>
            Represents times in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Logical">
            <summary>
            Represents logical values in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Percent">
            <summary>
            Represents percentages in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Currency">
            <summary>
            Represents currencies in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Text">
            <summary>
            Respresents texts in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Error">
            <summary>
            Represents error values in expressions.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.Name">
            <summary>
            Indicates unrecognized name, such as range, function or sheet name.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.Ref">
            <summary>
            Indicates reference to an invalid cell (for example, beyond the
            application's abilities or a cell participating in a circular reference).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.General">
            <summary>
            Indicates a parse error.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.Value">
            <summary>
            Indicates an invalid operand type, including when
            range has no entry corresponding to a cell.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.Num">
            <summary>
            Indicates failure to meet domain constraints (for example,
            input was too large or too small). 
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.NA">
            <summary>
            Indicates not available.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.Div0">
            <summary>
            Indicates division by zero.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Error.Null">
            <summary>
            Indicates that intersection of ranges produced zero cells.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Blank">
            <summary>
            Represents blank values in expressions.
            This class is a singleton and is thread-safe.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Reference">
            <summary>
            Represents cell references in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Matrix">
            <summary>
            Represents matrices in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Sequence">
            <summary>
            Represents sequences in expressions.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Criterion">
            <summary>
            Represents criteria in expressions. This is NOT a Base type.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Criterion.IsMatch(MindFusion.Spreadsheet.Expressions.Base,System.Globalization.CultureInfo)">
            <summary>
            Checks whether the specified value matches the current criterion
            within the specified locale.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Criterion.Regex">
            <summary>
            Regex that matches criterion expressions.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Criterion.Empty">
            <summary>
            A criterion equivalent to an empty string.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Criterion.True">
            <summary>
            A criterion that is always true.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.Criterion.False">
            <summary>
            A criterion that is always false.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Criterion.IsBlank">
            <summary>
            Gets a value indicating whether this criterion matches only blank cells.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.Criterion.IsNonBlank">
            <summary>
            Gets a value indicating whether this criterion matches only non-blank cells.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.TypeConverter">
            <summary>
            Performs conversions of values from one type to another.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.TypeConverter.ToClr(System.Object)">
            <summary>
            Performs a direct conversion of the specified value to
            its CLR equivalent.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.TypeConverter.ToBase(System.Object)">
            <summary>
            Performs a direct conversion of the specified CLR value to
            its Base equivalent.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ParseTreeNode">
            <summary>
            Represents a node in a parse tree.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ParseTreeNode.#ctor">
            <summary>
            Initializes a new instance of the ParseTreeNode class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ParseTreeNode.#ctor(MindFusion.Spreadsheet.Expressions.Token)">
            <summary>
            Initializes a new instance of the ParseTreeNode class.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ParseTreeNode.token">
            <summary>
            The underlying token (if any) or null.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ParseTreeNode.children">
            <summary>
            The child nodes.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.ParseTreeNode.Children">
            <summary>
            Gets the list with all children of this node.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.ParseTreeNode.Token">
            <summary>
            Gets the underlying token.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.ParseTreeNode.Enclosed">
            <summary>
            Gets or sets a value indicating whether this node was originally
            enclosed in braces.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.HorizontalAlignment">
            <summary>
            Specifies the horizontal alignment of an element.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HorizontalAlignment.Default">
            <summary>
            Indicates the default alignment, usually dependent on the element's type.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HorizontalAlignment.Left">
            <summary>
            Indicates that the element is aligned to the left side.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HorizontalAlignment.Center">
            <summary>
            Indicates that the element is horizontally centered.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HorizontalAlignment.Right">
            <summary>
            Indicates that the element is aligned to the right side.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.VerticalAlignment">
            <summary>
            Specifies the vertical alignment of an element.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.VerticalAlignment.Default">
            <summary>
            Indicates the default alignment, usually dependent on the element's type.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.VerticalAlignment.Top">
            <summary>
            Indicates that the element is aligned to the top side.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.VerticalAlignment.Middle">
            <summary>
            Indicates that the element is aligned in the middle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.VerticalAlignment.Bottom">
            <summary>
            Indicates that the element is aligned to the bottom side.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.PushDirection">
            <summary>
            Specifies how the existing cells are moved when inserting
            new cells in a CellRange object.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.PushDirection.Down">
            <summary>
            Indicates that the existing cells are pushed downwards.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.PushDirection.Right">
            <summary>
            Indicates that the existing cells are pushed to the right.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ShiftDirection">
            <summary>
            Specifies how the cells are moved when removing cells from a CellRange object.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ShiftDirection.Up">
            <summary>
            Indicates that the cells below the removed cells are moved up.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ShiftDirection.Left">
            <summary>
            Indicates that the cells to the right of the removed cells are moved to the left.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CursorHint">
            <summary>
            Specifies what mouse cursor to display while a user interacts with the view controls.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.Move">
            <summary>
            Indicates the cursor specified by the MoveCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.HorizontalResize">
            <summary>
            Indicates the cursor specified by the HorizontalResizeCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.VerticalResize">
            <summary>
            Indicates the cursor specified by the VerticalResizeCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.HorizontalSplit">
            <summary>
            Indicates the cursor specified by the HorizontalSplitCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.VerticalSplit">
            <summary>
            Indicates the cursor specified by the VerticalSplitCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.DiagonalResize">
            <summary>
            Indicates the cursor specified by the DiagonalResizeCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.CounterDiagonalResize">
            <summary>
            Indicates the cursor specified by the CounterDiagonalResizeCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.Pointer">
            <summary>
            Indicates the cursor specified by the PointerCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.Disallow">
            <summary>
            Indicates the cursor specified by the DisallowCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.DontChange">
            <summary>
            Indicates the cursor specified by the Cursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.AutoFill">
            <summary>
            Indicates the cursor specified by the AutoFillCursor property.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.CursorHint.Hyperlink">
            <summary>
            Indicates the cursor specified by the HyperlinkCursor property.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.AdjustmentHandles">
            <summary>
            Identifies the distinct selection handles of an interactive object.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.None">
            <summary>
            Indicates none of the selection handles.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeTopLeft">
            <summary>
            Indicates the top-left resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeTopRight">
            <summary>
            Indicates the top-right resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeBottomRight">
            <summary>
            Indicates the bottom-right resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeBottomLeft">
            <summary>
            Indicates the bottom-left resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeTopCenter">
            <summary>
            Indicates the top-center resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeMiddleRight">
            <summary>
            Indicates the middle-right resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeBottomCenter">
            <summary>
            Indicates the bottom-center resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.ResizeMiddleLeft">
            <summary>
            Indicates the middle-left resize handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.Move">
            <summary>
            Indicates the move handle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.AdjustmentHandles.All">
            <summary>
            Indicates all modification handles.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.PageOrder">
            <summary>
            Specifies the order of printed pages.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.PageOrder.OverThenDown">
            <summary>
            Indicates that pages are printed horizontally and then vertically.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.PageOrder.DownThenOver">
            <summary>
            Indicates that pages are printed vertically and then horizontally.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.Chart">
            <summary>
            References the chart object
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.PlotArea">
            <summary>
            References the chart's plot area
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.Legend">
            <summary>
            References the chart's legend
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.Title">
            <summary>
            References the chart's title
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.Grid">
            <summary>
            References the chart's grid
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.AxisX">
            <summary>
            References the chart's x-axis
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.AxisY">
            <summary>
            References the chart's y-axis
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.Series">
            <summary>
            References the chart's series
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.ChartPart.DataPoint">
            <summary>
            References a data point in chart's series.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Picture">
            <summary>
            Represents a picture in a drawing within a worksheet.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Picture.#ctor(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the Picture class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Picture.Source">
            <summary>
            Gets or sets the image source of the picture.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IInplaceEditor">
            <summary>
            Represents an editor for an IInplaceEditable object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IInplaceEditor.Value">
            <summary>
            Gets or sets the edited value.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.FindWithin">
            <summary>
            Specifies the target of find and replace operations.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FindWithin.Worksheet">
            <summary>
            Indicates that the operation should work only in the current worksheet.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FindWithin.Workbook">
            <summary>
            Indicates that the opeartion should work in the entire workbook.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.LookIn">
            <summary>
            Specifies whether a find operation should search in cell formulas or values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.LookIn.Formula">
            <summary>
            Indicates that the operation should work in cell formulas.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.LookIn.Value">
            <summary>
            Indicates that the operation should work in cell values.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SearchOrder">
            <summary>
            Specifies the order of find and replace operations.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SearchOrder.ByColumns">
            <summary>
            Indicates that the operation should process columns first, then rows.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SearchOrder.ByRows">
            <summary>
            Indicates that the operation should process rows first, then columns.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SearchDirection">
            <summary>
            Specifies the direction of find and replace operations.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SearchDirection.Forward">
            <summary>
            Indicates that the operation should proceed to the next cell.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.SearchDirection.Backward">
            <summary>
            Indicates that the operation should proceed to the previous cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.IsFormula(System.Object)">
            <summary>
            Checks if the specified object is a string, representing a formula.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.GetFormula(System.Object)">
            <summary>
            Gets the formula represented by the specified object, or an empty string,
            if the object does not represent a formula.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.IsFormula(System.String)">
            <summary>
            Checks if the specified string represents a formula.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.CreateExpression(System.String)">
            <summary>
            Creates an expression from the specified value.
            The expression is expected to be culture-invariant.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.CreateExpression(System.String,System.Globalization.CultureInfo)">
            <summary>
            Creates an expression from the specified value.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.SameName(System.String,System.String)">
            <summary>
            Compares the specified values ignoring case.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.Normalize(System.Drawing.Rectangle)">
            <summary>
            Normalizes the rectangle ensuring its height and width are non-negative numbers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.Normalize(System.Drawing.RectangleF)">
            <summary>
            Normalizes the rectangle ensuring its height and width are non-negative numbers.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.AppendSpace(System.Text.StringBuilder)">
            <summary>
            Appends a space character to the end of the string builder, but
            only if the string builder is not empty.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.Clear(System.Text.StringBuilder)">
            <summary>
            Clears the content of the string builder.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.GetColumnWidth(MindFusion.Spreadsheet.Worksheet,System.Int32)">
            <summary>
            Gets the width of the specified column.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Utilities.GetRowHeight(MindFusion.Spreadsheet.Worksheet,System.Int32)">
            <summary>
            Gets the height of the specified row.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.IGridStorage`1">
            <summary>
            Represents a rectangular grid of data.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IGridStorage`1.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the data at the specified location in the grid.
            </summary>
            <param name="column">
            The zero-based index of the column where the data should be get or set.
            </param>
            <param name="row">
            The zero-based index of the row where the data should be get or set.
            </param>
            <returns>
            The data at the specified location in the grid.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.IGridStorage`1.Columns">
            <summary>
            Gets the total number of columns in the grid.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.IGridStorage`1.Rows">
            <summary>
            Gets the total number of rows in the grid.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.SparseGridStorageOld`1">
            <summary>
            An IGridStorage&lt;T&gt; implementation that uses a dictionary for data storage
            with (column, row) as key.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Functions">
            <summary>
            Core implementation of some mathematical and statistical functions.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.Reset">
            <summary>
            Clears the entire graph.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.UpdateWorksheet(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Rebuilds the portion of the graph corresponding to the cells
            of the specified worksheet. Recalculates the specified cells,
            all volatile cells and their dependents.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.UpdateCell(MindFusion.Spreadsheet.CellStorage)">
            <summary>
            Rebuilds the portion of the graph corresponding to the specified
            cell of the specified worksheet. Recalculates the specified cell,
            all volatile cells and their dependents.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.RemoveWorksheet(MindFusion.Spreadsheet.Worksheet)">
            <summary>
            Removes all graph elements associated with the specified worksheet.
            Recalculates affected and volatile cells.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.UpdateNamedRanges(System.String[])">
            <summary>
            Rebuilds the portion of the graph associated with the ranges with
            the specified names. Recalculates the affected cells, all volatile
            cells and their dependents.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.UpdateCells(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            Rebuilds the portion of the graph corresponding to the specified subset of cells.
            Recalculates the specified cells, all volatile cells and their dependents.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.UpdateCells(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage},System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellStorage})">
            <summary>
            Rebuilds the portion of the graph corresponding to the specified subset of cells
            of the specified worksheet. Recalculates the specified cells, all volatile cells
            and their dependents.
            </summary>
            <remarks>
            This is the core update method. All other update calls eventually delegate to this one.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.RenameWorksheet(System.String,System.String)">
            <summary>
            Refactors all references to the worksheet with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.MoveCells(System.Collections.Generic.IEnumerable{MindFusion.Spreadsheet.CellRef})">
            <summary>
            Remaps the specified cells in the engine.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.GetPointVertex(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Gets the vertex corresponding to the specified cell.
            If no vertex exists for this cell, a new vertex is
            created and added to the graph.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CalcEngine.GetRangeVertex(MindFusion.Spreadsheet.CellRef)">
            <summary>
            Gets the vertex corresponding to the specified cell range.
            If no vertex exists for this cell, a new vertex is
            created and added to the graph.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.MhtmlExporter">
            <summary>
            HtmlExporter lets you export Workbooks to MHTML files.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MhtmlExporter.#ctor">
            <summary>
            Initializes a new instance of the MhtmlExporter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MhtmlExporter.Export(MindFusion.Spreadsheet.Workbook,System.String)">
            <summary>
            HtmlExporterBase.Export override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MhtmlExporter.Export(MindFusion.Spreadsheet.Workbook,System.IO.StreamWriter)">
            <summary>
            HtmlExporterBase.Export override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.MhtmlExporter.ProcessImage(System.Drawing.Image,System.Boolean)">
            <summary>
            HtmlExporterBase.ProcessImage override.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.MhtmlExporter.SplitImageContent">
            <summary>
            Gets or sets a value indicating whether the content of images inside the exported
            MHTML should be split to individual lines that do not exceed 80 characters.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.FillType">
            <summary>
            Specifies the method used to fill series of cells.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillType.Auto">
            <summary>
            Indicates that the blank cells in the target range are filled
            based on the existing data in the range.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillType.Date">
            <summary>
            Indicates that the cells in the target range are filled with dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillType.Linear">
            <summary>
            Indicates that the cells in the target range are filled
            by adding a step value to the value of each cell in turn.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillType.Growth">
            <summary>
            Indicates that the cells in the target range are filled
            by multiplying a step value by the value of each cell in turn.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.FillDirection">
            <summary>
            Specifies the direction of a data fill operation.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillDirection.Down">
            <summary>
            Indicates that cells are filled vertically.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillDirection.Across">
            <summary>
            Indicates that cells are filled horizontally.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.FillDate">
            <summary>
            Specifies the date component to increment when filling dates.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillDate.Day">
            <summary>
            Indicates that the day is incremented.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillDate.Weekday">
            <summary>
            Indicates that the day is incremented, such,
            that weekends are jumped over,
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillDate.Month">
            <summary>
            Indicates that the month is incremented.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.FillDate.Year">
            <summary>
            Indicates that the year is progressed.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DataFiller.#ctor">
            <summary>
            Initializes a new instance of the DataFiller class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DataFiller.Fill(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.FillType,MindFusion.Spreadsheet.FillDirection,MindFusion.Spreadsheet.FillDate,System.Double,System.Nullable{System.Double},System.Boolean)">
            <summary>
            Performs a data fill of the cells in the specified range,
            according to the specified options.
            </summary>
            <param name="worksheet">
            The target worksheet.
            </param>
            <param name="range">
            The range to be filled.
            </param>
            <param name="type">
            The fill type.
            </param>
            <param name="direction">
            The fill direction.
            </param>
            <param name="date">
            The date component to increment when the fill type is Date.
            This parameter is ignored for any of the other fill types.
            </param>
            <param name="step">
            The increment step. This parameter is ignored if the fill type
            is Auto or when using linear or growth trend.
            </param>
            <param name="stop">
            The fill restriction. The fill will stop when the running value
            exceeds this restriction. This parameter is ignored if the fill type
            is Auto or when using linear or growth trend.
            </param>
            <param name="trend">
            A flag indicating whether to use linear or growth trend. This flag
            can be combined with the Linear and Growth fill types to specify the
            actual trend.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.DataFiller.AutoFill(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Direction,System.Boolean)">
            <summary>
            Performs an automatic data fill of the cells in the specified target range,
            based on the data of the cells in the specified source range.
            </summary>
            <param name="worksheet">
            The target worksheet.
            </param>
            <param name="sourceRange">
            The source range.
            </param>
            <param name="targetRange">
            The range to be filled.
            </param>
            <param name="direction">
            The fill direction.
            </param>
            <param name="copyOnly">
            A flag indicating whether to perform a raw copy, rather than increments/estimates.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.DataFiller.AutoFill(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.CellRef,MindFusion.Spreadsheet.Direction,System.Boolean,System.Boolean)">
            <summary>
            Performs an automatic data fill of the cells in the specified target range,
            based on the data of the cells in the specified source range.
            </summary>
            <param name="worksheet">
            The target worksheet.
            </param>
            <param name="sourceRange">
            The source range.
            </param>
            <param name="targetRange">
            The range to be filled.
            </param>
            <param name="direction">
            The fill direction.
            </param>
            <param name="copyOnly">
            A flag indicating whether to perform a raw copy, rather than increments/estimates.
            </param>
            <param name="raiseEvents">
            A flag indicating whether to raise the CellChanging event to confirm cell changes.
            </param>
        </member>
        <member name="T:MindFusion.Spreadsheet.CurrencyCodes">
            <summary>
            Represents a helper class containing the definitions
            of currency ISO codes to locale relationships.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CurrencyCodes.InfoFromCode(System.String)">
            <summary>
            Gets the CurrencyCodeInfo from a given format code from the default codes.
            If no match is found, the result is null.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CurrencyCodes.DefaultCodes">
            <summary>
            The list of defined currency ISO codes to locale relationships.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CurrencyCodeInfo">
            <summary>
            Represents a currency ISO code to locale relationship.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CurrencyCodeInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CurrencyCodeInfo class.
            </summary>
            <param name="code">
            The ISO code.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.CurrencyCodeInfo.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the CurrencyCodeInfo class.
            </summary>
            <param name="lcid">
            The culture locale id.
            </param>
            <param name="code">
            The ISO code.
            </param>
            <param name="symbol">
            The currency symbol.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.CurrencyCodeInfo.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CurrencyCodeInfo.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.CurrencyCodeInfo.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.CurrencyCodeInfo.Code">
            <summary>
            Gets the ISO code.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CurrencyCodeInfo.Symbol">
            <summary>
            Gets the currency symbol.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CurrencyCodeInfo.LCID">
            <summary>
            Gets the culture locale id.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CurrencyCodeInfo.ShortForm">
            <summary>
            Gets the short form code format.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.CurrencyCodeInfo.LongForm">
            <summary>
            Gets the long form code format.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.DefaultNumericFormats">
            <summary>
            Contains predefined format strings for different numeric formats.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DefaultNumericFormats.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initialize a new instance of the DefaultNumericFormats class.
            </summary>
            <param name="locale"></param>
        </member>
        <member name="M:MindFusion.Spreadsheet.DefaultNumericFormats.Format(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
            Formats a given value according to the provided format string and locale.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.DefaultNumericFormats.Reset">
            <summary>
            Resets the numeric formats.
            </summary>
            <remarks>
            This method is called automatically after Locale
            changes if AutoResetFormats is set to true.
            </remarks>
        </member>
        <member name="M:MindFusion.Spreadsheet.DefaultNumericFormats.GetCurrencyFormats(MindFusion.Spreadsheet.CurrencyCodeInfo)">
            <summary>
            Gets the default currency formats from the CurrencyCodeInfo relationship.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.AutoResetFormats">
            <summary>
            Gets or sets a value indicating whether the 
            format collections will be reset after 
            a change in the locale.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.Locale">
            <summary>
            Gets the locale.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.NumberFormats">
            <summary>
            Gets the default number formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.PercentFormats">
            <summary>
            Gets the default percent formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.CurrencyFormats">
            <summary>
            Gets the default currency formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.DateFormats">
            <summary>
            Gets the default date formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.TimeFormats">
            <summary>
            Gets the default time formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.ScientificFormats">
            <summary>
            Gets the default scientific formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.FractionFormats">
            <summary>
            Gets the default fraction formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.BooleanFormats">
            <summary>
            Gets the default boolean formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.TextFormats">
            <summary>
            Gets the default text formats.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.DefaultNumericFormats.AllFormats">
            <summary>
            Gets all defined formats.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.NumericFormatInfo">
            <summary>
            Represents a numeric format within a workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NumericFormatInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NumericFormatInfo class.
            </summary>
            <param name="format">The string representation of the numeric format.</param>
        </member>
        <member name="M:MindFusion.Spreadsheet.NumericFormatInfo.ToString">
            <summary>
            Object.ToString override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NumericFormatInfo.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NumericFormatInfo.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.NumericFormatInfo.op_Equality(MindFusion.Spreadsheet.NumericFormatInfo,MindFusion.Spreadsheet.NumericFormatInfo)">
            <summary>
            Compares two NumericFormatInfo objects for equality.
            </summary>
            <param name="a">
            The first object to compare.
            </param>
            <param name="b">
            The second object to compare.
            </param>
            <returns>
            true if the two specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.NumericFormatInfo.op_Inequality(MindFusion.Spreadsheet.NumericFormatInfo,MindFusion.Spreadsheet.NumericFormatInfo)">
            <summary>
            Compares two NumericFormatInfo objects for inequality.
            </summary>
            <param name="a">
            The first object to compare.
            </param>
            <param name="b">
            The second object to compare.
            </param>
            <returns>
            true if the two specified objects are not equal; otherwise, false.
            </returns>
        </member>
        <member name="P:MindFusion.Spreadsheet.NumericFormatInfo.Category">
            <summary>
            Gets the category this numeric format falls into.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.NumericFormatInfo.Format">
            <summary>
            Gets the string representation of this numeric format.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Style">
            <summary>
            Default IStyle implementation.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ResetCollectionCommand`1">
            <summary>
            Implements clearing of a collection.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ResetCollectionCommand`1.#ctor(MindFusion.Spreadsheet.Workbook,MindFusion.Spreadsheet.UndoableCollection{`0})">
            <summary>
            Initializes a new instance of the ResetCollectionCommand class.
            </summary>
            <param name="workbook">
            The Workbook modified by this command.
            </param>
            <param name="collection">
            The collection which is cleared.
            </param>
        </member>
        <member name="M:MindFusion.Spreadsheet.ResetCollectionCommand`1.Execute">
            <summary>
            Command.Execute override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ResetCollectionCommand`1.Undo">
            <summary>
            Command.Undo override.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ResetCollectionCommand`1.Redo">
            <summary>
            Command.Redo override.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ErrorType">
            <summary>
            Specifies the type of error.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.None">
            <summary>
            Indicates an invalid error type.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.Null">
            <summary>
            Indicates that intersection of ranges produced zero cells.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.Div0">
            <summary>
            Indicates division by zero.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.Value">
            <summary>
            Indicates an invalid operand type, including when
            range has no entry corresponding to a cell.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.Ref">
            <summary>
            Indicates reference to an invalid cell (for example, beyond the
            application's abilities or a cell participating in a circular reference).
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.Name">
            <summary>
            Indicates unrecognized name, such as range, function or sheet name.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.Num">
            <summary>
            Indicates failure to meet domain constraints (for example,
            input was too large or too small). 
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.NA">
            <summary>
            Indicates not available.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.ErrorType.General">
            <summary>
            Indicates a parse error.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.ExpressionEvaluatorList">
            <summary>
            An expression evaluator that represents a collection of evaluators.
            Evaluation is delegated to the evaluators in the list in the order
            they were added.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionEvaluatorList.EvaluateIdentifier(MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext,System.String)">
            <summary>
            Evaluates the identifier with the specified name.
            </summary>
            <param name="context">
            The evaluation context.
            </param>
            <param name="identifier">
            The name of the identifier.
            </param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.ExpressionEvaluatorList.InvokeFunction(MindFusion.Spreadsheet.Expressions.IExpressionEvaluatorContext,System.String,System.Collections.IList)">
            <summary>
            Invokes the function with the specified name and parameters.
            </summary>
            <param name="context">
            The evaluation context.
            </param>
            <param name="name">
            The name of the function.
            </param>
            <param name="parameters">
            The function parameters.
            </param>
            <returns>
            The result of the evaluation.
            </returns>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.CoreEvaluator">
            <summary>
            An IExpressionEvaluator that provides implementation for the core functions
            and identifiers in the OpenDocument expression specification.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CoreEvaluator.EvaluateDatabaseValues(MindFusion.Spreadsheet.Expressions.EvaluationContext,System.Collections.Generic.List{System.Object},System.String)">
            <summary>
            Evaluates the specified parameters as a database, database field
            and database criteria and returns an enumerable with the values
            from the database that match the criteria, or an error.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CoreEvaluator.EvaluateDatabaseCriteria(MindFusion.Spreadsheet.Expressions.EvaluationContext,System.Object,System.String)">
            <summary>
            Evaluates the specified value as a database criteria. The value should
            be either a reference or a matrix, have width 1 and height of at least 2.
            The returned value is either an error or a two-dimensional array with
            the criteria values.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CoreEvaluator.EvaluateDatabaseFieldIndex(MindFusion.Spreadsheet.Expressions.EvaluationContext,System.Object,MindFusion.Spreadsheet.Expressions.CoreEvaluator.Database,System.String)">
            <summary>
            Evaluates the specified object as a field in the specified
            database and returns the 1-based index of that field. If the
            object is a number, returns the truncated number as an index.
            This method returns an error if the object is not numeric or text.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CoreEvaluator.EvaluateParam(MindFusion.Spreadsheet.Expressions.EvaluationContext,MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor,System.Collections.IList,System.Int32)">
            <summary>
            Evaluates the parameter with the specified index, based on its signature
            in the function descriptor. If ParameterDescriptor.Type is not null and
            the parameter value cannot be converted to this type, an Error is returned.
            If the ParameterDescriptor.Type is null, and the descriptor does not provide
            MissingValue or DefaultValue, this method returns null. This is the only
            case when this method returns null.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.CoreEvaluator.DefaultWeekends">
            <summary>
            Default weekends for "NETWORKDAYS": { 1, 0, 0, 0, 0, 0, 1}.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Expressions.CoreEvaluator.Errors">
            <summary>
            Standard errors.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor">
            <summary>
            Defines a function signature. The function name is required. The rest
            of the properties may be omitted and will default to the following:
            { MinParams = 0, MaxParams = Constants.MaxFunctionParams, Params = {},
            IsVolatile = false, IsInvariant = false, IsDynamic = false,
            IsAggregate = false, PropagatesErrors = true, EvaluateParams = true,
            StrictAggregate = true, AggregateParamType = null (Any) }.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.Name">
            <summary>
            Gets the name of the function.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.MinParams">
            <summary>
            Gets the minimum number of parameters of the functions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.MaxParams">
            <summary>
            Gets the maximum number of parameters of the function.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.Params">
            <summary>
            Gets or sets a list with the signatures of the function parameters.
            A missing signature indicates the default parameter signature.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.IsInvariant">
            <summary>
            Gets or sets a value indicating whether the function is invariant.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.IsVolatile">
            <summary>
            Gets or sets a value indicating whether the function is volatile.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.IsDynamic">
            <summary>
            Gets or sets a value indicating whether the function is dynamic.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.PropagatesErrors">
            <summary>
            Gets or sets a value indicating whether the function will immediately
            return if any of its parameters evaluate to error.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.EvaluateParams">
            <summary>
            Gets or sets a value indicating whether parameters are preevaluated.
            Functions that short-cricuit and some other functions do not preevaluate
            their parameters.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.IsAggregate">
            <summary>
            Gets or sets a value indicating whether the function is aggregate:
            SUM, AVERAGE, AND, etc.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.AggregateParamType">
            <summary>
            Gets or sets the parameter type restriction for aggregate functions.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.FunctionDescriptor.StrictAggregate">
            <summary>
            Gets or sets a value indicating whether values that do not match
            the AggregateParamType cause the function to return an error or are
            simply ignored.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor">
            <summary>
            Defines a parameter signature. Missing param descriptors are equivalent to the default descriptor:
            { Type = null (Any), ElementType = null, DefaultValue = null, MissingValue = null, IsScalar = true}.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor.#ctor">
            <summary>
            Initializes a new instance of the ParamDescriptor class.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor.Type">
            <summary>
            Gets or sets the expected type of the parameter value or null, to accept any parameter.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor.ElementType">
            <summary>
            Gets or sets the type of the elements if the parameter value is of type Sequence.
            If not specified (null), the sequence can contain any elements.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor.DefaultValue">
            <summary>
            Gets or sets the value of this parameter when the parameter is omitted.
            This value is used for optional arguments that are not specified and for
            empty arguments if MissingValue is null.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor.MissingValue">
            <summary>
            Gets or sets the value of this parameter when the parameter is empty, that
            is two consecutive semicolons (;;).
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor.AllowNullValue">
            <summary>
            Gets or sets a value indicating whether this parameter can be null.
            Usually null indicates that the parameter evaluation failed.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Expressions.CoreEvaluator.ParamDescriptor.IsScalar">
            <summary>
            Gets or sets a value indicating whether the parameter expects a scalar value.
            This property is relevant only when Type is not set or set to Reference.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Expressions.Expression">
            <summary>
            Represents a compiled Spreadsheet Expression.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Expression.#ctor(MindFusion.Spreadsheet.Expressions.ParseTreeNode,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the Expression class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Expression.#ctor(MindFusion.Spreadsheet.Expressions.ExpressionTreeNode)">
            <summary>
            Initializes a new instance of the Expression class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Expression.ToString">
            <summary>
            Returns a culture-invariant representation of the expression.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Expression.ToString(System.IFormatProvider)">
            <summary>
            Returns a culture-aware representation of the expression.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Expressions.Expression.ToStringInvariant">
            <summary>
            Returns a culture-invariant representation of the expression.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Hyperlink">
            <summary>
            Represents a hyperlink associated with a worksheet cell.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Hyperlink.#ctor(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.Cell)">
            <summary>
            Initializes a new instance of the Hyperlink class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Hyperlink.#ctor(MindFusion.Spreadsheet.Worksheet,MindFusion.Spreadsheet.Cell,System.Boolean)">
            <summary>
            Initializes a new instance of the Hyperlink class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.Hyperlink.Remove">
            <summary>
            Removes this hyperlink from its owner Cell object.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Hyperlink.Type">
            <summary>
            Gets or sets the hyperlink type.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Hyperlink.Target">
            <summary>
            Gets or sets the hyperlink target.
            </summary>
            <remarks>
            This is the URL for WebAddress hyperlinks, the e-mail
            address for EmailAddress hyperlinks, the document path
            for ExistingFile hyperlinks, and the cell reference for
            CurrentWorkbook hyperlinks.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Hyperlink.SubTarget">
            <summary>
            Gets or sets the hyperlink subtarget.
            </summary>
            <remarks>
            This is the optional bookmark for WebAddress and ExistingFile hyperlinks,
            the e-mail subject for EmailAddress hyperlinks, and ignored for CurrentWorkbook
            hyperlinks.
            </remarks>
        </member>
        <member name="P:MindFusion.Spreadsheet.Hyperlink.ToolTip">
            <summary>
            Gets or sets the tooltip to display for the cell containing the hyperlink.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.Hyperlink.IsImplicit">
            <summary>
            Gets a value indicating whether this hyperlink is 
            created automatically by invoking the HYPERLINK function.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.HyperlinkType">
            <summary>
            Specifies the type of a hyperlink.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HyperlinkType.WebAddress">
            <summary>
            Indicates that the hyperlink points to an online resource.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HyperlinkType.EmailAddress">
            <summary>
            Indicates that the hyperlink points to an e-mail address.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HyperlinkType.ExistingFile">
            <summary>
            Indicates that the hyperlink points to a document.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.HyperlinkType.CurrentWorkbook">
            <summary>
            Indicates that the hyperlink points to a cell or a range of cells
            within the current workbook.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.ExcelImporter">
            <summary>
            ExcelImporter lets you import Excel Open XML documents into a Workbook.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ExcelImporter.#ctor">
            <summary>
            Initializes a new instance of the ExcelImporter class.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.ExcelImporter.Import(System.String,MindFusion.Spreadsheet.Workbook)">
            <summary>
            Imports the specified Excel Open XML document into the specified workbook.
            </summary>
            <param name="filePath">A string specifying the path to the .xlsx file.</param>
            <param name="workbook">A Workbook instance where to import the Excel data.</param>
        </member>
        <member name="P:MindFusion.Spreadsheet.ExcelImporter.View">
            <summary>
            Gets or sets an optional view. This view is used during export to write
            the currently active worksheet and the current cell selection. If the
            view is not specified, the active worksheet and cell selection are set to the default.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.ExcelImporter.ReadConditionalFormats">
            <summary>
            Gets or sets a value indicating whether to read the conditional formats.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.PlotBy">
            <summary>
            Specifies how chart series are created from a data source.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.PlotBy.Row">
            <summary>
            Indicates that the top row in the data source represents the category labels
            and each subsequent row represents a data series.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.PlotBy.Column">
            <summary>
            Indicates that the leftmost column in the data source represents the category
            labels and each subsequent column represents a data series.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.LegendPosition">
            <summary>
            Specifies the position of the legend in a Chart object.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.Left">
            <summary>
            Indicates that the legend should be placed to the left of the plot area,
            centered vertically.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.Top">
            <summary>
            Indicates that the legend should be placed above the plot area,
            centered horizontally.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.RightUp">
            <summary>
            Indicates that the legend should be placed to the right of the plot area,
            in the top corner.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.RightMiddle">
            <summary>
            Indicates that the legend should be placed to the right of the plot area,
            centered vertically.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.RightDown">
            <summary>
            Indicates that the legend should be placed to the right of the plot area,
            in the bottom corner.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.Bottom">
            <summary>
            Indicates that the legend should be placed below the plot area,
            centered horizontally.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.LeftUp">
            <summary>
            Indicates that the legend should be placed to the left of the plot area,
            in the top corner.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.LeftMiddle">
            <summary>
            Indicates that the legend should be placed to the left of the plot area,
            centered vertically.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.LeftDown">
            <summary>
            Indicates that the legend should be placed to the left of the plot area,
            in the bottom corner.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.LegendPosition.Float">
            <summary>
            Indicates that the legend should be placed on top of the plot.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.ChartType">
            <summary>
            Specified the type of a Chart object.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Column">
            <summary>
            Indicates a column chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ColumnStacked">
            <summary>
            Indicates a column chart with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ColumnStacked100Percent">
            <summary>
            Indicates a column chart with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Bar">
            <summary>
            Indicates a bar chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.BarStacked">
            <summary>
            Indicates a bar chart with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.BarStacked100Percent">
            <summary>
            Indicates a bar chart with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Pie">
            <summary>
            Indicates a pie chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.PieExploded">
            <summary>
            Indicates a pie chart with pieces set apart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Donut">
            <summary>
            Indicates a donut chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.DonutExploded">
            <summary>
            Indicates a donut chart with pieces set apart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Line">
            <summary>
            Indicates a line chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.LineMarks">
            <summary>
            Indicates a line chart with only marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.LineStacked">
            <summary>
            Indicates a line chart with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.LineStacked100Percent">
            <summary>
            Indicates a line chart with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.LineWithMarks">
            <summary>
            Indicates a line chart with both lines and marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.LineWithMarksStacked">
            <summary>
            Indicates a line chart with lines and marks with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.LineWithMarksStacked100Percent">
            <summary>
            Indicates a line chart with lines and marks with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothLine">
            <summary>
            Indicates a line chart with smooth lines.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothLineStacked">
            <summary>
            Indicates a line chart with smooth lines with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothLineStacked100Percent">
            <summary>
            Indicates a line chart with smooth lines with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothLineWithMarks">
            <summary>
            Indicates a line chart with smooth lines and marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothLineWithMarksStacked">
            <summary>
            Indicates a line chart with smooth lines and marks with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothLineWithMarksStacked100Percent">
            <summary>
            Indicates a line chart with smooth lines and marks with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Area">
            <summary>
            Indicates an area chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.AreaStacked">
            <summary>
            Indicates an area chart with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.AreaStacked100Percent">
            <summary>
            Indicates an area chart with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothArea">
            <summary>
            Indicates a smooth area chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothAreaStacked">
            <summary>
            Indicates a smooth area chart with stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.SmoothAreaStacked100Percent">
            <summary>
            Indicates a smooth area chart with 100% stacked values.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ScatterWithMarks">
            <summary>
            Indicates a scatter chart with marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ScatterWithLines">
            <summary>
            Indicates a scatter chart with lines.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ScatterWithLinesAndMarks">
            <summary>
            Indicates a scatter chart with lines and marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ScatterWithSmoothLines">
            <summary>
            Indicates a scatter chart with smooth lines.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ScatterWithSmoothLinesAndMarks">
            <summary>
            Indicates a scatter chart with smooth lines and marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Bubble">
            <summary>
            Indicates a bubble chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.RadarWithLines">
            <summary>
            Indicates a radar chart with lines.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.RadarWithMarks">
            <summary>
            Indicates a radar chart with marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.RadarWithLinesAndMarks">
            <summary>
            Indicates a radar chart with lines and marks.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.RadarFilled">
            <summary>
            Indicates a radar chart with filled areas.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.RadarFilledWithLines">
            <summary>
            Indicates a radar chart with filled areas and lines.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.ColumnOverlayed">
            <summary>
            Indicates a column chart with overlayed bars.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.BarOverlayed">
            <summary>
            Indicates a bar chart with overlayed bars.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.ChartType.Candlestick">
            <summary>
            Indicates a candlestick chart.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.Charts.MarkShape">
            <summary>
            Specifies the shape of a mark in a chart.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.MarkShape.Circle">
            <summary>
            Indicates a circle.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.MarkShape.Rhombus">
            <summary>
            Indicates a rhombus.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.MarkShape.Square">
            <summary>
            Indicates a square.
            </summary>
        </member>
        <member name="F:MindFusion.Spreadsheet.Charts.MarkShape.Triangle">
            <summary>
            Indicates a triangle.
            </summary>
        </member>
        <member name="T:MindFusion.Spreadsheet.CalcExporter">
            <summary>
            CalcExporter lets you export Workbooks to OpenOffice Calc spreadsheets.
            </summary>
        </member>
        <member name="M:MindFusion.Spreadsheet.CalcExporter.Export(MindFusion.Spreadsheet.Workbook,System.String)">
            <summary>
            Exports the specified workbook to the specified OpenOffice Calc spreadsheet.
            </summary>
            <param name="workbook">A Workbook instance to export the data from.</param>
            <param name="filePath">A string specifying the path to the .ods file.</param>
        </member>
        <member name="F:MindFusion.Spreadsheet.CalcExporter.MultipleSpaceRegex">
            <summary>
            Matches two or more spaces after.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RegInfo.Min">
            <summary>
            The 0-based index of the first header.
            </summary>
        </member>
        <member name="P:MindFusion.Spreadsheet.RegInfo.Max">
            <summary>
            The 0-based index of the last header, inclusive.
            </summary>
        </member>
    </members>
</doc>
