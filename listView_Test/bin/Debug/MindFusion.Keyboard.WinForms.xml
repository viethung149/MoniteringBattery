<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MindFusion.Keyboard.WinForms</name>
    </assembly>
    <members>
        <member name="T:MindFusion.UI.WinForms.HangulKey">
            <summary>
            Represents keyboard keys that render Hangul letters for Korean IME.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.Key">
            <summary>
            Represents a key in the keyboard.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release modifier keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.Copy(MindFusion.UI.WinForms.Key)">
            <summary>
            Copies the properties of this key to specified one.
            </summary>
            <param name="objKey">Key</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.UpdateKey">
            <summary>
            Updates the key's labels for current language.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new Key instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.op_Equality(MindFusion.UI.WinForms.Key,MindFusion.UI.WinForms.Key)">
            <summary>
            Compares the specified keys for equality.
            </summary>
            <param name="key1">The first Key to compare.</param>
            <param name="key2">The second Key to compare.</param>
            <returns>true if the keys are equal, or false otherwise.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.op_Inequality(MindFusion.UI.WinForms.Key,MindFusion.UI.WinForms.Key)">
            <summary>
            Compares the specified keys for inequality.
            </summary>
            <param name="key1">The first Key to compare.</param>
            <param name="key2">The second Key to compare.</param>
            <returns>true if the keys are not equal, or false otherwise.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.GetHashCode">
            <summary>
            Returns a hash code for this Key. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.Key.GetVirtualKeyCode(System.Windows.Forms.Keys)">
            <summary>
            Gets the virtual key code corresponding to a System.Windows.Forms.Keys value.
            </summary>
            <param name="value">System.Windows.Forms.Keys value.</param>
            <returns>int</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Content">
            <summary>
            Gets or sets the key's text content. Some descendant key classes send their content
            as input to currently focused control; other ones only store their labels in it.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Image">
            <summary>
            Gets or sets relative path to an image that should be displayed inside this key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.IsSelected">
            <summary>
            IsSelected
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.IsLocked">
            <summary>
            IsLocked. Used only for shift, alt, altgr, control, caps lock and num lock.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Left">
            <summary>
            Horizontal position of the key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Top">
            <summary>
            Vertical position of the key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Width">
            <summary>
            The key's width.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Height">
            <summary>
            The key's height.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Backspace">
            <summary>
            The backspace virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Tab">
            <summary>
            The tab virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Enter">
            <summary>
            The enter virtual key. Virtual Key = 13
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Shift">
            <summary>
            The shift virtual key. Virtual Key = 16
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Ctrl">
            <summary>
            The control virtual key. Virtual Key = 17
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Alt">
            <summary>
            The alt virtual key. Virtual Key = 18
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.AltGr">
            <summary>
            The alt gr virtual key. Virtual Key = 165
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.PauseBreak">
            <summary>
            The pause / break virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.CapsLock">
            <summary>
            The caps lock virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Esc">
            <summary>
            The escape virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Space">
            <summary>
            The space virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.PageUp">
            <summary>
            The page up virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.PageDown">
            <summary>
            The page down virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.End">
            <summary>
            The end virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Home">
            <summary>
            The home virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.KeyLeft">
            <summary>
            The key left virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.KeyUp">
            <summary>
            The key up virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.KeyRight">
            <summary>
            The key right virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.KeyDown">
            <summary>
            The key down virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Insert">
            <summary>
            The insert virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Delete">
            <summary>
            The delete virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Windows">
            <summary>
            The Windows virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Context">
            <summary>
            The context menu virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F1">
            <summary>
            The F1 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F2">
            <summary>
            The F2 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F3">
            <summary>
            The F3 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F4">
            <summary>
            The F4 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F5">
            <summary>
            The F5 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F6">
            <summary>
            The F6 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F7">
            <summary>
            The F7 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F8">
            <summary>
            The F8 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F9">
            <summary>
            The F9 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F10">
            <summary>
            The F10 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F11">
            <summary>
            The F11 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.F12">
            <summary>
            The F12 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumLock">
            <summary>
            The num lock virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.ScrollLock">
            <summary>
            The scroll lock virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.PrtScr">
            <summary>
            The Print Screen virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Lang">
            <summary>
            Language rotation virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumPageUp">
            <summary>
            The numpad page up virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumPageDown">
            <summary>
            The numpad page down virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumEnd">
            <summary>
            The numpad end virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumHome">
            <summary>
            The numpad home virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumKeyLeft">
            <summary>
            The numpad key-left virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumKeyUp">
            <summary>
            The numpad key-up virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumKeyRight">
            <summary>
            The numpad key-right virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumKeyDown">
            <summary>
            The numpad key-down virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumInsert">
            <summary>
            The numpad insert virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumDelete">
            <summary>
            The numpad delete virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.Num5">
            <summary>
            The numpad 5 virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumDiv">
            <summary>
            The numpad / virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumMult">
            <summary>
            The numpad * virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumMinus">
            <summary>
            The numpad - virtual key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.Key.NumPlus">
            <summary>
            The numpad + virtual key.
            </summary>
        </member>
        <member name="E:MindFusion.UI.WinForms.Key.PropertyChanged">
            <summary>
            PropertyChanged
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.#ctor">
            <summary>
            Initializes a new instance of the HangulKey class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the HangulKey class with specified character code.
            </summary>
            <param name="mainHangulSymbol">The character to send when this key is pressed.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.#ctor(System.Char,System.Char)">
            <summary>
            Initializes a new instance of the HangulKey class with specified character code.
            </summary>
            <param name="mainHangulSymbol">The character to send when this key is pressed.</param>
            <param name="shiftedHangulSymbol">The character to send when this key is pressed together with shift.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.#ctor(System.Char,System.Object)">
            <summary>
            Initializes a new instance of the KanaKey class with specified character code and content.
            </summary>
            <param name="mainHangulSymbol">The character to send when this key is pressed.</param>
            <param name="content">Content sent as input to the focused control.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.#ctor(System.Char,System.Char,System.Object)">
            <summary>
            Initializes a new instance of the HangulKey class with specified character code.
            </summary>
            <param name="mainHangulSymbol">The character to send when this key is pressed.</param>
            <param name="shiftedHangulSymbol">The character to send when this key is pressed together with shift.</param>
            <param name="content">Content sent as input to the focused control.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release modifier keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new HangulKey instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.HangulKey.GetHashCode">
            <summary>
            Returns a hash code for this HangulKey. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.HangulKey.MainHangulSymbol">
            <summary>
            Gets or sets the Unicode character associated with this key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.HangulKey.ShiftedHangulSymbol">
            <summary>
            Gets or sets the Unicode character associated with this key on shift or caps lock press.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.HangulKey.LowerCase">
            <summary>
            Gets the unicode character label.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.HangulKey.UpperCase">
            <summary>
            Gets the shifted unicode character label.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.HangulKey.Repeat">
            <summary>
            Gets or sets how many times to send the key code when this key is pressed.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.Theme">
            <summary>
            Identifies built-in themes.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.OfficeBlue">
            <summary>
            Offise 2007 Blue.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.OfficeBlack">
            <summary>
            Offise 2007 Black.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.OfficeSilver">
            <summary>
            Offise 2007 Silver.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.OfficeOrange">
            <summary>
            Offise 2007 Orange.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.OfficeGreen">
            <summary>
            Offise 2007 Green.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.Vista">
            <summary>
            Vista color scheme.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.Windows10">
            <summary>
            Windows10 theme.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.Theme.None">
            <summary>
            No theme.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.VirtualKeyboard">
            <summary>
            VirtualKeyboard
            </summary>
            <summary>
            Virtual Keyboard Control.
            </summary>
            <example>
            Examples of using <c>VirtualKeyboard</c>:
            
            <code lang="CS">
            Add namespace:
            
            using MindFusion.UI.WinForms;
            using MindFusion.Common.WinForms;
            
            Creating keyboard instance in MainWindow.xaml.cs:
            
            public partial class MainWindow : MindFusion.Common.WinForms.SkinnedWindow
            {
               public MainWindow()
               {
                   InitializeComponent();
                   
                    VirtualKeyboard virtualKeyboard = new VirtualKeyboard();
                    LayoutRoot.Children.Add(virtualKeyboard);
               }
            } 
            </code>
            
            <code lang="VB.NET">
            Add namespace:
            
            Imports MindFusion.UI.WinForms
            Imports MindFusion.Common.WinForms
            
            Creating keyboard instance in MainWindow.xaml.vb:
            
            Partial Public Class MainWindow
                Inherits MindFusion.Common.WinForms.SkinnedWindow
                
               Public Sub New()
                   Me.InitializeComponent()
                   
                    Dim virtualKeyboard As New VirtualKeyboard()
                    LayoutRoot.Children.Add(virtualKeyboard)
               End Sub
            End Class
            </code>
            </example>
        </member>
        <member name="F:MindFusion.UI.WinForms.VirtualKeyboard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.#ctor">
            <summary>
            Initializes a new instance of the VirtualKeyboard class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.OnHandleCreated(System.EventArgs)">
            <summary>
            Control.OnHandleCreated override.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.WndProc(System.Windows.Forms.Message@)">
            <summary>
            For internal use.
            </summary>
            <param name="m">A Message instance.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.OnParentChanged(System.EventArgs)">
            <summary>
            Control.OnParentChanged override.
            </summary>
            <param name="e">An EventArgs instance.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.UnlockKeys">
            <summary>
            Unlocks all special keys.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.ApplyTheme(System.IO.Stream)">
             <summary>
             Applies a theme to the keyboard and its keys.
             </summary>
             <param name="stream">A Stream from which to load theme attributes.</param>
             <example>
             Examples of using <c>ApplyTheme(Stream stream)</c>:
             
             <code lang="CS">
             
             public partial class MainWindow : Form
             {
                 public MainWindow()
                 {
                     InitializeComponent();
                     comboBoxThemes.Items.AddRange(Enum.GetNames(typeof(MindFusion.UI.WinForms.Theme)));
                     comboBoxThemes.Items.Add("Custom");
                     comboBoxThemes.SelectedIndex = 0;
                 }
            
                 private void comboBoxThemes_SelectedValueChanged(object sender, EventArgs e)
                 {
                     var theme = comboBoxThemes.SelectedItem.ToString();
                     if (theme.Equals("Custom"))
                         virtualKeyboard1.AplyTheme(typeof(MainWindow).Assembly.GetManifestResourceStream("MindFusion.UI.WinForms.Samples.VS2010.CS.CustomTheme.xml"));
                     else
                         virtualKeyboard1.Theme = (MindFusion.UI.WinForms.Theme)Enum.Parse(typeof(MindFusion.UI.WinForms.Theme), theme);
                 }
             }
             </code>
             
             <code lang="VB.NET">
             
             Public Class MainWindow
                 Public Sub New()
                     InitializeComponent()
                     comboBoxThemes.Items.AddRange([Enum].GetNames(GetType(MindFusion.UI.WinForms.Theme)))
                     comboBoxThemes.Items.Add("Custom")
                     comboBoxThemes.SelectedIndex = 0
                 End Sub
                 
                 Private Sub comboBoxThemes_SelectedValueChanged(ByVal sender As Object, ByVal e As EventArgs) Handles comboBoxThemes.SelectedValueChanged
                     Dim theme = comboBoxThemes.SelectedItem.ToString()
                     If theme.Equals("Custom") Then
                         virtualKeyboard1.AplyTheme(GetType(MainWindow).Assembly.GetManifestResourceStream("MindFusion.UI.WinForms.Samples.VS2010.VB.CustomTheme.xml"))
                     Else
                         virtualKeyboard1.Theme = DirectCast([Enum].Parse(GetType(MindFusion.UI.WinForms.Theme), theme), MindFusion.UI.WinForms.Theme)
                     End If
                 End Sub
             End Class
             </code>
             </example>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.ApplyTheme(System.String)">
            <summary>
            Applies a theme to the keyboard and its keys.
            </summary>
            <param name="fileName">The file from which to load theme attributes.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Control.OnPaint override.
            </summary>
            <param name="e">PaintEventArgs</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseDown override.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseUp override.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Control.OnMouseMove override.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.OnMouseLeave(System.EventArgs)">
            <summary>
            Control.OnMouseLeave override.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.SendKey(MindFusion.UI.WinForms.Key)">
            <summary>
            Sends the specified key input to active window.
            </summary>
            <param name="objKey">Key</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.ActivateLayout(System.Int64)">
            <summary>
            Loads keyboard layout.
            </summary>
            <param name="layoutid">layoutid</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.ForceLanguage(System.Int64)">
            <summary>
            ForceLanguage
            </summary>
            <param name="layoutid">layoutid</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.SetKeyLabels(System.Globalization.CultureInfo,MindFusion.UI.WinForms.KeyLabels[])">
            <summary>
            Sets custom key labels to use for specified language.
            </summary>
            <param name="culture">A CultureInfo specifying the language whose labels to override.</param>
            <param name="labels">An array of KeyLabels objects specifying custom labels.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.LoadImeTable(System.Globalization.CultureInfo,System.IO.DirectoryInfo)">
            <summary>
            Loads an IME table file for specified locale.
            </summary>
            <param name="locale">A CultureInfo specifying the locale.</param>
            <param name="dictionaryPath">Path to the dictionary folder.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyboard.LoadImeTable(System.Globalization.CultureInfo,System.String)">
            <summary>
            Loads an IME table file for specified locale.
            </summary>
            <param name="locale">A CultureInfo specifying the locale.</param>
            <param name="filePath">Path to the dictionary file.</param>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.DefaultSize">
            <summary>
            Control.DefaultSize override.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.LayoutsFolder">
            <summary>
            Gets or sets the folder where layout files are located.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.AutoFill">
            <summary>
            Gets or sets whether keyboard layout should be generated automatically
            depending on the language (e.g. qwerty, azerty, etc layouts).
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.Theme">
            <summary>
            Gets or sets the keyboard theme.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.KeyTemplate">
            <summary>
            Gets or sets the appearance of key buttons.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.AutoReleaseModifierKeys">
            <summary>
            Gets or sets whether pressing a regular key automatically releases
            modifier keys such as shift, alt, control etc. (except CapsLock).
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.AutoRepeat">
            <summary>
            Gets or sets whether the component should synthesize keyboard events
            repeatedly when a virtual key is pressed down, until the key is released.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.RepeatDelay">
            <summary>
            Specifies the initial delay in milliseconds before the component
            starts repeating key-down events when AutoRepeat is enabled.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.RepeatRate">
            <summary>
            Gets or sets the delay in milliseconds between consecutive
            key-down events synthesized in AutoRepeat mode.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.AutoUpdateCulture">
            <summary>
            Gets or sets whether the component should change the UI thread's
            CurrentCulture whenever the input locale changes.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.DefaultLayout">
            <summary>
            Gets or sets the default kayboard layout.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.TemplateLayout">
            <summary>
            Gets or sets the keyboard's layout template.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.Mode">
            <summary>
            Gets or sets the layout mode.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.PreventActivation">
            <summary>
            Gets or sets whether to prevent activation of parent window 
            when users click on a keyboard's key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.IsStandAlone">
            <summary>
            Gets or sets whether the keyboard should appear in its own window.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.AttachedWindow">
            <summary>
            Gets or sets the window handle of the parent window associated with this keyboard.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.InputLocale">
            <summary>
            Gets or sets the current input language.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.Font">
            <summary>
            Control.Font override.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.ShiftLocked">
            <summary>
            Gets the state of the Shift key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.ControlLocked">
            <summary>
            Gets the state of the Control key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.AltLocked">
            <summary>
            Gets the state of the Alt key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.AltGrLocked">
            <summary>
            Gets the state of the AltGr key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.NumLocked">
            <summary>
            Gets the state of the Num lock key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.ScrollLocked">
            <summary>
            Gets the state of the Scroll lock key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.CapsLocked">
            <summary>
            Gets the state of the Caps lock key.
            </summary>
        </member>
        <member name="E:MindFusion.UI.WinForms.VirtualKeyboard.KeyPressed">
            <summary>
            Raised when a key has been pressed.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyboard.LicenseKey">
            <summary>
            Gets or sets the license key of the control.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.KeyTemplate">
            <summary>
            Specifies appearance of keys.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyTemplate.#ctor">
            <summary>
            Initializes a new instance of the KeyTemplate class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyTemplate.Draw(System.Drawing.Graphics,MindFusion.UI.WinForms.Key,MindFusion.UI.WinForms.KeyTemplate.Mode,System.Drawing.Font)">
            <summary>
            Draws the specified key using this template.
            </summary>
            <param name="gr">Graphics</param>
            <param name="objKey">Key</param>
            <param name="mode">Mode</param>
            <param name="font">font</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyTemplate.AddRoundRect(System.Drawing.Rectangle,System.Single,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Create a rounded rectangle.
            </summary>
            <param name="rect">A Rectangle instance.</param>
            <param name="r">A float value specifying corner radius.</param>
            <param name="gp">Target GraphicsPath.</param>
            <returns>The modified GraphicsPath.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.CornerRadius">
            <summary>
            Radius of keys' rounded corners.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.Background">
            <summary>
            Gets or sets the background brush.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.HoverBackground">
            <summary>
            Gets or sets the background of hovered key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.PressedBackground">
            <summary>
            Gets or sets the background of pressed key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.Border">
            <summary>
            Gets or sets a Pen used to draw key borders.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.LowerCaseForeground">
            <summary>
            Gets or sets the color of lower-case characters.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.UpperCaseForeground">
            <summary>
            Gets or sets the color of upper-case characters.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyTemplate.AlterCaseForeground">
            <summary>
            Gets or sets the color of alter-case characters.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.KeyTemplate.Mode">
            <summary>
            Identifies key state.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyTemplate.Mode.Normal">
            <summary>
            Normal key appearance.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyTemplate.Mode.Hover">
            <summary>
            Mouse is hovering over the key.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyTemplate.Mode.Pressed">
            <summary>
            The key is pressed down.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.ImeTableEntry.Key">
            <summary>
            Sequence of Hiragana symbols.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.ImeTableEntry.Lid">
            <summary>
            Some encoded gramatical rules seem encoded here?
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.ImeTableEntry.Rid">
            <summary>
            Some encoded gramatical rules seem encoded here?
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.ImeTableEntry.Cost">
            <summary>
            We should sort by these?
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.ImeTableEntry.Value">
            <summary>
            Translation for the entered Hiragana.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.UnicodeKey">
            <summary>
            Represents keyboard keys that send unicode-character codes as input. 
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.UnicodeKey.#ctor">
            <summary>
            Initializes a new instance of the UnicodeKey class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.UnicodeKey.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the UnicodeKey class with specified character code.
            </summary>
            <param name="character">The character to send when this key is pressed.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.UnicodeKey.#ctor(System.Char,System.Object)">
            <summary>
            Initializes a new instance of the UnicodeKey class with specified character code and content.
            </summary>
            <param name="character">The character to send when this key is pressed.</param>
            <param name="content">Content sent as input to the focused control.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.UnicodeKey.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release modifier keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.UnicodeKey.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new UnicodeKey instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.UnicodeKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.UnicodeKey.GetHashCode">
            <summary>
            Returns a hash code for this UnicodeKey. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.UnicodeKey.Character">
            <summary>
            Gets or sets the Unicode character associated with this key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.UnicodeKey.LowerCase">
            <summary>
            Gets the lower-case character label.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.UnicodeKey.UpperCase">
            <summary>
            Gets the upper-case character label.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.UnicodeKey.Repeat">
            <summary>
            Gets or sets how many times to send the key code when this key is pressed.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.KeyLabels">
            <summary>
            Represents custom key labels.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyLabels.VirtualKey">
            <summary>
            Virtual key code.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyLabels.Shift">
            <summary>
            Label shown when Shift key is pressed down.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyLabels.Lower">
            <summary>
            Lower-case label.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyLabels.Alt">
            <summary>
            Alternative label.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyLabels.Caps">
            <summary>
            Upper-case label.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.ExtendedKey">
            <summary>
            Represents a key that sends several key codes when pressed.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.ExtendedKey.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release modifier keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.ExtendedKey.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new ExtendedKey instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.ExtendedKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.ExtendedKey.GetHashCode">
            <summary>
            Returns a hash code for this ExtendedKey. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.ExtendedKey.Keys">
            <summary>
            List of regular keys sent by this key.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.KeyboardLayout">
            <summary>
            Defines layout of keyboard keys.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyboardLayout.#ctor">
            <summary>
            Initializes a new instance of the KeyboardLayout class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyboardLayout.DefaultLayout">
            <summary>
            Create  keyboard layout depend on current language
            </summary>
            <returns>KeyboardLayout</returns>
            <example>
            Examples of using <c>DefaultLayout()</c>:
            
            <code lang="XML">
            Example of structure of keyboard layout, which is saved in XML file (for example: "MindFusion.UI.WinForms.Samples.VS2010.CS.CustomLayout.xml"):
            
            &lt;KeyboardLayout xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
                &lt;Keys&gt;
                    &lt;Key xsi:type="SpecialKey"&gt;
                        &lt;Content xsi:type="xsd:string"&gt;Esc&lt;/Content&gt;
                        &lt;Left&gt;30&lt;/Left&gt;
                        &lt;Top&gt;10&lt;/Top&gt;
                        &lt;Width&gt;40&lt;/Width&gt;
                        &lt;Height&gt;40&lt;/Height&gt;
                        &lt;VirtualKey&gt;27&lt;/VirtualKey&gt;
                    &lt;/Key&gt; 
                    ...
                &lt;/Keys&gt;
                &lt;Width&gt;720&lt;/Width&gt;
                &lt;Height&gt;300&lt;/Height&gt;
                &lt;KeyboardLayoutId&gt;67187713&lt;/KeyboardLayoutId&gt;
            &lt;/KeyboardLayout&gt;
            </code>
            
            <code lang="CS">
            Add namespace:
            
            using MindFusion.UI.WinForms;
            using MindFusion.Common.WinForms;
            
            public partial class MainWindow : MindFusion.Common.WinForms.SkinnedWindow
            {
               public MainWindow()
               {
                   InitializeComponent();
                   
                    VirtualKeyboard virtualKeyboard = new VirtualKeyboard();
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.Serializer.Load(this.GetType().Assembly.GetManifestResourceStream("MindFusion.UI.WinForms.Samples.VS2010.CS.CustomLayout.xml"));        
                    LayoutRoot.Children.Add(virtualKeyboard);
                    virtualKeyboard.ForceUpdateLayout();
               }
               
                private void buttonDefaultLayout_Click(object sender, EventArgs e)
                {
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.DefaultLayout();
                }
               
               private void buttonExtendedLayout_Click(object sender, EventArgs e)
               {
                   virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.ExtendedLayout();
               }
            } 
            </code>
            
            <code lang="VB.NET">
            Add namespace:
            
            Imports MindFusion.UI.WinForms
            Imports MindFusion.Common.WinForms
            
            Partial Public Class MainWindow
                Inherits MindFusion.Common.WinForms.SkinnedWindow
                
               Public Sub New()
                   Me.InitializeComponent()
                   
                    Dim virtualKeyboard As New VirtualKeyboard()
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.Serializer.Load(Of MindFusion.UI.WinForms.KeyboardLayout)(Me.[GetType]().Assembly.GetManifestResourceStream("MindFusion.UI.WinForms.Samples.VS2010.VB.CustomLayout.xml"))
                    LayoutRoot.Children.Add(virtualKeyboard)
                    virtualKeyboard.ForceUpdateLayout()
               End Sub
               
                Private Sub buttonDefaultLayout_Click(ByVal sender As Object, ByVal e As EventArgs) Handles buttonDefaultLayout.Click
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.DefaultLayout()
                End Sub
                
                Private Sub buttonExtendedLayout_Click(ByVal sender As Object, ByVal e As EventArgs) Handles buttonExtendedLayout.Click
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.ExtendedLayout()
                End Sub
            End Class
            </code>
            </example>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyboardLayout.ExtendedLayout">
            <summary>
            Create Extended keyboard layout depending on current language
            </summary>
            <returns>KeyboardLayout</returns>
            <example>
            Examples of using <c>ExtendedLayout()</c>:
            
            <code lang="XML">
            Example of structure of keyboard layout, which saved in XML file (for example: "MindFusion.UI.WinForms.Samples.VS2010.CS.CustomLayout.xml"):
            
            &lt;KeyboardLayout xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
                &lt;Keys&gt;
                    &lt;Key xsi:type="SpecialKey"&gt;
                        &lt;Content xsi:type="xsd:string"&gt;Esc&lt;/Content&gt;
                        &lt;Left&gt;30&lt;/Left&gt;
                        &lt;Top&gt;10&lt;/Top&gt;
                        &lt;Width&gt;40&lt;/Width&gt;
                        &lt;Height&gt;40&lt;/Height&gt;
                        &lt;VirtualKey&gt;27&lt;/VirtualKey&gt;
                    &lt;/Key&gt; 
                    ...
                &lt;/Keys&gt;
                &lt;Width&gt;720&lt;/Width&gt;
                &lt;Height&gt;300&lt;/Height&gt;
                &lt;KeyboardLayoutId&gt;67187713&lt;/KeyboardLayoutId&gt;
            &lt;/KeyboardLayout&gt;
            </code>
            
            <code lang="CS">
            Add namespace:
            
            using MindFusion.UI.WinForms;
            using MindFusion.Common.WinForms;
            
            public partial class MainWindow : MindFusion.Common.WinForms.SkinnedWindow
            {
               public MainWindow()
               {
                   InitializeComponent();
                   
                    VirtualKeyboard virtualKeyboard = new VirtualKeyboard();
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.Serializer.Load(this.GetType().Assembly.GetManifestResourceStream("MindFusion.UI.WinForms.Samples.VS2010.CS.CustomLayout.xml"));        
                    LayoutRoot.Children.Add(virtualKeyboard);
                    virtualKeyboard.ForceUpdateLayout();
               }
               
                private void buttonDefaultLayout_Click(object sender, EventArgs e)
                {
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.DefaultLayout();
                }
               
               private void buttonExtendedLayout_Click(object sender, EventArgs e)
               {
                   virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.ExtendedLayout();
               }
            } 
            </code>
            
            <code lang="VB.NET">
            Add namespace:
            
            Imports MindFusion.UI.WinForms
            Imports MindFusion.Common.WinForms
            
            Partial Public Class MainWindow
                Inherits MindFusion.Common.WinForms.SkinnedWindow
                
               Public Sub New()
                   Me.InitializeComponent()
                   
                    Dim virtualKeyboard As New VirtualKeyboard()
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.Serializer.Load(Of MindFusion.UI.WinForms.KeyboardLayout)(Me.[GetType]().Assembly.GetManifestResourceStream("MindFusion.UI.WinForms.Samples.VS2010.VB.CustomLayout.xml"))
                    LayoutRoot.Children.Add(virtualKeyboard)
                    virtualKeyboard.ForceUpdateLayout()
               End Sub
               
                Private Sub buttonDefaultLayout_Click(ByVal sender As Object, ByVal e As EventArgs) Handles buttonDefaultLayout.Click
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.DefaultLayout()
                End Sub
                
                Private Sub buttonExtendedLayout_Click(ByVal sender As Object, ByVal e As EventArgs) Handles buttonExtendedLayout.Click
                    virtualKeyboard.DefaultLayout = MindFusion.UI.WinForms.KeyboardLayout.ExtendedLayout()
                End Sub
            End Class
            </code>
            </example>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyboardLayout.FromTemplate(MindFusion.UI.WinForms.KeyboardLayout,System.Boolean)">
            <summary>
            Creates keyboard layout from template.
            </summary>
            <param name="template">A KeyboardLayout template.</param>
            <param name="autofill">Specifies whether virtual key codes should be set automatically.</param>
            <returns>The new KeyboardLayout.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyboardLayout.ChangeLanguage(System.Boolean)">
            <summary>
            Change layout.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyboardLayout.Create(System.String)">
            <summary>
            Loads keyboard layout from a file.
            </summary>
            <param name="fileName">Path to a file containing layout XML.</param>
            <returns>A KeyboardLayout instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.KeyboardLayout.Create(System.IO.Stream)">
            <summary>
            Loads keyboard layout from a stream.
            </summary>
            <param name="input">A stream containing layout XML.</param>
            <returns>A KeyboardLayout instance.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyboardLayout.Keys">
            <summary>
            Gets or sets the keys displayed in this layout.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyboardLayout.Width">
            <summary>
            Gets or sets the keyboard width.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyboardLayout.Height">
            <summary>
            Gets or sets the keyboard height.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KeyboardLayout.KeyboardLayoutId">
            <summary>
            Gets or sets the layout id.
            </summary>
        </member>
        <member name="E:MindFusion.UI.WinForms.KeyboardLayout.PropertyChanged">
            <summary>
            PropertyChanged event
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.KeyboardMode">
            <summary>
            Identifies keyboard layout modes.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyboardMode.Default">
            <summary>
            Default layout.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyboardMode.Extended">
            <summary>
            Extended layout.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.KeyboardMode.Custom">
            <summary>
            Custom layout. You must design a layout and save it in Layouts folder
            before using this mode. Or use TemplateLayout property to define keyboard common view.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.NumPadKey">
            <summary>
            Represents a num pad key.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NumPadKey.#ctor">
            <summary>
            Initializes a new instance of the NumPadKey class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NumPadKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the NumPadKey class with specified virtual key code.
            </summary>
            <param name="virtualKey">Virtual key code.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NumPadKey.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the NumPadKey class with specified virtual key code and content.
            </summary>
            <param name="virtualKey">Virtual key code.</param>
            <param name="content">Label of the key's alternative function.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NumPadKey.GetHashCode">
            <summary>
            Returns a hash code for this NumPadKey. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NumPadKey.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release special keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NumPadKey.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new NumPadKey instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NumPadKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.NumPadKey.VirtualKey">
            <summary>
            Gets or sets the key code of this key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.NumPadKey.NumCase">
            <summary>
            Gets or sets the key label.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.KanaKey">
            <summary>
            Represents keyboard keys that send unicode-character codes as input. 
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.#ctor">
            <summary>
            Initializes a new instance of the KanaKey class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the KanaKey class with specified character code.
            </summary>
            <param name="character">The character to send when this key is pressed.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.#ctor(System.Char,System.Char)">
            <summary>
            Initializes a new instance of the KanaKey class with specified character code.
            </summary>
            <param name="character">The character to send when this key is pressed.</param>
            <param name="smallLetter">Corresponding small kana.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.#ctor(System.Char,System.Object)">
            <summary>
            Initializes a new instance of the KanaKey class with specified character code and content.
            </summary>
            <param name="character">The character to send when this key is pressed.</param>
            <param name="content">Content sent as input to the focused control.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.#ctor(System.Char,System.Char,System.Object)">
            <summary>
            Initializes a new instance of the KanaKey class with specified character code.
            </summary>
            <param name="character">The character to send when this key is pressed.</param>
            <param name="smallLetter">Corresponding small kana.</param>
            <param name="content">Content sent as input to the focused control.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release modifier keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new KanaKey instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.KanaKey.GetHashCode">
            <summary>
            Returns a hash code for this KanaKey. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.KanaKey.Character">
            <summary>
            Gets or sets the Unicode character associated with this key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KanaKey.SmallLetter">
            <summary>
            Gets or sets the small-letter Kana associated with this key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KanaKey.LowerCase">
            <summary>
            Gets the lower-case character label.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KanaKey.UpperCase">
            <summary>
            Gets the upper-case character label.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KanaKey.Repeat">
            <summary>
            Gets or sets how many times to send the key code when this key is pressed.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KanaKey.IsDakuten">
            <summary>
            Specifies Dakuten modifier.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.KanaKey.IsHandakuten">
            <summary>
            Specifies Handakuten modifier.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.GradientBrush">
            <summary>
            Represents a linear gradient brush with 1, 2 or 6 colors.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.GradientBrush.#ctor(System.Collections.Generic.List{System.Drawing.Color},System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            Initializes a new instance of the GradientBrush class.
            </summary>
            <param name="colors">Brush colors</param>
            <param name="positions">Stop positions</param>
            <param name="angle">GradientBrush colors angle</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.GradientBrush.CreateBrush(System.Drawing.Rectangle)">
            <summary>
            Create Solid (if colors count = 1) or LinearGradientBrush (colors count >1)
            </summary>
            <param name="rect">Rectangle</param>
            <returns>Brush</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.GradientBrush.Clone">
            <summary>
            Clones this brush.
            </summary>
            <returns>object</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.GradientBrush.ToString">
            <summary>
            Returns XML representation of this brush.
            </summary>
            <returns>string</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.GradientBrush.Colors">
            <summary>
            Gets or sets the brush colors (must contain 1, 2 or 6 colors), you must to set Positions as well.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.GradientBrush.Positions">
            <summary>
            Get or set positions there must be 6 values in 0 - 1 range.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.GradientBrush.Angle">
            <summary>
            Get or set angle. Used only when colors are more than 1.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.VirtualKeyEventArgs">
            <summary>
            Contains data about KeyPressed events.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.VirtualKeyEventArgs.#ctor(MindFusion.UI.WinForms.Key)">
            <summary>
            Initializes a new instance of the VirtualKeyEventArgs class.
            </summary>
            <param name="key">MindFusion.UI.WinForms.Key</param>
        </member>
        <member name="P:MindFusion.UI.WinForms.VirtualKeyEventArgs.Key">
            <summary>
            Gets an instance of a Key-derived class that identifies the pressed key.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.NativeMethods">
            <summary>
            Imports Win32 API functions
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.NativeMethods.SWP_NOSIZE">
            <summary>
            This method translate virtual key code to shifted and normal character. 
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.LoadKeyboardLayout(System.String,System.UInt32)">
            <summary>
            Loads a new input locale identifier into the system.
            </summary>
            <param name="pwszKLID">Specifies the name of the input locale identifier to load.</param>
            <param name="flags">Specifies how the input locale identifier is to be loaded.</param>
            <returns>The input locale identifier to the locale matched with the requested name, or NULL if no matching locale is available.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.GetWindowRect(System.IntPtr,MindFusion.UI.WinForms.RECT@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window.
            </summary>
            <param name="hwnd">Handle to the window.</param>
            <param name="lpRect">Pointer to a structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.GetActiveKeyboardLayout">
            <summary>
            Returns active keyboard layout.
            </summary>
            <returns>long</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.ChangeLanguage(System.Int64,System.String)">
            <summary>
            Changes current keyboard layout.
            </summary>
            <param name="language">Input locale identifier to be activated.</param>
            <param name="cultureName">Specifies what keyboard layout to load into the system.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.GetAvailableKeyboardLayouts">
            <summary>
            Returns identifiers of current input locales in the system.
            </summary>
            <returns>List of KeyboardLayouts</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.SendKey(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Byte)">
            <summary>
            Sends specified key to the active window.
            </summary>
            <param name="holdShift">bool</param>
            <param name="holdControl">bool</param>
            <param name="holdAlt">bool</param>
            <param name="holdAltGr">bool</param>
            <param name="keyCode">byte</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.SendKey(System.Byte)">
            <summary>
            Sends specified key to the active window.
            </summary>
            <param name="keyCode">byte</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.SendChar(System.Char)">
            <summary>
            Sends specified char to the focused control.
            </summary>
            <param name="symbol">char</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.SendString(System.String)">
            <summary>
            Sends specified string to the focused control.
            </summary>
            <param name="content">string</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.NextLanguage">
            <summary>
            Sets the input locale identifier to the next installed locale.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.VirtualKeyCodeToCharacters(System.Byte)">
            <summary>
            Translates virtual key code to shifted and normal character. 
            </summary>
            <param name="keyCode">byte</param>
            <returns>APIKEY</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.Initialize(System.IntPtr)">
            <summary>
            Initializes window for win proc.
            </summary>
            <param name="handle">IntPtr</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.IsLocked(System.Byte)">
            <summary>
            Checks if specified key is locked. Only for special keys such as caps, shift, etc.
            </summary>
            <param name="keyCode">byte</param>
            <returns>bool</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.Unlock">
            <summary>
            Unlocks all special keys.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.Attach(System.IntPtr)">
            <summary>
            Attaches the keyboard to specified window.
            </summary>
            <param name="hwnd"></param>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.GetLanguageTag">
            <summary>
            Return two-letters ISO language name.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.MapVirtualKey(System.UInt32)">
            <summary>
            The MapsVirtualKey function translates (maps) a virtual-key code into a scan
            code or character value, or translates a scan code into a virtual-key code 
            </summary>
            <param name="p1">Specifies the virtual-key code or scan code for a key.
            How this value is interpreted depends on the value of the uMapType parameter</param>        
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            hook windows messages
            </summary>
            <param name="hwnd">IntPtr</param>
            <param name="msg">int</param>
            <param name="wParam">IntPtr</param>
            <param name="lParam">IntPtr</param>
            <param name="handled">ref bool</param>
            <returns>IntPtr</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.KeyboardHookProc(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            hook keyboard messages
            </summary>
            <param name="nCode">int</param>
            <param name="wParam">Int32</param>
            <param name="lParam">IntPtr</param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.Start">
            <summary>
            Start monitoring keyboard input events.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.Stop">
            <summary>
            Stop monitoring keyboard input events.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            PreFilterMessage
            </summary>
            <param name="m">Message</param>
            <returns>bool</returns>
        </member>
        <member name="E:MindFusion.UI.WinForms.NativeMethods.LayoutChanged">
            <summary>
            fires when layout was changed
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.NativeMethods.KeyboardHookStruct.vkCode">
            <summary>
            Specifies a virtual-key code. The code must be a value in the range 1 to 254. 
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.NativeMethods.KeyboardHookStruct.scanCode">
            <summary>
            Specifies a hardware scan code for the key. 
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.NativeMethods.KeyboardHookStruct.flags">
            <summary>
            Specifies the extended-key flag, event-injected flag, context code, and transition-state flag.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.NativeMethods.KeyboardHookStruct.time">
            <summary>
            Specifies the time stamp for this message.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.NativeMethods.KeyboardHookStruct.dwExtraInfo">
            <summary>
            Specifies extra information associated with the message. 
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.NativeMethods.KeyboardHookStruct.ToString">
            <summary>
            Override ToString
            </summary>
            <returns>string</returns>
        </member>
        <member name="T:MindFusion.UI.WinForms.RECT">
            <summary>
             Defines a rectangle by the coordinates of its upper-left and lower-right corners.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.RECT.Left">
            <summary>
            x position of upper-left corner
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.RECT.Top">
            <summary>
            y position of upper-left corner
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.RECT.Right">
            <summary>
            x position of lower-right corner
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.RECT.Bottom">
            <summary>
            y position of lower-right corner
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.RegularKey">
            <summary>
            Represents regular keyboard keys that send character codes as input.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.#ctor">
            <summary>
            Initializes a new instance of the RegularKey class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the RegularKey class with specified virtual key code.
            </summary>
            <param name="virtualKey">Virtual key code.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the RegularKey class with specified virtual key code and content.
            </summary>
            <param name="virtualKey">Virtual key code.</param>
            <param name="content">Content sent as input to the focused control.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release modifier keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new RegularKey instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.GetHashCode">
            <summary>
            Returns a hash code for this RegularKey. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.RegularKey.UpdateKey">
            <summary>
            Updates the key's labels for current language.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.LowerCase">
            <summary>
            The lower-case label to display.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.UpperCase">
            <summary>
            The upper-case label to display.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.AlterCase">
            <summary>
            The alter-case label to display.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.CapitalCase">
            <summary>
            The capital-case label to display.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.OverrideLabel">
            <summary>
            An overriding label for all cases.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.AltLock">
            <summary>
            AltLock; obsolete.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.ShiftLock">
            <summary>
            ShiftLock; obsolete.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.AltGrLock">
            <summary>
            AltGrLock; obsolete.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.ControlLock">
            <summary>
            ControlLock; obsolete.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.VirtualKey">
            <summary>
            Gets or sets the virtual key code of this key.
            </summary>
        </member>
        <member name="P:MindFusion.UI.WinForms.RegularKey.Repeat">
            <summary>
            Gets or sets how many times to send the key code when this key is pressed.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.CultureHandler">
            <summary>
            Tracks changes of current language for the process.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.CultureHandler.Handler">
            <summary>
            Invoked when the current language changes.
            </summary>
        </member>
        <member name="F:MindFusion.UI.WinForms.CultureHandler.Handle">
            <summary>
            The window handle whose thread's language to monitor.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.CultureHandler.Start">
            <summary>
            Starts monitoring current language of the thread.
            </summary>
        </member>
        <member name="T:MindFusion.UI.WinForms.SpecialKey">
            <summary>
            Represents special keys.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.#ctor">
            <summary>
            Initializes a new instace of the SpecialKey class.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instace of the SpecialKey class with specified virtual key code.
            </summary>
            <param name="virtualKey">Virtual key code.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instace of the SpecialKey class with specified virtual key code and content.
            </summary>
            <param name="virtualKey">Virtual key code.</param>
            <param name="content">The key's label.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.IsThis(System.Int32)">
            <summary>
            Gets whether specified virtual key code corresponds to this key.
            </summary>
            <param name="key">The virtual key code to check.</param>
            <returns>true if the key codes are equivalent, or false otherwise.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.UpdateKey">
            <summary>
            Updates the key's labels for current language.
            </summary>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.Send(System.Boolean)">
            <summary>
            Sends this key to the foreground window.
            </summary>
            <param name="releaseSpecialKeys">true to release modifier keys, or false otherwise.</param>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.Clone">
            <summary>
            Clones this key.
            </summary>
            <returns>A new SpecialKey instance.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified Key object represent the same value.
            </summary>
            <param name="obj">A Key object to compare to this instance.</param>
            <returns>true if obj is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:MindFusion.UI.WinForms.SpecialKey.GetHashCode">
            <summary>
            Returns a hash code for this SpecialKey. 
            </summary>
            <returns>The key's hash code.</returns>
        </member>
        <member name="P:MindFusion.UI.WinForms.SpecialKey.VirtualKey">
            <summary>
            Gets or sets the key code of this key.
            </summary>
        </member>
    </members>
</doc>
